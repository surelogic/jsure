<?xml version='1.0' encoding='UTF-8' standalone='yes'?>
<sea-summary time='May 13, 2010 11:41:53 AM'
	 project='TestUniquenessSanityChecks'>

<count NotUniquePromiseDrop='6'/>
<count ResultDrop='48'/>
<count LockModel='1'/>
<count RegionModel='2'/>
<count BorrowedPromiseDrop='15'/>
<count UniquePromiseDrop='20'/>
<count PromiseWarningDrop='95'/>
<ir-drop type='PromiseWarningDrop'
	 line='26'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='577'
	 hash='-1188821442'
	 context='-460572054'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:2 -- Unable to parse past @Unique    ___ return  , this  '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='61'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='1618'
	 hash='407949940'
	 context='1698781090'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:1 -- Unable to parse past @Unique   ___ return  '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='40'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='1689'
	 hash='-1154735298'
	 context='-877357955'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:4 -- Unable to parse past @Borrowed this ___ , return'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='97'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='3167'
	 hash='-1154735298'
	 context='1018391121'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:4 -- Unable to parse past @Borrowed this ___ , return'
	 category='Modeling problems'/>

<promise-drop type='UniquePromiseDrop'
	 line='14'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='249'
	 hash='-118286934'
	 context='-1404087067'
	 message='Unique on uniqueField3'
	 message-id='(115,uniqueField3)'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='34'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1150'
	 hash='0'
	 context='-2400530'
	 message='/TestUniquenessSanityChecks/src/conflicts/Test.java:0 -- Unknown test result type: INVALID'
	 category='Modeling problems'/>

<promise-drop type='BorrowedPromiseDrop'
	 line='31'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='1437'
	 hash='3559070'
	 context='1887569684'
	 message='Borrowed(this) on borrowed.TestBadArgs.annotatedMethod4()'
	 message-id='(105,this,borrowed.TestBadArgs.annotatedMethod4())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='52'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='2039'
	 hash='224485008'
	 context='-1224405097'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed return'
	 category='Modeling problems'/>

<promise-drop type='UniquePromiseDrop'
	 line='94'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2727'
	 hash='3559070'
	 context='1126496503'
	 message='Unique(this) on unique.TestBadArgs.annotatedMethod4()'
	 message-id='(116,this,unique.TestBadArgs.annotatedMethod4())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='63'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='1698'
	 hash='-335485054'
	 context='-501637072'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:1 -- Unable to parse past @Unique   ___ this, return '
	 category='Modeling problems'/>

<promise-drop type='BorrowedPromiseDrop'
	 line='8'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='228'
	 hash='183592227'
	 context='-1356326824'
	 message='Borrowed(p) on borrowed.TestBadArgs.method3(java.lang.Object)'
	 message-id='(105,p,borrowed.TestBadArgs.method3(java.lang.Object))'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='19'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='1123'
	 hash='-1314949511'
	 context='-157338472'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:1 -- Unable to parse past @Borrowed   ___ f, a, b'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='100'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2892'
	 hash='-176181199'
	 context='1126498425'
	 message='Unique may not be used on void types on Unique'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='112'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='3226'
	 hash='2007102640'
	 context='561708012'
	 message='Control flow of method unique.TestBadArgs.annotatedMethod4a()'
	 message-id='(300,method,unique.TestBadArgs.annotatedMethod4a())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<promise-drop type='BorrowedPromiseDrop'
	 line='6'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='105'
	 hash='183592227'
	 context='-1356326824'
	 message='Borrowed(p) on borrowed.TestBadArgs.method1(java.lang.Object)'
	 message-id='(105,p,borrowed.TestBadArgs.method1(java.lang.Object))'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='82'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='2794'
	 hash='-1978670878'
	 context='-325632809'
	 message='Control flow of constructor borrowed.TestBadArgs.Constructor4.Constructor4()'
	 message-id='(300,constructor,borrowed.TestBadArgs.Constructor4.Constructor4())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='25'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='1277'
	 hash='0'
	 context='1437745322'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed '
	 category='Modeling problems'/>

<promise-drop type='UniquePromiseDrop'
	 line='21'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='368'
	 hash='-176181199'
	 context='-461841702'
	 message='Unique(return) on nonReference.Test.goodReturn()'
	 message-id='(116,return,nonReference.Test.goodReturn())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='UniquePromiseDrop'
	 line='121'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='3514'
	 hash='3559070'
	 context='561797385'
	 message='Unique(this) on unique.TestBadArgs.annotatedMethod7a()'
	 message-id='(116,this,unique.TestBadArgs.annotatedMethod7a())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='103'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2972'
	 hash='449027118'
	 context='1126499386'
	 message='Control flow of method unique.TestBadArgs.annotatedMethod7()'
	 message-id='(300,method,unique.TestBadArgs.annotatedMethod7())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<result-drop type='ResultDrop'
	 line='8'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='109'
	 hash='508406589'
	 context='1300978326'
	 message='Assurance conservatively depends on the unique fields accessed in method unique.TestBadArgs.TestBadArgs()'
	 message-id='(306,unique.TestBadArgs.TestBadArgs())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='aggregatedUniqueFields'/>

<result-drop type='ResultDrop'
	 line='113'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='3602'
	 hash='109801339'
	 context='1327213385'
	 message='Unique return value of call super'
	 message-id='(301,super)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='uniqueReturnDrop'/>

<promise-drop type='UniquePromiseDrop'
	 line='103'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2980'
	 hash='3559070'
	 context='1126499386'
	 message='Unique(this) on unique.TestBadArgs.annotatedMethod7()'
	 message-id='(116,this,unique.TestBadArgs.annotatedMethod7())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='97'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2807'
	 hash='-176181199'
	 context='1126497464'
	 message='Unique may not be used on void types on Unique'
	 category='Modeling problems'/>

<promise-drop type='UniquePromiseDrop'
	 line='112'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='3240'
	 hash='3559070'
	 context='561708012'
	 message='Unique(this) on unique.TestBadArgs.annotatedMethod4a()'
	 message-id='(116,this,unique.TestBadArgs.annotatedMethod4a())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='102'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='3293'
	 hash='-1314949511'
	 context='1247681708'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:1 -- Unable to parse past @Borrowed   ___ f, a, b'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='132'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='4064'
	 hash='-1314949511'
	 context='1901281665'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:1 -- Unable to parse past @Borrowed   ___ f, a, b'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='39'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='684'
	 hash='100359295'
	 context='-1686389980'
	 message='Unique may not be used on primitive types on Unique'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='73'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='1305'
	 hash='100359295'
	 context='-1686389980'
	 message='NotUnique may not be used on primitive types on NotUnique'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='691'
	 hash='0'
	 context='-731612215'
	 message='/TestUniquenessSanityChecks/src/conflicts/Test.java:0 -- Unknown test result type: INVALID'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='43'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='1778'
	 hash='-1314949511'
	 context='962197795'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:1 -- Unable to parse past @Borrowed   ___ f, a, b'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='8'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='198'
	 hash='-354170841'
	 context='585171112'
	 message='Control flow of method borrowed.TestBadArgs.method3(java.lang.Object)'
	 message-id='(300,method,borrowed.TestBadArgs.method3(java.lang.Object))'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='34'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1158'
	 hash='3559070'
	 context='-642252685'
	 message='Cannot be both unique and not unique on Unique'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='56'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='991'
	 hash='100359295'
	 context='-1686389980'
	 message='Borrowed may not be used on primitive types on Borrowed'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='8'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='109'
	 hash='109801339'
	 context='1300978326'
	 message='Unique return value of call super'
	 message-id='(301,super)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='uniqueReturnDrop'/>

<ir-drop type='PromiseWarningDrop'
	 line='30'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1051'
	 hash='3559070'
	 context='-1529756366'
	 message='Cannot be both unique and borrowed on Unique'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='67'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='1869'
	 hash='-1438143042'
	 context='-749677204'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:1 -- Unable to parse past @Unique   ___ a, b, c'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='117'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='3668'
	 hash='224485008'
	 context='-197917616'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed return'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='38'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='923'
	 hash='-199269488'
	 context='958903961'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:2 -- Unable to parse past @Unique    ___ return  '
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='121'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='3500'
	 hash='879706547'
	 context='561797385'
	 message='Control flow of method unique.TestBadArgs.annotatedMethod7a()'
	 message-id='(300,method,unique.TestBadArgs.annotatedMethod7a())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<result-drop type='ResultDrop'
	 line='6'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='85'
	 hash='-416210455'
	 context='-2020852442'
	 message='Control flow of method borrowed.TestBadArgs.method1(java.lang.Object)'
	 message-id='(300,method,borrowed.TestBadArgs.method1(java.lang.Object))'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='58'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='2225'
	 hash='-1154735298'
	 context='1631907559'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:4 -- Unable to parse past @Borrowed this ___ , return'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='28'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='464'
	 hash='1723996495'
	 context='1208234378'
	 message='Control flow of method nonReference.Test.goodUniqueReceiver()'
	 message-id='(300,method,nonReference.Test.goodUniqueReceiver())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<result-drop type='ResultDrop'
	 line='8'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='145'
	 hash='109801339'
	 context='-2029179137'
	 message='Effects of call super'
	 message-id='(304,super)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='effectOfCallDrop'/>

<promise-drop type='BorrowedPromiseDrop'
	 line='24'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='902'
	 hash='3559070'
	 context='787999956'
	 message='Borrowed(this) on conflicts.Test.xxx2_good()'
	 message-id='(105,this,conflicts.Test.xxx2_good())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='75'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2203'
	 hash='-335485054'
	 context='-451877463'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:1 -- Unable to parse past @Unique   ___ this, return '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='34'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='1517'
	 hash='224485008'
	 context='-900406167'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed return'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='29'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='669'
	 hash='1058961091'
	 context='2046845295'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:2 -- Unable to parse past @Unique    ___ a  '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='127'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='3700'
	 hash='-1371145776'
	 context='861298765'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:7 -- Unable to parse past @Unique  this,  ___ a, b, c'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='118'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='3419'
	 hash='-176181199'
	 context='561767594'
	 message='Unique may not be used on void types on Unique'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='59'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='1541'
	 hash='881623262'
	 context='-2000981876'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:1 -- Unable to parse past @Unique   ___ this '
	 category='Modeling problems'/>

<promise-drop type='BorrowedPromiseDrop'
	 line='112'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='3543'
	 hash='3559070'
	 context='1327213385'
	 message='Borrowed(this) on borrowed.TestBadArgs.Constructor4a.Constructor4a()'
	 message-id='(105,this,borrowed.TestBadArgs.Constructor4a.Constructor4a())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='777'
	 hash='1083722338'
	 context='-997385521'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed this'
	 category='Modeling problems'/>

<promise-drop type='BorrowedPromiseDrop'
	 line='82'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='2804'
	 hash='3559070'
	 context='-325632809'
	 message='Borrowed(this) on borrowed.TestBadArgs.Constructor4.Constructor4()'
	 message-id='(105,this,borrowed.TestBadArgs.Constructor4.Constructor4())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='8'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='109'
	 hash='109801339'
	 context='1300978326'
	 message='Effects of call super'
	 message-id='(304,super)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='effectOfCallDrop'/>

<ir-drop type='PromiseWarningDrop'
	 line='122'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='3796'
	 hash='1511070782'
	 context='1229875680'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed return, this'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='91'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2652'
	 hash='1088'
	 context='-12603907'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:0 -- Unable to parse: @Unique '
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='21'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='360'
	 hash='1235767395'
	 context='-461841702'
	 message='Control flow of method nonReference.Test.goodReturn()'
	 message-id='(300,method,nonReference.Test.goodReturn())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<result-drop type='ResultDrop'
	 line='100'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2884'
	 hash='-1293783217'
	 context='1126498425'
	 message='Control flow of method unique.TestBadArgs.annotatedMethod6()'
	 message-id='(300,method,unique.TestBadArgs.annotatedMethod6())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<promise-drop type='UniquePromiseDrop'
	 line='11'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='202'
	 hash='3178685'
	 context='-1011590775'
	 message='Unique on good'
	 message-id='(115,good)'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='16'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='275'
	 hash='-176181199'
	 context='68332298'
	 message='Unique may not be used on primitive types on Unique'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='35'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='573'
	 hash='-33114106'
	 context='-218325003'
	 message='Control flow of method nonReference.Test.goodUnique(nonReference.Test)'
	 message-id='(300,method,nonReference.Test.goodUnique(nonReference.Test))'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='106'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='3069'
	 hash='-1438143042'
	 context='816882564'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:1 -- Unable to parse past @Unique   ___ a, b, c'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='745'
	 hash='0'
	 context='1398326969'
	 message='/TestUniquenessSanityChecks/src/conflicts/Test.java:0 -- Unknown test result type: INVALID'
	 category='Modeling problems'/>

<promise-drop type='UniquePromiseDrop'
	 line='32'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='754'
	 hash='628072439'
	 context='-577026020'
	 message='Unique on uniqueField3a'
	 message-id='(115,uniqueField3a)'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='72'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='2570'
	 hash='0'
	 context='-1495338113'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed '
	 category='Modeling problems'/>

<promise-drop type='NotUniquePromiseDrop'
	 line='69'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='1211'
	 hash='-1686390414'
	 context='-1686389980'
	 message='NotUnique on nonReference.Test(ParameterDeclaration)'
	 message-id='(110,nonReference.Test(ParameterDeclaration))'
	 category='Uniqueness'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='8'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='145'
	 hash='-771460111'
	 context='-2029179137'
	 message='Control flow of constructor nonReference.Test.Test()'
	 message-id='(300,constructor,nonReference.Test.Test())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<result-drop type='ResultDrop'
	 line='6'
	 file='/TestUniquenessSanityChecks/src/borrowed/BorrowedStaticMethod.java'
	 offset='94'
	 hash='293892272'
	 context='-290148362'
	 message='Control flow of method borrowed.BorrowedStaticMethod.foo()'
	 message-id='(300,method,borrowed.BorrowedStaticMethod.foo())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='42'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1421'
	 hash='3559070'
	 context='1132754677'
	 message='Cannot be both unique and borrowed on Unique'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='121'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='3514'
	 hash='-176181199'
	 context='561797385'
	 message='Unique may not be used on void types on Unique'
	 category='Modeling problems'/>

<promise-drop type='NotUniquePromiseDrop'
	 line='38'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1310'
	 hash='3559070'
	 context='-830693296'
	 message='NotUnique on conflicts.Test(ReceiverDeclaration)'
	 message-id='(110,conflicts.Test(ReceiverDeclaration))'
	 category='Uniqueness'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='85'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2477'
	 hash='0'
	 context='35613615'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:0 -- Unable to parse: @Unique '
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='10'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='229'
	 hash='1634730212'
	 context='733150728'
	 message='Control flow of method conflicts.Test.method2_good(java.lang.Object)'
	 message-id='(300,method,conflicts.Test.method2_good(java.lang.Object))'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='28'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='1361'
	 hash='1088'
	 context='-10471113'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='17'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='943'
	 hash='1511070782'
	 context='-1385361293'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed return, this'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='719'
	 hash='0'
	 context='696761606'
	 message='/TestUniquenessSanityChecks/src/conflicts/Test.java:0 -- Unknown test result type: INVALID'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='22'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='1180'
	 hash='0'
	 context='1437744361'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed '
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='0'
	 file='java.lang.[]'
	 offset='-1'
	 hash='-1305411288'
	 context='156839830'
	 message='Region public []'
	 message-id='(117,public,,[])'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='94'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2719'
	 hash='-484436591'
	 context='1126496503'
	 message='Control flow of method unique.TestBadArgs.annotatedMethod4()'
	 message-id='(300,method,unique.TestBadArgs.annotatedMethod4())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='11'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='449'
	 hash='1511070782'
	 context='35251826'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed return, this'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='18'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='1033'
	 hash='-1154735298'
	 context='-886707853'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed this, return'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='13'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='492'
	 hash='0'
	 context='696761606'
	 message='/TestUniquenessSanityChecks/src/conflicts/Test.java:0 -- Unknown test result type: INVALID'
	 category='Modeling problems'/>

<promise-drop type='UniquePromiseDrop'
	 line='100'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2892'
	 hash='3559070'
	 context='1126498425'
	 message='Unique(this) on unique.TestBadArgs.annotatedMethod6()'
	 message-id='(116,this,unique.TestBadArgs.annotatedMethod6())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='13'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='492'
	 hash='183592227'
	 context='-2661919'
	 message='Cannot be both unique and not unique on Unique'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='112'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='3527'
	 hash='-1438482517'
	 context='1327213385'
	 message='Control flow of constructor borrowed.TestBadArgs.Constructor4a.Constructor4a()'
	 message-id='(300,constructor,borrowed.TestBadArgs.Constructor4a.Constructor4a())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='73'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2116'
	 hash='407949940'
	 context='291719671'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:1 -- Unable to parse past @Unique   ___ return  '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='92'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='3041'
	 hash='1511070782'
	 context='1428357553'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed return, this'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='77'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='2691'
	 hash='1088'
	 context='465274323'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='46'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='1869'
	 hash='1088'
	 context='-1638517975'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='115'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='3327'
	 hash='-176181199'
	 context='561737803'
	 message='Unique may not be used on void types on Unique'
	 category='Modeling problems'/>

<promise-drop type='BorrowedPromiseDrop'
	 line='49'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='1952'
	 hash='3559070'
	 context='-1614827153'
	 message='Borrowed(this) on borrowed.TestBadArgs.annotatedMethod4a()'
	 message-id='(105,this,borrowed.TestBadArgs.annotatedMethod4a())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='BorrowedPromiseDrop'
	 line='38'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1268'
	 hash='3559070'
	 context='-830693296'
	 message='Borrowed(this) on conflicts.Test.xxx6_good()'
	 message-id='(105,this,conflicts.Test.xxx6_good())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='55'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='2129'
	 hash='1511070782'
	 context='-726670968'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed return, this'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='719'
	 hash='183592227'
	 context='-2661919'
	 message='Cannot be both unique and borrowed on Unique'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='30'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1043'
	 hash='-1826707606'
	 context='-1529756366'
	 message='Control flow of method conflicts.Test.xxx4_bad()'
	 message-id='(300,method,conflicts.Test.xxx4_bad())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<result-drop type='ResultDrop'
	 line='42'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1375'
	 hash='-1439459449'
	 context='1132754677'
	 message='Control flow of method conflicts.Test.xxx7_bad()'
	 message-id='(300,method,conflicts.Test.xxx7_bad())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='67'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='2437'
	 hash='0'
	 context='-984804897'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed '
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='14'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='563'
	 hash='-1257037336'
	 context='465123716'
	 message='Control flow of method conflicts.Test.method6_good(java.lang.Object)'
	 message-id='(300,method,conflicts.Test.method6_good(java.lang.Object))'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='44'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1449'
	 hash='0'
	 context='525010205'
	 message='/TestUniquenessSanityChecks/src/conflicts/Test.java:0 -- Unknown test result type: INVALID'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='12'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='398'
	 hash='0'
	 context='696761606'
	 message='/TestUniquenessSanityChecks/src/conflicts/Test.java:0 -- Unknown test result type: INVALID'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='44'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='1110'
	 hash='-1188821442'
	 context='977806635'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:2 -- Unable to parse past @Unique    ___ return  , this  '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='107'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='3422'
	 hash='1088'
	 context='330973092'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed '
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='31'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='1427'
	 hash='-484436591'
	 context='1887569684'
	 message='Control flow of method borrowed.TestBadArgs.annotatedMethod4()'
	 message-id='(300,method,borrowed.TestBadArgs.annotatedMethod4())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='13'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='615'
	 hash='-1314949511'
	 context='-578424339'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:1 -- Unable to parse past @Borrowed   ___ f, a, b'
	 category='Modeling problems'/>

<promise-drop type='UniquePromiseDrop'
	 line='55'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='1396'
	 hash='183592227'
	 context='762509333'
	 message='Unique(p) on unique.TestBadArgs.method2(java.lang.Object)'
	 message-id='(116,p,unique.TestBadArgs.method2(java.lang.Object))'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='UniquePromiseDrop'
	 line='8'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='109'
	 hash='-118286936'
	 context='-1404087069'
	 message='Unique on uniqueField1'
	 message-id='(115,uniqueField1)'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='10'
	 file='/TestUniquenessSanityChecks/src/borrowed/BorrowedStaticMethod.java'
	 offset='244'
	 hash='1083722338'
	 context='1410810245'
	 message='/TestUniquenessSanityChecks/src/borrowed/BorrowedStaticMethod.java:244 -- Cannot use @Borrowed(this) on a static method, since it does not have a receiver'
	 category='Modeling problems'/>

<promise-drop type='UniquePromiseDrop'
	 line='11'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='171'
	 hash='-118286935'
	 context='-1404087068'
	 message='Unique on uniqueField2'
	 message-id='(115,uniqueField2)'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='13'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='468'
	 hash='-950917793'
	 context='-1759318535'
	 message='Control flow of method conflicts.Test.method5_bad(java.lang.Object)'
	 message-id='(300,method,conflicts.Test.method5_bad(java.lang.Object))'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='35'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1186'
	 hash='0'
	 context='-1249997157'
	 message='/TestUniquenessSanityChecks/src/conflicts/Test.java:0 -- Unknown test result type: INVALID'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='49'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='1936'
	 hash='2007102640'
	 context='-1614827153'
	 message='Control flow of method borrowed.TestBadArgs.annotatedMethod4a()'
	 message-id='(300,method,borrowed.TestBadArgs.annotatedMethod4a())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<promise-drop type='BorrowedPromiseDrop'
	 line='10'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='254'
	 hash='183592227'
	 context='-2661919'
	 message='Borrowed(p) on conflicts.Test.method2_good(java.lang.Object)'
	 message-id='(105,p,conflicts.Test.method2_good(java.lang.Object))'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='NotUniquePromiseDrop'
	 line='11'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='326'
	 hash='183592227'
	 context='-2661919'
	 message='NotUnique on conflicts.Test(ParameterDeclaration)'
	 message-id='(110,conflicts.Test(ParameterDeclaration))'
	 category='Uniqueness'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='8'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='145'
	 hash='-771460111'
	 context='-2029179137'
	 message='Assurance conservatively depends on the unique fields accessed in method nonReference.Test.Test()'
	 message-id='(306,nonReference.Test.Test())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='aggregatedUniqueFields'/>

<promise-drop type='NotUniquePromiseDrop'
	 line='14'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='619'
	 hash='183592227'
	 context='-2661919'
	 message='NotUnique on conflicts.Test(ParameterDeclaration)'
	 message-id='(110,conflicts.Test(ParameterDeclaration))'
	 category='Uniqueness'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='BorrowedPromiseDrop'
	 line='6'
	 file='/TestUniquenessSanityChecks/src/borrowed/BorrowedStaticMethod.java'
	 offset='104'
	 hash='3559070'
	 context='-290148362'
	 message='Borrowed(this) on borrowed.BorrowedStaticMethod.foo()'
	 message-id='(105,this,borrowed.BorrowedStaticMethod.foo())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='35'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='834'
	 hash='-1506032926'
	 context='599197191'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:2 -- Unable to parse past @Unique    ___ this  '
	 category='Modeling problems'/>

<promise-drop type='UniquePromiseDrop'
	 line='28'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='472'
	 hash='3559070'
	 context='1208234378'
	 message='Unique(this) on nonReference.Test.goodUniqueReceiver()'
	 message-id='(116,this,nonReference.Test.goodUniqueReceiver())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='79'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2388'
	 hash='-1438143042'
	 context='1862964461'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:1 -- Unable to parse past @Unique   ___ a, b, c'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='7'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='131'
	 hash='-385190648'
	 context='1429642983'
	 message='Control flow of method borrowed.TestBadArgs.method2(java.lang.Object)'
	 message-id='(300,method,borrowed.TestBadArgs.method2(java.lang.Object))'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='12'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='532'
	 hash='-1154735298'
	 context='1236479346'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed this, return'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='61'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='2321'
	 hash='-1314949511'
	 context='-1530786005'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:1 -- Unable to parse past @Borrowed   ___ f, a, b'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='42'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1375'
	 hash='0'
	 context='-869137907'
	 message='/TestUniquenessSanityChecks/src/conflicts/Test.java:0 -- Unknown test result type: INVALID'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='20'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='404'
	 hash='-199269488'
	 context='1788954812'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:2 -- Unable to parse past @Unique    ___ return  '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='12'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='424'
	 hash='0'
	 context='-731612215'
	 message='/TestUniquenessSanityChecks/src/conflicts/Test.java:0 -- Unknown test result type: INVALID'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='45'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='761'
	 hash='1510024684'
	 context='-1399479027'
	 message='Control flow of method nonReference.Test.goodBorrowedReceiver()'
	 message-id='(300,method,nonReference.Test.goodBorrowedReceiver())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<promise-drop type='UniquePromiseDrop'
	 line='35'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='596'
	 hash='-1686390414'
	 context='-1686389980'
	 message='Unique(p) on nonReference.Test.goodUnique(nonReference.Test)'
	 message-id='(116,p,nonReference.Test.goodUnique(nonReference.Test))'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='124'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='3610'
	 hash='-1438143042'
	 context='648537152'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:1 -- Unable to parse past @Unique   ___ a, b, c'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='31'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1079'
	 hash='0'
	 context='763318346'
	 message='/TestUniquenessSanityChecks/src/conflicts/Test.java:0 -- Unknown test result type: INVALID'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='83'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='2862'
	 hash='109801339'
	 context='-325632809'
	 message='Effects of call super'
	 message-id='(304,super)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='effectOfCallDrop'/>

<ir-drop type='PromiseWarningDrop'
	 line='77'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2295'
	 hash='-1310920058'
	 context='-356897499'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:1 -- Unable to parse past @Unique   ___ return , this '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='17'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='322'
	 hash='-1506032926'
	 context='-64988914'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:2 -- Unable to parse past @Unique    ___ this  '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='127'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='3930'
	 hash='-1154735298'
	 context='-1605756578'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:4 -- Unable to parse past @Borrowed this ___ , return'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='12'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='398'
	 hash='183592227'
	 context='-2661919'
	 message='Cannot be both unique and borrowed on Unique'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='52'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='874'
	 hash='-384133303'
	 context='552693714'
	 message='Control flow of method nonReference.Test.goodBorrowed(nonReference.Test)'
	 message-id='(300,method,nonReference.Test.goodBorrowed(nonReference.Test))'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<promise-drop type='BorrowedPromiseDrop'
	 line='14'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='701'
	 hash='183592227'
	 context='-1356326824'
	 message='Borrowed(p) on borrowed.TestBadArgs.method3a(java.lang.Object)'
	 message-id='(105,p,borrowed.TestBadArgs.method3a(java.lang.Object))'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='13'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='518'
	 hash='0'
	 context='1398326969'
	 message='/TestUniquenessSanityChecks/src/conflicts/Test.java:0 -- Unknown test result type: INVALID'
	 category='Modeling problems'/>

<promise-drop type='UniquePromiseDrop'
	 line='53'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='1333'
	 hash='183592227'
	 context='762509333'
	 message='Unique(p) on unique.TestBadArgs.method1(java.lang.Object)'
	 message-id='(116,p,unique.TestBadArgs.method1(java.lang.Object))'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='8'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='145'
	 hash='109801339'
	 context='-2029179137'
	 message='Unique return value of call super'
	 message-id='(301,super)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='uniqueReturnDrop'/>

<result-drop type='ResultDrop'
	 line='38'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1258'
	 hash='2139857944'
	 context='-830693296'
	 message='Control flow of method conflicts.Test.xxx6_good()'
	 message-id='(300,method,conflicts.Test.xxx6_good())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<promise-drop type='BorrowedPromiseDrop'
	 line='52'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='899'
	 hash='-1686390414'
	 context='-1686389980'
	 message='Borrowed(p) on nonReference.Test.goodBorrowed(nonReference.Test)'
	 message-id='(105,p,nonReference.Test.goodBorrowed(nonReference.Test))'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='21'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='819'
	 hash='-688094317'
	 context='-954810379'
	 message='Control flow of method conflicts.Test.xxx1_good()'
	 message-id='(300,method,conflicts.Test.xxx1_good())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='719'
	 hash='183592227'
	 context='-2661919'
	 message='Cannot be both unique and not unique on Unique'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='69'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='1920'
	 hash='2026340480'
	 context='1402920760'
	 message='Control flow of method unique.TestBadArgs.method3a(java.lang.Object)'
	 message-id='(300,method,unique.TestBadArgs.method3a(java.lang.Object))'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<result-drop type='ResultDrop'
	 line='118'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='3405'
	 hash='-1607806286'
	 context='561767594'
	 message='Control flow of method unique.TestBadArgs.annotatedMethod6a()'
	 message-id='(300,method,unique.TestBadArgs.annotatedMethod6a())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='47'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='1209'
	 hash='1058961091'
	 context='-1349517690'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:2 -- Unable to parse past @Unique    ___ a  '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='109'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='3158'
	 hash='1088'
	 context='-1621451357'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:0 -- Unable to parse: @Unique '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='9'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='297'
	 hash='1083722338'
	 context='-271545450'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed this'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='83'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='2862'
	 hash='109801339'
	 context='-325632809'
	 message='Unique return value of call super'
	 message-id='(301,super)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='uniqueReturnDrop'/>

<ir-drop type='PromiseWarningDrop'
	 line='103'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2980'
	 hash='-176181199'
	 context='1126499386'
	 message='Unique may not be used on void types on Unique'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='12'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='374'
	 hash='-962233920'
	 context='1290884280'
	 message='Control flow of method conflicts.Test.method4_bad(java.lang.Object)'
	 message-id='(300,method,conflicts.Test.method4_bad(java.lang.Object))'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<result-drop type='ResultDrop'
	 line='14'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='664'
	 hash='2026340480'
	 context='1573814357'
	 message='Control flow of method borrowed.TestBadArgs.method3a(java.lang.Object)'
	 message-id='(300,method,borrowed.TestBadArgs.method3a(java.lang.Object))'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<promise-drop type='BorrowedPromiseDrop'
	 line='45'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='771'
	 hash='3559070'
	 context='-1399479027'
	 message='Borrowed(this) on nonReference.Test.goodBorrowedReceiver()'
	 message-id='(105,this,nonReference.Test.goodBorrowedReceiver())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='NotUniquePromiseDrop'
	 line='62'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='1081'
	 hash='3559070'
	 context='-162777461'
	 message='NotUnique on nonReference.Test(ReceiverDeclaration)'
	 message-id='(110,nonReference.Test(ReceiverDeclaration))'
	 category='Uniqueness'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='24'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='892'
	 hash='-981497324'
	 context='787999956'
	 message='Control flow of method conflicts.Test.xxx2_good()'
	 message-id='(300,method,conflicts.Test.xxx2_good())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='8'
	 file='/TestUniquenessSanityChecks/src/nonReference/Test.java'
	 offset='145'
	 hash='97285'
	 context='-1418110535'
	 message='Unique may not be used on primitive types on Unique'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='65'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='1783'
	 hash='-1310920058'
	 context='1395887156'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:1 -- Unable to parse past @Unique   ___ return , this '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='41'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='1014'
	 hash='-1168926358'
	 context='989160063'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:1 -- Unable to parse past @Unique   ___ this , return '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='30'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1043'
	 hash='0'
	 context='-889904211'
	 message='/TestUniquenessSanityChecks/src/conflicts/Test.java:0 -- Unknown test result type: INVALID'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='9'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='159'
	 hash='1283930275'
	 context='800157481'
	 message='Control flow of method conflicts.Test.method1_good(java.lang.Object)'
	 message-id='(300,method,conflicts.Test.method1_good(java.lang.Object))'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<promise-drop type='UniquePromiseDrop'
	 line='57'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='1471'
	 hash='183592227'
	 context='762509333'
	 message='Unique(p) on unique.TestBadArgs.method3(java.lang.Object)'
	 message-id='(116,p,unique.TestBadArgs.method3(java.lang.Object))'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='53'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='1313'
	 hash='-416210455'
	 context='-225249821'
	 message='Control flow of method unique.TestBadArgs.method1(java.lang.Object)'
	 message-id='(300,method,unique.TestBadArgs.method1(java.lang.Object))'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<ir-drop type='PromiseWarningDrop'
	 line='88'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2572'
	 hash='0'
	 context='35614576'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:0 -- Unable to parse: @Unique '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='87'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='2921'
	 hash='224485008'
	 context='-605041821'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed return'
	 category='Modeling problems'/>

<promise-drop type='UniquePromiseDrop'
	 line='21'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='827'
	 hash='3559070'
	 context='-954810379'
	 message='Unique(this) on conflicts.Test.xxx1_good()'
	 message-id='(116,this,conflicts.Test.xxx1_good())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='UniquePromiseDrop'
	 line='9'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='184'
	 hash='183592227'
	 context='-2661919'
	 message='Unique(p) on conflicts.Test.method1_good(java.lang.Object)'
	 message-id='(116,p,conflicts.Test.method1_good(java.lang.Object))'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='10'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='372'
	 hash='224485008'
	 context='-1270410172'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed return'
	 category='Modeling problems'/>

<promise-drop type='UniquePromiseDrop'
	 line='118'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='3419'
	 hash='3559070'
	 context='561767594'
	 message='Unique(this) on unique.TestBadArgs.annotatedMethod6a()'
	 message-id='(116,this,unique.TestBadArgs.annotatedMethod6a())'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='8'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='109'
	 hash='508406589'
	 context='1300978326'
	 message='Control flow of constructor unique.TestBadArgs.TestBadArgs()'
	 message-id='(300,constructor,unique.TestBadArgs.TestBadArgs())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<promise-drop type='LockModel'
	 line='0'
	 file='java.lang.Object'
	 offset='2147483647'
	 hash='1709211273'
	 context='1063877011'
	 message='RegionLock java.lang.Object.MUTEX is this protects WaitQueue on Object'
	 message-id='(100,java.lang.Object.MUTEX,this,WaitQueue,Object)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='37'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='1600'
	 hash='1511070782'
	 context='-1737033796'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed return, this'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='55'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='1376'
	 hash='-385190648'
	 context='-1069721692'
	 message='Control flow of method unique.TestBadArgs.method2(java.lang.Object)'
	 message-id='(300,method,unique.TestBadArgs.method2(java.lang.Object))'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<result-drop type='ResultDrop'
	 line='57'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='1443'
	 hash='-354170841'
	 context='-1914193563'
	 message='Control flow of method unique.TestBadArgs.method3(java.lang.Object)'
	 message-id='(300,method,unique.TestBadArgs.method3(java.lang.Object))'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<result-drop type='ResultDrop'
	 line='34'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1150'
	 hash='-1697624887'
	 context='-642252685'
	 message='Control flow of method conflicts.Test.xxx5_bad()'
	 message-id='(300,method,conflicts.Test.xxx5_bad())'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<promise-drop type='BorrowedPromiseDrop'
	 line='7'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='151'
	 hash='183592227'
	 context='-1356326824'
	 message='Borrowed(p) on borrowed.TestBadArgs.method2(java.lang.Object)'
	 message-id='(105,p,borrowed.TestBadArgs.method2(java.lang.Object))'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='0'
	 file='java.lang.[]'
	 offset='-1'
	 hash='-1305411288'
	 context='156839830'
	 message='Region public length'
	 message-id='(117,public,,length)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='16'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='859'
	 hash='224485008'
	 context='1782190689'
	 message='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java:0 -- Unable to parse: @Borrowed return'
	 category='Modeling problems'/>

<promise-drop type='NotUniquePromiseDrop'
	 line='27'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='978'
	 hash='3559070'
	 context='-1764157005'
	 message='NotUnique on conflicts.Test(ReceiverDeclaration)'
	 message-id='(110,conflicts.Test(ReceiverDeclaration))'
	 category='Uniqueness'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='42'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1421'
	 hash='3559070'
	 context='1132754677'
	 message='Cannot be both unique and not unique on Unique'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='23'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='488'
	 hash='-1168926358'
	 context='1395430294'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:1 -- Unable to parse past @Unique   ___ this , return '
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='43'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='1413'
	 hash='0'
	 context='1772606832'
	 message='/TestUniquenessSanityChecks/src/conflicts/Test.java:0 -- Unknown test result type: INVALID'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='15'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='667'
	 hash='-928285539'
	 context='730210427'
	 message='Control flow of method conflicts.Test.method7_bad(java.lang.Object)'
	 message-id='(300,method,conflicts.Test.method7_bad(java.lang.Object))'
	 proved-consistent='true'
	 consistent='true'
	 result-type='methodControlFlow'/>

<promise-drop type='UniquePromiseDrop'
	 line='69'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='1955'
	 hash='183592227'
	 context='762509333'
	 message='Unique(p) on unique.TestBadArgs.method3a(java.lang.Object)'
	 message-id='(116,p,unique.TestBadArgs.method3a(java.lang.Object))'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='113'
	 file='/TestUniquenessSanityChecks/src/borrowed/TestBadArgs.java'
	 offset='3602'
	 hash='109801339'
	 context='1327213385'
	 message='Effects of call super'
	 message-id='(304,super)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='effectOfCallDrop'/>

<promise-drop type='BorrowedPromiseDrop'
	 line='14'
	 file='/TestUniquenessSanityChecks/src/conflicts/Test.java'
	 offset='588'
	 hash='183592227'
	 context='-2661919'
	 message='Borrowed(p) on conflicts.Test.method6_good(java.lang.Object)'
	 message-id='(105,p,conflicts.Test.method6_good(java.lang.Object))'
	 category='Uniqueness'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='71'
	 file='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java'
	 offset='2032'
	 hash='881623262'
	 context='11613645'
	 message='/TestUniquenessSanityChecks/src/unique/TestBadArgs.java:1 -- Unable to parse past @Unique   ___ this '
	 category='Modeling problems'/>

</sea-summary>

