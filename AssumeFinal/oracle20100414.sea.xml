<?xml version='1.0' encoding='UTF-8' standalone='yes'?>
<sea-summary time='Apr 14, 2010 3:36:57 PM'
	 project='AssumeFinal'>

<promise-drop type='RegionModel'
	 line='21'
	 file='/AssumeFinal/src/test/BadFinal.java'
	 offset='450'
	 hash='120'
	 context='596591927'
	 message='Region private test.BadFinal.x'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='10'
	 file='/AssumeFinal/src/test/SanityChecks.java'
	 offset='143'
	 hash='640540140'
	 context='656041591'
	 message='Field/parameter is already declared to be final; no need to assume it  on  AssumeFinal'
	 category='Modeling problems'/>

<promise-drop type='InRegionPromiseDrop'
	 line='20'
	 file='/AssumeFinal/src/test/BadFinal.java'
	 offset='418'
	 hash='121'
	 context='596591928'
	 message='InRegion(BadFinalRegion)  on  y'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='8'
	 file='/AssumeFinal/src/test/BadFinal.java'
	 offset='158'
	 hash='1021967172'
	 context='-692115859'
	 message='Region private test.BadFinal.BadFinalRegion'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='0'
	 file='java.lang.Object'
	 offset='2147483647'
	 hash='-796031666'
	 context='1063877011'
	 message='RegionLock java.lang.Object.MUTEX is this protects WaitQueue  on  Object'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='AssumeFinalPromiseDrop'
	 line='12'
	 file='/AssumeFinal/src/test/BadFinal.java'
	 offset='274'
	 hash='3327275'
	 context='495178764'
	 message='AssumedFinal  on  lock'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='AssumeFinalPromiseDrop'
	 line='9'
	 file='/AssumeFinal/src/test/BadFinalPolicy.java'
	 offset='159'
	 hash='3327275'
	 context='1389949882'
	 message='AssumedFinal  on  lock'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='AssumeFinalPromiseDrop'
	 line='13'
	 file='/AssumeFinal/src/test/SanityChecks.java'
	 offset='243'
	 hash='1073031819'
	 context='1636449175'
	 message='AssumedFinal  on  assumedFinal'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='14'
	 file='/AssumeFinal/src/test/SanityChecks.java'
	 offset='301'
	 hash='-1498539967'
	 context='656041591'
	 message='Field/parameter is already declared to be final; no need to assume it  on  AssumeFinal'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='0'
	 file='java.lang.[]'
	 offset='-1'
	 hash='-1305411288'
	 context='156839830'
	 message='Region public []'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='0'
	 file='java.lang.[]'
	 offset='-1'
	 hash='-1305411288'
	 context='156839830'
	 message='Region public length'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='25'
	 file='/AssumeFinal/src/test/BadFinal.java'
	 offset='510'
	 hash='-352943399'
	 context='1384896491'
	 message='Lock &quot;&lt;this&gt;:BadFinalLock&quot; held when accessing (this.x)'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<promise-drop type='LockModel'
	 line='6'
	 file='/AssumeFinal/src/test/BadFinalPolicy.java'
	 offset='100'
	 hash='-1185572440'
	 context='-853249537'
	 message='PolicyLock test.BadFinalPolicy.BadFinalLock is this.lock  on  BadFinalPolicy'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/AssumeFinal/src/test/BadFinal.java'
	 offset='197'
	 hash='1021967172'
	 context='-692115859'
	 message='RegionLock test.BadFinal.BadFinalLock is this.lock protects BadFinalRegion  on  BadFinal'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='InRegionPromiseDrop'
	 line='20'
	 file='/AssumeFinal/src/test/BadFinal.java'
	 offset='418'
	 hash='120'
	 context='596591927'
	 message='InRegion(BadFinalRegion)  on  x'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='AssumeFinalPromiseDrop'
	 line='6'
	 file='/AssumeFinal/src/test/SanityChecks.java'
	 offset='79'
	 hash='364277022'
	 context='1636449175'
	 message='AssumedFinal  on  assumedFinal'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='26'
	 file='/AssumeFinal/src/test/BadFinal.java'
	 offset='519'
	 hash='-352943368'
	 context='-1665306324'
	 message='Lock &quot;&lt;this&gt;:BadFinalLock&quot; held when accessing (this.y)'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<promise-drop type='RegionModel'
	 line='21'
	 file='/AssumeFinal/src/test/BadFinal.java'
	 offset='453'
	 hash='121'
	 context='596591928'
	 message='Region private test.BadFinal.y'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

</sea-summary>

