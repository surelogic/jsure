<?xml version='1.0' encoding='UTF-8' standalone='yes'?>
<sea-summary time='Oct 28, 2010 11:54:56 AM'
	 project='TestLockSanityChecks'>

<count ProposedPromiseDrop='4'/>
<count RequiresLockPromiseDrop='139'/>
<count InfoDrop='16'/>
<count ReturnsLockPromiseDrop='51'/>
<count RegionModel='171'/>
<count PromiseWarningDrop='192'/>
<count ResultDrop='59'/>
<count LockModel='158'/>
<count InRegionPromiseDrop='11'/>
<promise-drop type='InRegionPromiseDrop'
	 line='22'
	 file='/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java'
	 offset='684'
	 hash='-275350688'
	 context='-1279588288'
	 message='InRegion(RegionFromGGPFilledInGGP) on gppf1'
	 message-id='(107,RegionFromGGPFilledInGGP,gppf1)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_requires_lock/D.java'
	 offset='226'
	 hash='-393793010'
	 context='-115649467'
	 message='PolicyLock test_requires_lock.D.PrivateStaticPolicyLock is class on D'
	 message-id='(101,test_requires_lock.D.PrivateStaticPolicyLock,class,D)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java'
	 offset='574'
	 hash='431868570'
	 context='-411506372'
	 message='Region   test_lock_region.GreatGrandparent.GGPSubRegion2'
	 message-id='(117, ,,test_lock_region.GreatGrandparent.GGPSubRegion2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='1628'
	 hash='1567307990'
	 context='457502804'
	 message='RegionLock test_requires_lock.StateLock_visibility.ProtectedStaticLock is this.protectedStaticField protects ProtectedStaticRegion on StateLock_visibility'
	 message-id='(100,test_requires_lock.StateLock_visibility.ProtectedStaticLock,this.protectedStaticField,ProtectedStaticRegion,StateLock_visibility)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='1305'
	 hash='1567307990'
	 context='457502804'
	 message='RegionLock test_requires_lock.StateLock_visibility.ProtectedLock is this.protectedField protects ProtectedRegion on StateLock_visibility'
	 message-id='(100,test_requires_lock.StateLock_visibility.ProtectedLock,this.protectedField,ProtectedRegion,StateLock_visibility)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='1843'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L5_good is this.defaultField protects privateRegion2 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L5_good,this.defaultField,privateRegion2,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='4062'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L101_good is this.privateFieldMadeDefault protects defaultRegion5 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L101_good,this.privateFieldMadeDefault,defaultRegion5,LockVizJUC)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='1204'
	 hash='-313213637'
	 context='-70732727'
	 message='Region public test_lock_region.LockViz.publicRegion7'
	 message-id='(117,public,,test_lock_region.LockViz.publicRegion7)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='754'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region private test_lock_region.LockVizJUC.privateRegion4'
	 message-id='(117,private,,test_lock_region.LockVizJUC.privateRegion4)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/Parent.java'
	 offset='146'
	 hash='520265152'
	 context='2039410109'
	 message='Region   test_lock_region.Parent.EmptyRegionFromParent'
	 message-id='(117, ,,test_lock_region.Parent.EmptyRegionFromParent)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='83'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='5391'
	 hash='-176181199'
	 context='-27347272'
	 message='ReturnsLock L100_good on test_lock_region.LockViz.getPrivateMadeDefault1()'
	 message-id='(111,L100_good,test_lock_region.LockViz.getPrivateMadeDefault1())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='6'
	 file='/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java'
	 offset='115'
	 hash='321052534'
	 context='1274224488'
	 message='Region &quot;twoLocksOneRegion.inherited.Super.R&quot; is already protected by a lock on Lock LL is this.duperLock protects R'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='62'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='2679'
	 hash='-1167497821'
	 context='1457134122'
	 message='RequiresLock DefaultLock on test_requires_lock.StateLock_visibility.good_privateMethod_defaultLock()'
	 message-id='(102,RequiresLock DefaultLock,test_requires_lock.StateLock_visibility.good_privateMethod_defaultLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/Parent.java'
	 offset='462'
	 hash='520265152'
	 context='2039410109'
	 message='Region   test_lock_region.Parent.PSubRegion4'
	 message-id='(117, ,,test_lock_region.Parent.PSubRegion4)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='105'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='4033'
	 hash='-419731939'
	 context='-1572824505'
	 message='RequiresLock PrivateStaticLock on test_requires_lock.PolicyLock_visibility.good_privateStaticMethod_privateStaticLock()'
	 message-id='(102,RequiresLock PrivateStaticLock,test_requires_lock.PolicyLock_visibility.good_privateStaticMethod_privateStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='35'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='2045'
	 hash='-1768911793'
	 context='453126018'
	 message='/TestLockSanityChecks/src/test_lock_region/C.java:49 -- Unable to parse past @RegionLock L10 is staticFieldFromC protects test_lock_region ___ .B:StaticRegionFromB'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='3076'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L15_good is this.publicField protects protectedRegion4 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L15_good,this.publicField,protectedRegion4,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='437'
	 hash='-1310360451'
	 context='1262541058'
	 message='RegionLock test_returns_lock.StateLock.StaticLock is class protects StaticRegion on StateLock'
	 message-id='(100,test_returns_lock.StateLock.StaticLock,class,StaticRegion,StateLock)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='119'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='4567'
	 hash='-144652760'
	 context='-1367964293'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='74'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='1898'
	 hash='-176181199'
	 context='-2097451059'
	 message='ReturnsLock this:Exists on test_returns_lock.StateLock.getLock_exists2()'
	 message-id='(111,this:Exists,test_returns_lock.StateLock.getLock_exists2())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_requires_lock/C.java'
	 offset='401'
	 hash='-365293692'
	 context='-115649468'
	 message='Region   static test_requires_lock.C.S'
	 message-id='(117, , static,test_requires_lock.C.S)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='80'
	 file='/TestLockSanityChecks/src/test_requires_lock/C_Policy.java'
	 offset='2150'
	 hash='-185990977'
	 context='1066335392'
	 message='Cannot qualify a static lock with a receiver or a method parameter on test_requires_lock.C_Policy.this:SL'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='841'
	 hash='1567307990'
	 context='457502804'
	 message='Region   test_requires_lock.StateLock_visibility.DefaultRegion'
	 message-id='(117, ,,test_requires_lock.StateLock_visibility.DefaultRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='116'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='6480'
	 hash='-176181199'
	 context='1342817928'
	 message='ReturnsLock L108_good on test_lock_region.LockVizJUC.getPrivateMadePublic1()'
	 message-id='(111,L108_good,test_lock_region.LockVizJUC.getPrivateMadePublic1())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='75'
	 file='/TestLockSanityChecks/src/test_requires_lock/C.java'
	 offset='1923'
	 hash='-463695518'
	 context='204662732'
	 message='RequiresLock test_requires_lock.C.this:IL on test_requires_lock.C.Inner1.good1()'
	 message-id='(102,RequiresLock test_requires_lock.C.this:IL,test_requires_lock.C.Inner1.good1())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='150'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='4060'
	 hash='1498200131'
	 context='-369265511'
	 message='Return statement correctly returns lock &quot;StaticLock&quot;'
	 message-id='(214,StaticLock)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<ir-drop type='PromiseWarningDrop'
	 line='258'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='10154'
	 hash='-1278666319'
	 context='-1938270377'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='182'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='7389'
	 hash='1257775253'
	 context='-1415756872'
	 message='RequiresLock DefaultStaticLock on test_requires_lock.StateLock_visibility.good_privateMethod_defaultStaticLock()'
	 message-id='(102,RequiresLock DefaultStaticLock,test_requires_lock.StateLock_visibility.good_privateMethod_defaultStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='150'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='5907'
	 hash='189638819'
	 context='1718733863'
	 message='lock &quot;DefaultStaticLock&quot; is less visible than requiring method/constructor on DefaultStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='128'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='5118'
	 hash='445749831'
	 context='951918328'
	 message='RequiresLock PublicStaticLock on test_requires_lock.StateLock_visibility.good_privateStaticMethod_publicStaticLock()'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.StateLock_visibility.good_privateStaticMethod_publicStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='1733'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L3_bad is this.privateField protects protectedRegion1 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L3_bad,this.privateField,protectedRegion1,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='230'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='9070'
	 hash='495859649'
	 context='-932718869'
	 message='RequiresLock DefaultStaticLock on test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(boolean,int)'
	 message-id='(102,RequiresLock DefaultStaticLock,test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(boolean,int))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='6'
	 file='/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java'
	 offset='1080'
	 hash='-1432771232'
	 context='218577586'
	 message='Inherited region &quot;RegionFromGPFilledInP&quot; contains fields; it cannot be protected. on Lock L21_bad is this protects RegionFromGPFilledInP'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='61'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='1499'
	 hash='-632933779'
	 context='-375394964'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:Exists&quot;'
	 message-id='(214,&lt;this&gt;:Exists)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='145'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='4732'
	 hash='-2124450582'
	 context='259130011'
	 message='RequiresLock p:NonStaticLock on test_requires_lock.PolicyLock_LockNames.staticMethod_paramLock(test_requires_lock.PolicyLock_LockNames)'
	 message-id='(102,RequiresLock p:NonStaticLock,test_requires_lock.PolicyLock_LockNames.staticMethod_paramLock(test_requires_lock.PolicyLock_LockNames))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='199'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='7880'
	 hash='994889842'
	 context='-1381083825'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.PolicyLock_visibility.good_protectedMethod_protectedStaticLock()'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.PolicyLock_visibility.good_protectedMethod_protectedStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='11'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='266'
	 hash='686683019'
	 context='-655611719'
	 message='RegionLock test_requires_lock.TestDuplicates.L is this protects Instance on TestDuplicates'
	 message-id='(100,test_requires_lock.TestDuplicates.L,this,Instance,TestDuplicates)'
	 category='Concurrency'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='17'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='732'
	 hash='1584936397'
	 context='-236782475'
	 message='PolicyLock test_requires_lock.PolicyLock_visibility.DefaultLock is this.defaultField on PolicyLock_visibility'
	 message-id='(101,test_requires_lock.PolicyLock_visibility.DefaultLock,this.defaultField,PolicyLock_visibility)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='179'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='7271'
	 hash='1271856531'
	 context='-837566470'
	 message='RequiresLock PrivateStaticLock on test_requires_lock.StateLock_visibility.good_privateMethod_privateStaticLock()'
	 message-id='(102,RequiresLock PrivateStaticLock,test_requires_lock.StateLock_visibility.good_privateMethod_privateStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='19'
	 file='/TestLockSanityChecks/src/test_lock_region/Parent.java'
	 offset='637'
	 hash='-712363927'
	 context='416178506'
	 message='Region private test_lock_region.Parent.pf1'
	 message-id='(117,private,,test_lock_region.Parent.pf1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='4179'
	 hash='-1629113839'
	 context='1552614344'
	 message='PolicyLock test_lock_field.C.P10 is test_lock_field.Other.staticField on C'
	 message-id='(101,test_lock_field.C.P10,test_lock_field.Other.staticField,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='1376'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region public static test_lock_region.LockVizJUC.publicStaticRegion'
	 message-id='(117,public, static,test_lock_region.LockVizJUC.publicStaticRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='141'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='3768'
	 hash='1498200131'
	 context='-11913558'
	 message='Return statement correctly returns lock &quot;StaticLock&quot;'
	 message-id='(214,StaticLock)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='352'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='13336'
	 hash='915435692'
	 context='240620074'
	 message='RequiresLock test_requires_lock.Root:PrivateRootStaticLock on test_requires_lock.StateLock_visibility.StateLock_visibility(int,int,int,int)'
	 message-id='(102,RequiresLock test_requires_lock.Root:PrivateRootStaticLock,test_requires_lock.StateLock_visibility.StateLock_visibility(int,int,int,int))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='161'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='6428'
	 hash='203720097'
	 context='-522436822'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='1418'
	 hash='729177316'
	 context='1125120880'
	 message='RegionLock test_lock_region.C.L7 is test_lock_region.B.staticFieldFromB protects StaticRegionFromC2 on C'
	 message-id='(100,test_lock_region.C.L7,test_lock_region.B.staticFieldFromB,StaticRegionFromC2,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='InRegionPromiseDrop'
	 line='10'
	 file='/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java'
	 offset='265'
	 hash='97427706'
	 context='-55214348'
	 message='InRegion(R) on field'
	 message-id='(107,R,field)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='104'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='4122'
	 hash='-767223269'
	 context='44005260'
	 message='lock &quot;DefaultLock&quot; is less visible than requiring method/constructor on DefaultLock'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java'
	 offset='356'
	 hash='-1912240528'
	 context='1277366999'
	 message='PolicyLock test_requires_lock.PolicyLock_Constructor.StaticLock is class on PolicyLock_Constructor'
	 message-id='(101,test_requires_lock.PolicyLock_Constructor.StaticLock,class,PolicyLock_Constructor)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='113'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='3047'
	 hash='-176181199'
	 context='663590495'
	 message='ReturnsLock test_returns_lock.C_Policy:SL on test_returns_lock.C_Policy.Inner1.getLock2()'
	 message-id='(111,test_returns_lock.C_Policy:SL,test_returns_lock.C_Policy.Inner1.getLock2())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/Grandparent.java'
	 offset='263'
	 hash='-2066578384'
	 context='-1221517437'
	 message='Region   test_lock_region.Grandparent.RegionFromGPWithSubRegionFromGP'
	 message-id='(117, ,,test_lock_region.Grandparent.RegionFromGPWithSubRegionFromGP)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='113'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='3456'
	 hash='1902247597'
	 context='-193198253'
	 message='RequiresLock StaticLock on test_requires_lock.StateLock_LockNames.good_staticMethod_implicit_staticLock()'
	 message-id='(102,RequiresLock StaticLock,test_requires_lock.StateLock_LockNames.good_staticMethod_implicit_staticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='476'
	 hash='2020694654'
	 context='1230606857'
	 message='RegionLock test_returns_lock.C.SL is class protects S on C'
	 message-id='(100,test_returns_lock.C.SL,class,S,C)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='262'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='10000'
	 hash='268866225'
	 context='1171860702'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='671'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R16'
	 message-id='(117, ,,test_lock_field.C.R16)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='292'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='11147'
	 hash='-771493154'
	 context='-78421206'
	 message='RequiresLock PublicStaticLock on test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(java.lang.Object,java.lang.Object)'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(java.lang.Object,java.lang.Object))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='44'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='1237'
	 hash='1498200131'
	 context='-1344872479'
	 message='Return statement correctly returns lock &quot;StaticLock&quot;'
	 message-id='(214,StaticLock)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='1156'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region public test_lock_region.LockVizJUC.publicRegion6'
	 message-id='(117,public,,test_lock_region.LockVizJUC.publicRegion6)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='21'
	 file='/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java'
	 offset='928'
	 hash='-2106587626'
	 context='171286543'
	 message='Lock &quot;L&quot; already declared in class test_unique_names.StateVsPolicyLocks on Lock L is this protects A'
	 category='Modeling problems'/>

<ir-drop type='ProposedPromiseDrop'
	 line='82'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='1934'
	 hash='1133856506'
	 context='1768315240'
	 message='ProposedPromiseDrop (EMPTY)'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='45'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='1885'
	 hash='1760647457'
	 context='-1789449237'
	 message='RequiresLock PrivateLock on test_requires_lock.PolicyLock_visibility.good_privateMethod_privateLock()'
	 message-id='(102,RequiresLock PrivateLock,test_requires_lock.PolicyLock_visibility.good_privateMethod_privateLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='25'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java'
	 offset='787'
	 hash='1639838674'
	 context='-836415088'
	 message='Constructor cannot require a lock on the object being constructed on this:NonStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='986'
	 hash='-313213637'
	 context='-70732727'
	 message='Region   test_lock_region.LockViz.defaultRegion6'
	 message-id='(117, ,,test_lock_region.LockViz.defaultRegion6)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='61'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='1467'
	 hash='1250958712'
	 context='1195036736'
	 message='RegionLock test_returns_lock.C.Inner1.InnerLock is this protects Instance on Inner1'
	 message-id='(100,test_returns_lock.C.Inner1.InnerLock,this,Instance,Inner1)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='4151'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L106_good is this.privateFieldMadeProtected protects protectedRegion6 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L106_good,this.privateFieldMadeProtected,protectedRegion6,LockViz)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='6'
	 file='/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java'
	 offset='1348'
	 hash='-1432771232'
	 context='218577586'
	 message='RegionLock test_lock_region.ProtectInheritedRegion.L40_good is this protects RegionFromGGPWithSubRegionFromGGP on ProtectInheritedRegion'
	 message-id='(100,test_lock_region.ProtectInheritedRegion.L40_good,this,RegionFromGGPWithSubRegionFromGGP,ProtectInheritedRegion)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='2816'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;test_lock_field.D.badFieldFromD&quot; is not final on Lock L19 is test_lock_field.D.badFieldFromD protects R17'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='1539'
	 hash='1567307990'
	 context='457502804'
	 message='RegionLock test_requires_lock.StateLock_visibility.DefaultStaticLock is this.defaultStaticField protects DefaultStaticRegion on StateLock_visibility'
	 message-id='(100,test_requires_lock.StateLock_visibility.DefaultStaticLock,this.defaultStaticField,DefaultStaticRegion,StateLock_visibility)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='3736'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;this.badField&quot; is not final on PolicyLock P4 is this.badField'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='82'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='1948'
	 hash='1133856506'
	 context='1768315240'
	 message='lock &quot;p:L&quot; is named more than once on p:L'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java'
	 offset='409'
	 hash='-1870665092'
	 context='1325374168'
	 message='Region   static test_requires_lock.StateLock_Constructor.StaticRegion'
	 message-id='(117, , static,test_requires_lock.StateLock_Constructor.StaticRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='4444'
	 hash='-1629113839'
	 context='1552614344'
	 message='PolicyLock test_lock_field.C.P12 is this.fieldFromA on C'
	 message-id='(101,test_lock_field.C.P12,this.fieldFromA,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='26'
	 file='/TestLockSanityChecks/src/test_requires_lock/C.java'
	 offset='610'
	 hash='-1928801312'
	 context='1261224887'
	 message='Cannot qualify a static lock with a receiver or a method parameter on this:SL'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/Parent.java'
	 offset='331'
	 hash='520265152'
	 context='2039410109'
	 message='Region   test_lock_region.Parent.PSubRegion2'
	 message-id='(117, ,,test_lock_region.Parent.PSubRegion2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='128'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='6765'
	 hash='-1087838202'
	 context='1342819850'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L110_good&quot;'
	 message-id='(214,&lt;this&gt;:L110_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='875'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R102'
	 message-id='(117, ,,test_lock_field.C.R102)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='101'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='2666'
	 hash='-176181199'
	 context='-1749486477'
	 message='Couldn&apos;t resolve a type for test.CC on ReturnsLock test.CC.this:SL on test.CC'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/inherited_region/baseCase/Good1.java'
	 offset='290'
	 hash='1202125903'
	 context='-1765510404'
	 message='RegionLock inherited_region.baseCase.Good1.L is this protects Instance on Good1'
	 message-id='(100,inherited_region.baseCase.Good1.L,this,Instance,Good1)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='384'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region protected test_lock_region.LockVizJUC.protectedRegion1'
	 message-id='(117,protected,,test_lock_region.LockVizJUC.protectedRegion1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='65'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='1656'
	 hash='1937511719'
	 context='-118015679'
	 message='Return statement correctly returns lock &quot;&lt;test_returns_lock.C_Policy.this&gt;:IL&quot;'
	 message-id='(214,&lt;test_returns_lock.C_Policy.this&gt;:IL)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='LockModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='438'
	 hash='291111035'
	 context='1286965051'
	 message='RegionLock test_requires_lock.StateLock_LockNames.StaticLock is class protects StaticRegion on StateLock_LockNames'
	 message-id='(100,test_requires_lock.StateLock_LockNames.StaticLock,class,StaticRegion,StateLock_LockNames)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='262'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='10319'
	 hash='-1467132936'
	 context='-311410832'
	 message='RequiresLock DefaultStaticLock on test_requires_lock.StateLock_visibility.StateLock_visibility(int,int)'
	 message-id='(102,RequiresLock DefaultStaticLock,test_requires_lock.StateLock_visibility.StateLock_visibility(int,int))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='23'
	 file='/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java'
	 offset='733'
	 hash='297682518'
	 context='-1374688050'
	 message='Sorry, analysis does not yet support the use of qualified receivers as lock objects'
	 message-id='(258)'
	 category='unsupported lock model(s)'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='332'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='12460'
	 hash='2131850357'
	 context='-1960451643'
	 message='RequiresLock test_requires_lock.Root:PrivateRootStaticPolicyLock on test_requires_lock.PolicyLock_visibility.good_ancestorClassTest2()'
	 message-id='(102,RequiresLock test_requires_lock.Root:PrivateRootStaticPolicyLock,test_requires_lock.PolicyLock_visibility.good_ancestorClassTest2())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/Grandparent.java'
	 offset='356'
	 hash='-2066578384'
	 context='-1221517437'
	 message='Region   test_lock_region.Grandparent.GPSubRegion1'
	 message-id='(117, ,,test_lock_region.Grandparent.GPSubRegion1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='76'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='1845'
	 hash='-1320285465'
	 context='-1507998'
	 message='lock &quot;L&quot; is named more than once on L'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='238'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='9332'
	 hash='164221679'
	 context='-610868283'
	 message='RequiresLock PublicStaticLock on test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(boolean,java.lang.Object)'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(boolean,java.lang.Object))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='5054'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;test_lock_field.D.badFieldFromD&quot; is not final on PolicyLock P19 is test_lock_field.D.badFieldFromD'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='6'
	 file='/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java'
	 offset='365'
	 hash='-1405896066'
	 context='1288077303'
	 message='RegionLock twoLocksOneRegion.inherited.Super.L is this.superLock protects R on Super'
	 message-id='(100,twoLocksOneRegion.inherited.Super.L,this.superLock,R,Super)'
	 category='Concurrency'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='132'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='4207'
	 hash='-1883599067'
	 context='1508864351'
	 message='Couldn&apos;t resolve a binding for DoesntExist on RequiresLock DoesntExist on DoesntExist'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='10'
	 file='/TestLockSanityChecks/src/test_unique_names/BadC3.java'
	 offset='211'
	 hash='1081938606'
	 context='1000493614'
	 message='Lock &quot;L1&quot; already declared in ancestor class test_unique_names.C1 on Lock L1 is this protects R3'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='1132'
	 hash='-313213637'
	 context='-70732727'
	 message='Region   test_lock_region.LockViz.defaultRegion7'
	 message-id='(117, ,,test_lock_region.LockViz.defaultRegion7)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='76'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='1950'
	 hash='-176181199'
	 context='1882343140'
	 message='ReturnsLock test_returns_lock.C.this:IL on test_returns_lock.C.Inner1.Inner2.getLock_bad()'
	 message-id='(111,test_returns_lock.C.this:IL,test_returns_lock.C.Inner1.Inner2.getLock_bad())'
	 category='Concurrency'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_requires_lock/D.java'
	 offset='172'
	 hash='-393793010'
	 context='-115649467'
	 message='RegionLock test_requires_lock.D.PrivateStaticLock is class protects S on D'
	 message-id='(100,test_requires_lock.D.PrivateStaticLock,class,S,D)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='37'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java'
	 offset='1209'
	 hash='-1682358648'
	 context='-1036759382'
	 message='RequiresLock p:NonStaticLock on test_requires_lock.StateLock_Constructor.StateLock_Constructor(test_requires_lock.StateLock_Constructor)'
	 message-id='(102,RequiresLock p:NonStaticLock,test_requires_lock.StateLock_Constructor.StateLock_Constructor(test_requires_lock.StateLock_Constructor))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='1192'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region private test_lock_region.LockVizJUC.privateRegion7'
	 message-id='(117,private,,test_lock_region.LockVizJUC.privateRegion7)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='4229'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L104_good is this.privateFieldMadeProtected protects privateRegion6 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L104_good,this.privateFieldMadeProtected,privateRegion6,LockVizJUC)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='802'
	 hash='-313213637'
	 context='-70732727'
	 message='Region private test_lock_region.LockViz.privateRegion5'
	 message-id='(117,private,,test_lock_region.LockViz.privateRegion5)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_requires_lock/D.java'
	 offset='139'
	 hash='-393793010'
	 context='-115649467'
	 message='Region private static test_requires_lock.D.S'
	 message-id='(117,private, static,test_requires_lock.D.S)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='690'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R17'
	 message-id='(117, ,,test_lock_field.C.R17)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/Grandparent.java'
	 offset='493'
	 hash='-2066578384'
	 context='-1221517437'
	 message='Region   test_lock_region.Grandparent.GPSubRegion3'
	 message-id='(117, ,,test_lock_region.Grandparent.GPSubRegion3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='3531'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L100_good is this.privateFieldMadeDefault protects privateRegion5 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L100_good,this.privateFieldMadeDefault,privateRegion5,LockViz)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='12'
	 file='/TestLockSanityChecks/src/inherited_region/good/GoodRoot.java'
	 offset='248'
	 hash='-400672280'
	 context='422595643'
	 message='Region public inherited_region.good.GoodRoot.R'
	 message-id='(117,public,,inherited_region.good.GoodRoot.R)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='119'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='6167'
	 hash='-1087838202'
	 context='-931203805'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L109_good&quot;'
	 message-id='(214,&lt;this&gt;:L109_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='503'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R4'
	 message-id='(117, ,,test_lock_field.C.R4)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='34'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='711'
	 hash='-1376539503'
	 context='-6260143'
	 message='lock &quot;this:L&quot; is named more than once on this:L'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='1450'
	 hash='1567307990'
	 context='457502804'
	 message='RegionLock test_requires_lock.StateLock_visibility.PrivateStaticLock is this.privateStaticField protects PrivateStaticRegion on StateLock_visibility'
	 message-id='(100,test_requires_lock.StateLock_visibility.PrivateStaticLock,this.privateStaticField,PrivateStaticRegion,StateLock_visibility)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='6'
	 file='/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java'
	 offset='1643'
	 hash='-1432771232'
	 context='218577586'
	 message='RegionLock test_lock_region.ProtectInheritedRegion.L42_good is this protects RegionFromGGPWithSubRegionFromP on ProtectInheritedRegion'
	 message-id='(100,test_lock_region.ProtectInheritedRegion.L42_good,this,RegionFromGGPWithSubRegionFromP,ProtectInheritedRegion)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='0'
	 file='java.lang.[]'
	 offset='-1'
	 hash='-1305411288'
	 context='156839830'
	 message='Region public []'
	 message-id='(117,public,,[])'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/Grandparent.java'
	 offset='146'
	 hash='-2066578384'
	 context='-1221517437'
	 message='Region   test_lock_region.Grandparent.EmptyRegionFromGrandparent'
	 message-id='(117, ,,test_lock_region.Grandparent.EmptyRegionFromGrandparent)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='62'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='1769'
	 hash='-971535346'
	 context='382601270'
	 message='RequiresLock this:Exists on test_requires_lock.StateLock_LockNames.good_exists_explicit_this()'
	 message-id='(102,RequiresLock this:Exists,test_requires_lock.StateLock_LockNames.good_exists_explicit_this())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='6'
	 file='/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java'
	 offset='1934'
	 hash='-1432771232'
	 context='218577586'
	 message='RegionLock test_lock_region.ProtectInheritedRegion.L51_good is this protects RegionFromGPWithSubRegionFromP on ProtectInheritedRegion'
	 message-id='(100,test_lock_region.ProtectInheritedRegion.L51_good,this,RegionFromGPWithSubRegionFromP,ProtectInheritedRegion)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='539'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R6'
	 message-id='(117, ,,test_lock_field.C.R6)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='85'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='5446'
	 hash='-12564602'
	 context='-27347272'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L100_good&quot;'
	 message-id='(214,&lt;this&gt;:L100_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='92'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='2250'
	 hash='-176181199'
	 context='-901889002'
	 message='ReturnsLock p:Exists on test_returns_lock.PLock.getLock_param_good(test_returns_lock.PLock)'
	 message-id='(111,p:Exists,test_returns_lock.PLock.getLock_param_good(test_returns_lock.PLock))'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='734'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   static test_lock_field.C.S2'
	 message-id='(117, , static,test_lock_field.C.S2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='654'
	 hash='729177316'
	 context='1125120880'
	 message='Region   static test_lock_region.C.StaticRegionFromC5'
	 message-id='(117, , static,test_lock_region.C.StaticRegionFromC5)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='2838'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L13_good is this.publicField protects privateRegion4 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L13_good,this.publicField,privateRegion4,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='4092'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;this.nonObjectField&quot; has a primitive type on PolicyLock P9 is this.nonObjectField'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='3047'
	 hash='-1629113839'
	 context='1552614344'
	 message='Instance region &quot;R101&quot; should be protected by an instance field; consider including R101 in a static region on Lock L101 is this.goodStatic protects R101'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='912'
	 hash='-313213637'
	 context='-70732727'
	 message='Region public test_lock_region.LockViz.publicRegion5'
	 message-id='(117,public,,test_lock_region.LockViz.publicRegion5)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='474'
	 hash='-313213637'
	 context='-70732727'
	 message='Region public test_lock_region.LockViz.publicRegion2'
	 message-id='(117,public,,test_lock_region.LockViz.publicRegion2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='29'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='776'
	 hash='1683461060'
	 context='1012845225'
	 message='Return statement correctly returns lock &quot;StaticLock&quot;'
	 message-id='(214,StaticLock)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<ir-drop type='PromiseWarningDrop'
	 line='76'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='2911'
	 hash='1460697721'
	 context='1277652234'
	 message='lock &quot;DefaultLock&quot; is less visible than requiring method/constructor on DefaultLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='870'
	 hash='1567307990'
	 context='457502804'
	 message='Region protected test_requires_lock.StateLock_visibility.ProtectedRegion'
	 message-id='(117,protected,,test_requires_lock.StateLock_visibility.ProtectedRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='11'
	 file='/TestLockSanityChecks/src/inherited_region/good/Good4.java'
	 offset='259'
	 hash='-384171'
	 context='-809788517'
	 message='RegionLock inherited_region.good.Good4.L is this protects Instance on Good4'
	 message-id='(100,inherited_region.good.Good4.L,this,Instance,Good4)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='17'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='998'
	 hash='1584936397'
	 context='-236782475'
	 message='PolicyLock test_requires_lock.PolicyLock_visibility.ProtectedStaticLock is this.protectedStaticField on PolicyLock_visibility'
	 message-id='(101,test_requires_lock.PolicyLock_visibility.ProtectedStaticLock,this.protectedStaticField,PolicyLock_visibility)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='12'
	 file='/TestLockSanityChecks/src/inherited_region/good/Good3.java'
	 offset='285'
	 hash='-1519380363'
	 context='-809788518'
	 message='RegionLock inherited_region.good.Good3.L is this protects Instance on Good3'
	 message-id='(100,inherited_region.good.Good3.L,this,Instance,Good3)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='500'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region   test_lock_region.LockVizJUC.defaultRegion2'
	 message-id='(117, ,,test_lock_region.LockVizJUC.defaultRegion2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='302'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='11644'
	 hash='483641776'
	 context='48623789'
	 message='lock &quot;ProtectedStaticLock&quot; is less visible than requiring method/constructor on ProtectedStaticLock'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='119'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='3200'
	 hash='342763292'
	 context='643910112'
	 message='Return statement correctly returns lock &quot;SL&quot;'
	 message-id='(214,SL)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='185'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='7507'
	 hash='-622512312'
	 context='1401797221'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.StateLock_visibility.good_privateMethod_protectedStaticLock()'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.StateLock_visibility.good_privateMethod_protectedStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='147'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='5740'
	 hash='203720097'
	 context='-1998043031'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='364'
	 hash='-313213637'
	 context='-70732727'
	 message='Region private test_lock_region.LockViz.privateRegion2'
	 message-id='(117,private,,test_lock_region.LockViz.privateRegion2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='1302'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region public test_lock_region.LockVizJUC.publicRegion7'
	 message-id='(117,public,,test_lock_region.LockVizJUC.publicRegion7)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='31'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java'
	 offset='1023'
	 hash='-1871981292'
	 context='-1370493493'
	 message='RequiresLock p:NonStaticLock on test_requires_lock.PolicyLock_Constructor.PolicyLock_Constructor(test_requires_lock.PolicyLock_Constructor)'
	 message-id='(102,RequiresLock p:NonStaticLock,test_requires_lock.PolicyLock_Constructor.PolicyLock_Constructor(test_requires_lock.PolicyLock_Constructor))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='415'
	 hash='729177316'
	 context='1125120880'
	 message='Region   static test_lock_region.C.S2'
	 message-id='(117, , static,test_lock_region.C.S2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='25'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='671'
	 hash='172007611'
	 context='-2017059578'
	 message='RequiresLock StaticLock on test_requires_lock.PolicyLock_LockNames.good_implicit_staticLock()'
	 message-id='(102,RequiresLock StaticLock,test_requires_lock.PolicyLock_LockNames.good_implicit_staticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='InfoDrop'
	 line='44'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='1985'
	 hash='1614283795'
	 context='438287877'
	 message='StateLock_visibility.&lt;clinit&gt; has effect &quot;nothing&quot; from new java.lang.Object'
	 result-type='classInitEffects'/>

<promise-drop type='RegionModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='804'
	 hash='1567307990'
	 context='457502804'
	 message='Region private test_requires_lock.StateLock_visibility.PrivateRegion'
	 message-id='(117,private,,test_requires_lock.StateLock_visibility.PrivateRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='656'
	 hash='-313213637'
	 context='-70732727'
	 message='Region private test_lock_region.LockViz.privateRegion4'
	 message-id='(117,private,,test_lock_region.LockViz.privateRegion4)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='465'
	 hash='729177316'
	 context='1125120880'
	 message='Region   static test_lock_region.C.S4'
	 message-id='(117, , static,test_lock_region.C.S4)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='17'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='878'
	 hash='1584936397'
	 context='-236782475'
	 message='PolicyLock test_requires_lock.PolicyLock_visibility.PrivateStaticLock is this.privateStaticField on PolicyLock_visibility'
	 message-id='(101,test_requires_lock.PolicyLock_visibility.PrivateStaticLock,this.privateStaticField,PolicyLock_visibility)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='467'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R2'
	 message-id='(117, ,,test_lock_field.C.R2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='274'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='10488'
	 hash='750333720'
	 context='1445637561'
	 message='RequiresLock PublicStaticLock on test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(float,java.lang.Object)'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(float,java.lang.Object))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/Grandparent.java'
	 offset='425'
	 hash='-2066578384'
	 context='-1221517437'
	 message='Region   test_lock_region.Grandparent.GPSubRegion2'
	 message-id='(117, ,,test_lock_region.Grandparent.GPSubRegion2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='248'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='9636'
	 hash='-713569289'
	 context='-1380983292'
	 message='RequiresLock DefaultStaticLock on test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(int,int)'
	 message-id='(102,RequiresLock DefaultStaticLock,test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(int,int))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='1983'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;test_lock_field.Other.otherField&quot; is not from an ancestor of the annotated class. on Lock L11 is test_lock_field.Other.otherField protects R6'
	 category='Modeling problems'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='87'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='5890'
	 hash='-176181199'
	 context='1747879506'
	 message='ReturnsLock L100_good on test_lock_region.LockVizJUC.getPrivateMadeDefault1()'
	 message-id='(111,L100_good,test_lock_region.LockVizJUC.getPrivateMadeDefault1())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='25'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java'
	 offset='747'
	 hash='1022804461'
	 context='-1102618591'
	 message='Constructor cannot require a lock on the object being constructed on NonStaticLock'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_requires_lock/Other1.java'
	 offset='155'
	 hash='1765761508'
	 context='1710248928'
	 message='RegionLock test_requires_lock.Other1.L is this protects Instance on Other1'
	 message-id='(100,test_requires_lock.Other1.L,this,Instance,Other1)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='100'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='5739'
	 hash='-176181199'
	 context='234046508'
	 message='ReturnsLock L105_good on test_lock_region.LockViz.getPrivateMadeProtected2()'
	 message-id='(111,L105_good,test_lock_region.LockViz.getPrivateMadeProtected2())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='196'
	 hash='-313213637'
	 context='-70732727'
	 message='Lock field &quot;this.privateField&quot; is less visible than region &quot;protectedRegion1&quot;; consider protecting a less visible region or adding a lock getter method'
	 message-id='(257,this.privateField,protectedRegion1)'
	 category='lock field(s) less visible than the region(s) being protected'/>

<ir-drop type='ProposedPromiseDrop'
	 line='76'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='1831'
	 hash='-1320285465'
	 context='-1507998'
	 message='ProposedPromiseDrop (EMPTY)'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='174'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='6941'
	 hash='500317201'
	 context='1882128615'
	 message='RequiresLock PublicStaticLock on test_requires_lock.PolicyLock_visibility.good_privateMethod_publicStaticLock()'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.PolicyLock_visibility.good_privateMethod_publicStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='158'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='4196'
	 hash='-176181199'
	 context='-1768982817'
	 message='Couldn&apos;t resolve a binding for NoSuchClass on ReturnsLock NoSuchClass:DoesntExist on NoSuchClass'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='4002'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;this.badStatic&quot; is not final on PolicyLock P8 is this.badStatic'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='18'
	 file='/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java'
	 offset='497'
	 hash='-277763157'
	 context='-873631189'
	 message='Cannot require a ReadWriteLock: must require either the read or the write lock on RW'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='108'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='2546'
	 hash='-176181199'
	 context='1181278628'
	 message='Cannot reference &quot;this&quot; from a static method on this:NonStaticLock'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='61'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='1429'
	 hash='-124551516'
	 context='-559183678'
	 message='lock &quot;test_requires_lock.TestDuplicates:S&quot; is named more than once on test_requires_lock.TestDuplicates:S'
	 category='Modeling problems'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='42'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='1116'
	 hash='-176181199'
	 context='-1344872479'
	 message='ReturnsLock test_returns_lock.StateLock:StaticLock on test_returns_lock.StateLock.getLock_typeQualified_staticLock()'
	 message-id='(111,test_returns_lock.StateLock:StaticLock,test_returns_lock.StateLock.getLock_typeQualified_staticLock())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='2937'
	 hash='-1629113839'
	 context='1552614344'
	 message='Instance region &quot;R100&quot; should be protected by an instance field; consider including R100 in a static region on Lock L100 is class protects R100'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_requires_lock/C.java'
	 offset='448'
	 hash='-365293692'
	 context='-115649468'
	 message='RegionLock test_requires_lock.C.IL is this protects I on C'
	 message-id='(100,test_requires_lock.C.IL,this,I,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='485'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R3'
	 message-id='(117, ,,test_lock_field.C.R3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='11'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='334'
	 hash='686683019'
	 context='-655611719'
	 message='RegionLock test_requires_lock.TestDuplicates.S is class protects StaticRegion on TestDuplicates'
	 message-id='(100,test_requires_lock.TestDuplicates.S,class,StaticRegion,TestDuplicates)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='67'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='1605'
	 hash='1958077519'
	 context='-87750535'
	 message='RequiresLock L, p:L on test_requires_lock.TestDuplicates.good100(test_requires_lock.TestDuplicates)'
	 message-id='(102,RequiresLock L, p:L,test_requires_lock.TestDuplicates.good100(test_requires_lock.TestDuplicates))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='548'
	 hash='-313213637'
	 context='-70732727'
	 message='Region   test_lock_region.LockViz.defaultRegion3'
	 message-id='(117, ,,test_lock_region.LockViz.defaultRegion3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='12'
	 file='/TestLockSanityChecks/src/inherited_region/good/Good2.java'
	 offset='267'
	 hash='1256590741'
	 context='-809788519'
	 message='RegionLock inherited_region.good.Good2.L is this protects R on Good2'
	 message-id='(100,inherited_region.good.Good2.L,this,R,Good2)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='79'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='3062'
	 hash='1954709312'
	 context='-1188959999'
	 message='RequiresLock ProtectedLock on test_requires_lock.PolicyLock_visibility.good_protectedMethod_protectedLock()'
	 message-id='(102,RequiresLock ProtectedLock,test_requires_lock.PolicyLock_visibility.good_protectedMethod_protectedLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java'
	 offset='310'
	 hash='431868570'
	 context='-411506372'
	 message='Region   test_lock_region.GreatGrandparent.RegionFromGGPWithSubRegionFromGGP'
	 message-id='(117, ,,test_lock_region.GreatGrandparent.RegionFromGGPWithSubRegionFromGGP)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='96'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='3864'
	 hash='-69313099'
	 context='205762669'
	 message='RequiresLock PublicLock on test_requires_lock.StateLock_visibility.good_protectedMethod_publicLock()'
	 message-id='(102,RequiresLock PublicLock,test_requires_lock.StateLock_visibility.good_protectedMethod_publicLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='19'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java'
	 offset='586'
	 hash='-874699482'
	 context='-432452814'
	 message='Lock &quot;&lt;this&gt;:L&quot; held when accessing this.v'
	 message-id='(203,&lt;this&gt;:L,this.v,null)'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<promise-drop type='LockModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='325'
	 hash='-1958925414'
	 context='1934315592'
	 message='PolicyLock test_returns_lock.C_Policy.IL is this on C_Policy'
	 message-id='(101,test_returns_lock.C_Policy.IL,this,C_Policy)'
	 category='Concurrency'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='306'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='11556'
	 hash='1740959639'
	 context='586995791'
	 message='RequiresLock test_requires_lock.D:PrivateStaticPolicyLock on test_requires_lock.PolicyLock_visibility.good_otherClassTest1()'
	 message-id='(102,RequiresLock test_requires_lock.D:PrivateStaticPolicyLock,test_requires_lock.PolicyLock_visibility.good_otherClassTest1())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_requires_lock/C.java'
	 offset='384'
	 hash='-365293692'
	 context='-115649468'
	 message='Region   test_requires_lock.C.I'
	 message-id='(117, ,,test_requires_lock.C.I)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='125'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='3180'
	 hash='-176181199'
	 context='290897579'
	 message='ReturnsLock StaticLock on test_returns_lock.PLock.getLock_staticMethod_staticRegion1()'
	 message-id='(111,StaticLock,test_returns_lock.PLock.getLock_staticMethod_staticRegion1())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='1010'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region public test_lock_region.LockVizJUC.publicRegion5'
	 message-id='(117,public,,test_lock_region.LockVizJUC.publicRegion5)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='180'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='4965'
	 hash='-176181199'
	 context='198951653'
	 message='Couldn&apos;t resolve a type for no.such.pkg.NoSuchClass on ReturnsLock no.such.pkg.NoSuchClass:DoesntExist on no.such.pkg.NoSuchClass'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='652'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R15'
	 message-id='(117, ,,test_lock_field.C.R15)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='49'
	 file='/TestLockSanityChecks/src/test_requires_lock/C_Policy.java'
	 offset='1186'
	 hash='-1496762000'
	 context='1912151068'
	 message='PolicyLock test_requires_lock.C_Policy.Inner1.InnerLock is this on Inner1'
	 message-id='(101,test_requires_lock.C_Policy.Inner1.InnerLock,this,Inner1)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='5'
	 file='/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java'
	 offset='91'
	 hash='178575874'
	 context='-1449342276'
	 message='RegionLock twoLocksOneRegion.unrelatedClasses.Test.L is this protects Instance on Test'
	 message-id='(100,twoLocksOneRegion.unrelatedClasses.Test.L,this,Instance,Test)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='6'
	 file='/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java'
	 offset='530'
	 hash='-1432771232'
	 context='218577586'
	 message='Inherited region &quot;RegionFromGGPFilledInGGP&quot; contains fields; it cannot be protected. on Lock L10_bad is this protects RegionFromGGPFilledInGGP'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='8'
	 file='/TestLockSanityChecks/src/inherited_region/Instance/Bad1.java'
	 offset='217'
	 hash='-942784567'
	 context='-2073950896'
	 message='Inherited region &quot;Instance&quot; contains fields; it cannot be protected. on Lock L is this protects Instance'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='1595'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L2_bad is this.privateField protects defaultRegion1 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L2_bad,this.privateField,defaultRegion1,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='10'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='233'
	 hash='2055531658'
	 context='-6631327'
	 message='PolicyLock test_returns_lock.PLock.Exists is this on PLock'
	 message-id='(101,test_returns_lock.PLock.Exists,this,PLock)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='5076'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L110_good is this.privateFieldMadePublic protects protectedRegion7 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L110_good,this.privateFieldMadePublic,protectedRegion7,LockVizJUC)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='3309'
	 hash='-1629113839'
	 context='1552614344'
	 message='Instance region &quot;R103&quot; should be protected by an instance field; consider including R103 in a static region on Lock L103 is test_lock_field.Other.staticField protects R103'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='435'
	 hash='2020694654'
	 context='1230606857'
	 message='RegionLock test_returns_lock.C.IL is this protects I on C'
	 message-id='(100,test_returns_lock.C.IL,this,I,C)'
	 category='Concurrency'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='23'
	 file='/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java'
	 offset='733'
	 hash='297682518'
	 context='-1374688050'
	 message='Sorry, analysis does not yet support the use of qualified receivers as lock objects'
	 message-id='(258)'
	 category='unsupported lock model(s)'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='4746'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L108_good is this.privateFieldMadePublic protects privateRegion7 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L108_good,this.privateFieldMadePublic,privateRegion7,LockVizJUC)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='18'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='469'
	 hash='-176181199'
	 context='1922644028'
	 message='Cannot qualify a static lock with a receiver or a method parameter on this:SL'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='49'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='1394'
	 hash='-1907576257'
	 context='-1751093596'
	 message='RequiresLock Exists on test_requires_lock.PolicyLock_LockNames.good_exists_implicit_this()'
	 message-id='(102,RequiresLock Exists,test_requires_lock.PolicyLock_LockNames.good_exists_implicit_this())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='150'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='5972'
	 hash='173350287'
	 context='-293900027'
	 message='lock &quot;DefaultStaticLock&quot; is less visible than requiring method/constructor on DefaultStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='128'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='4979'
	 hash='1160977032'
	 context='148436251'
	 message='RequiresLock PublicStaticLock on test_requires_lock.PolicyLock_visibility.good_defaultStaticMethod_publicStaticLock()'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.PolicyLock_visibility.good_defaultStaticMethod_publicStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='298'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='11475'
	 hash='-1063968253'
	 context='-1385331334'
	 message='lock &quot;DefaultStaticLock&quot; is less visible than requiring method/constructor on DefaultStaticLock'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='52'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='1332'
	 hash='-926745925'
	 context='-1981324311'
	 message='Return statement correctly returns lock &quot;&lt;p&gt;:IL&quot;'
	 message-id='(214,&lt;p&gt;:IL)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='44'
	 file='/TestLockSanityChecks/src/test_requires_lock/C_Policy.java'
	 offset='1093'
	 hash='556854853'
	 context='1300436175'
	 message='RequiresLock p:IL on test_requires_lock.C_Policy.good3(test_requires_lock.C_Policy)'
	 message-id='(102,RequiresLock p:IL,test_requires_lock.C_Policy.good3(test_requires_lock.C_Policy))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='996'
	 hash='1567307990'
	 context='457502804'
	 message='Region   static test_requires_lock.StateLock_visibility.DefaultStaticRegion'
	 message-id='(117, , static,test_requires_lock.StateLock_visibility.DefaultStaticRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='153'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='6074'
	 hash='-604441642'
	 context='-1419648236'
	 message='lock &quot;ProtectedStaticLock&quot; is less visible than requiring method/constructor on ProtectedStaticLock'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='2731'
	 hash='-1629113839'
	 context='1552614344'
	 message='Couldn&apos;t resolve a binding for this.badFieldFromD on Lock L18 is this.badFieldFromD protects R16 on this.badFieldFromD'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='108'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='2817'
	 hash='-926745925'
	 context='958229302'
	 message='Return statement correctly returns lock &quot;&lt;p&gt;:Exists&quot;'
	 message-id='(214,&lt;p&gt;:Exists)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='2557'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L9_good is this.protectedField protects privateRegion3 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L9_good,this.protectedField,privateRegion3,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='196'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='7717'
	 hash='-1015694101'
	 context='-1147605352'
	 message='lock &quot;DefaultStaticLock&quot; is less visible than requiring method/constructor on DefaultStaticLock'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='2977'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L12_bad is this.protectedField protects publicRegion3 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L12_bad,this.protectedField,publicRegion3,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='InRegionPromiseDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/inherited_region/good/Good3.java'
	 offset='477'
	 hash='122'
	 context='-817683674'
	 message='InRegion(R) on z'
	 message-id='(107,R,z)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='724'
	 hash='-313213637'
	 context='-70732727'
	 message='Region protected test_lock_region.LockViz.protectedRegion4'
	 message-id='(117,protected,,test_lock_region.LockViz.protectedRegion4)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='InRegionPromiseDrop'
	 line='23'
	 file='/TestLockSanityChecks/src/test_lock_region/Parent.java'
	 offset='655'
	 hash='-711440406'
	 context='416178507'
	 message='InRegion(RegionFromGPFilledInP) on pf2'
	 message-id='(107,RegionFromGPFilledInP,pf2)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='10'
	 file='/TestLockSanityChecks/src/test_unique_names/BadC2.java'
	 offset='185'
	 hash='-159138644'
	 context='1000493613'
	 message='Region public test_unique_names.BadC2.R2'
	 message-id='(117,public,,test_unique_names.BadC2.R2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='40'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='810'
	 hash='-404726260'
	 context='-572227822'
	 message='RequiresLock S on test_requires_lock.TestDuplicates.goodStatic1()'
	 message-id='(102,RequiresLock S,test_requires_lock.TestDuplicates.goodStatic1())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='1230'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region   test_lock_region.LockVizJUC.defaultRegion7'
	 message-id='(117, ,,test_lock_region.LockVizJUC.defaultRegion7)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='28'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='603'
	 hash='1167068670'
	 context='-1024428739'
	 message='RequiresLock this:L on test_requires_lock.TestDuplicates.set2(int)'
	 message-id='(102,RequiresLock this:L,test_requires_lock.TestDuplicates.set2(int))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='332'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='12654'
	 hash='-603233790'
	 context='868135949'
	 message='RequiresLock test_requires_lock.D:PrivateStaticLock on test_requires_lock.StateLock_visibility.StateLock_visibility(int,int,int)'
	 message-id='(102,RequiresLock test_requires_lock.D:PrivateStaticLock,test_requires_lock.StateLock_visibility.StateLock_visibility(int,int,int))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='68'
	 file='/TestLockSanityChecks/src/test_requires_lock/C_Policy.java'
	 offset='1791'
	 hash='-463695518'
	 context='-748325053'
	 message='RequiresLock test_requires_lock.C_Policy.this:IL on test_requires_lock.C_Policy.Inner1.good1()'
	 message-id='(102,RequiresLock test_requires_lock.C_Policy.this:IL,test_requires_lock.C_Policy.Inner1.good1())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='4686'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;test_lock_field.D.fieldFromD&quot; is not from an ancestor of the annotated class. on PolicyLock P15 is test_lock_field.D.fieldFromD'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='572'
	 hash='729177316'
	 context='1125120880'
	 message='Region   static test_lock_region.C.StaticRegionFromC3'
	 message-id='(117, , static,test_lock_region.C.StaticRegionFromC3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='1723'
	 hash='1567307990'
	 context='457502804'
	 message='RegionLock test_requires_lock.StateLock_visibility.PublicStaticLock is this.publicStaticField protects PublicStaticRegion on StateLock_visibility'
	 message-id='(100,test_requires_lock.StateLock_visibility.PublicStaticLock,this.publicStaticField,PublicStaticRegion,StateLock_visibility)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='5'
	 file='/TestLockSanityChecks/src/test_lock_region/B.java'
	 offset='69'
	 hash='1821513027'
	 context='1125120879'
	 message='Region   static test_lock_region.B.StaticRegionFromB'
	 message-id='(117, , static,test_lock_region.B.StaticRegionFromB)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='3521'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L16_good is this.publicField protects publicRegion4 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L16_good,this.publicField,publicRegion4,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='2211'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L8_bad is this.defaultField protects publicRegion2 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L8_bad,this.defaultField,publicRegion2,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='531'
	 hash='729177316'
	 context='1125120880'
	 message='Region   static test_lock_region.C.StaticRegionFromC2'
	 message-id='(117, , static,test_lock_region.C.StaticRegionFromC2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='304'
	 hash='291111035'
	 context='1286965051'
	 message='Region   static test_requires_lock.StateLock_LockNames.StaticRegion'
	 message-id='(117, , static,test_requires_lock.StateLock_LockNames.StaticRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='21'
	 file='/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java'
	 offset='833'
	 hash='-2106587626'
	 context='171286543'
	 message='Lock &quot;P&quot; already declared in class test_unique_names.StateVsPolicyLocks on PolicyLock P is class'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='1744'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;this.nonObjectField&quot; has a primitive type on Lock L9 is this.nonObjectField protects R5'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='1593'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L3_bad is this.privateField protects protectedRegion1 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L3_bad,this.privateField,protectedRegion1,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='1963'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L6_good is this.defaultField protects defaultRegion2 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L6_good,this.defaultField,defaultRegion2,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='10'
	 file='/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java'
	 offset='243'
	 hash='-1435134979'
	 context='1088326675'
	 message='Region private test_requires_lock.CannotRequireRWLock.Region'
	 message-id='(117,private,,test_requires_lock.CannotRequireRWLock.Region)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_unique_names/C1.java'
	 offset='253'
	 hash='-1907096630'
	 context='-510472267'
	 message='PolicyLock test_unique_names.C1.P1 is class on C1'
	 message-id='(101,test_unique_names.C1.P1,class,C1)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='57'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='1372'
	 hash='1250958712'
	 context='-337552095'
	 message='PolicyLock test_returns_lock.C_Policy.Inner1.InnerLock is this on Inner1'
	 message-id='(101,test_returns_lock.C_Policy.Inner1.InnerLock,this,Inner1)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='InfoDrop'
	 line='91'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='5373'
	 hash='1614283795'
	 context='-1385718739'
	 message='C.&lt;clinit&gt; has effect &quot;nothing&quot; from new java.lang.Object'
	 result-type='classInitEffects'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='338'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='12696'
	 hash='1487495453'
	 context='329866430'
	 message='RequiresLock test_requires_lock.Root:PrivateRootStaticPolicyLock on test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(int,int,int,int)'
	 message-id='(102,RequiresLock test_requires_lock.Root:PrivateRootStaticPolicyLock,test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(int,int,int,int))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='809'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   static test_lock_field.C.S5'
	 message-id='(117, , static,test_lock_field.C.S5)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='51'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='2097'
	 hash='751713942'
	 context='-1496510762'
	 message='RequiresLock ProtectedLock on test_requires_lock.PolicyLock_visibility.good_privateMethod_protectedLock()'
	 message-id='(102,RequiresLock ProtectedLock,test_requires_lock.PolicyLock_visibility.good_privateMethod_protectedLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='193'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='7554'
	 hash='-1001612823'
	 context='-569414950'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='3830'
	 hash='-1629113839'
	 context='1552614344'
	 message='PolicyLock test_lock_field.C.P6 is class on C'
	 message-id='(101,test_lock_field.C.P6,class,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='86'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='2322'
	 hash='-267281149'
	 context='-810467954'
	 message='Return statement correctly returns lock &quot;&lt;test_returns_lock.C . Inner1.this&gt;:InnerLock&quot;'
	 message-id='(214,&lt;test_returns_lock.C . Inner1.this&gt;:InnerLock)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='4309'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;test_lock_field.Other.otherField&quot; is not from an ancestor of the annotated class. on PolicyLock P11 is test_lock_field.Other.otherField'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='81'
	 file='/TestLockSanityChecks/src/test_requires_lock/C.java'
	 offset='2092'
	 hash='-1928801312'
	 context='-1535323338'
	 message='Couldn&apos;t resolve a type for test.CC on RequiresLock test.CC.this:SL on test.CC'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java'
	 offset='609'
	 hash='109176'
	 context='-432452814'
	 message='Lock &quot;&lt;p&gt;:L&quot; held when accessing p.v'
	 message-id='(203,&lt;p&gt;:L,p.v,null)'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='68'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='2895'
	 hash='-739455457'
	 context='-1311515016'
	 message='RequiresLock PublicLock on test_requires_lock.StateLock_visibility.good_privateMethod_publicLock()'
	 message-id='(102,RequiresLock PublicLock,test_requires_lock.StateLock_visibility.good_privateMethod_publicLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='131'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='3390'
	 hash='-176181199'
	 context='644693120'
	 message='Cannot reference &quot;this&quot; from a static method on NonStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='226'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='8937'
	 hash='850456826'
	 context='1787935058'
	 message='RequiresLock PrivateStaticLock on test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(boolean,boolean)'
	 message-id='(102,RequiresLock PrivateStaticLock,test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(boolean,boolean))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='59'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='1422'
	 hash='-176181199'
	 context='-375394964'
	 message='ReturnsLock this:Exists on test_returns_lock.PLock.getLock_exists2()'
	 message-id='(111,this:Exists,test_returns_lock.PLock.getLock_exists2())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='1532'
	 hash='-1629113839'
	 context='1552614344'
	 message='RegionLock test_lock_field.C.L7 is this.goodStatic protects S3 on C'
	 message-id='(100,test_lock_field.C.L7,this.goodStatic,S3,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='37'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='2339'
	 hash='-1377071439'
	 context='-1436115872'
	 message='/TestLockSanityChecks/src/test_lock_region/C.java:49 -- Unable to parse past @RegionLock L12 is staticFieldFromC protects test_lock_region ___ .Other:StaticRegionFromOther'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='172'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='4704'
	 hash='-176181199'
	 context='-2071793954'
	 message='Couldn&apos;t resolve a binding for NoSuchClass on ReturnsLock NoSuchClass:DoesntExist on NoSuchClass'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='280'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='10626'
	 hash='-1140238293'
	 context='1953915981'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java'
	 offset='359'
	 hash='431868570'
	 context='-411506372'
	 message='Region   test_lock_region.GreatGrandparent.RegionFromGGPWithSubRegionFromGP'
	 message-id='(117, ,,test_lock_region.GreatGrandparent.RegionFromGGPWithSubRegionFromGP)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='2627'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;this.badFieldFromB&quot; is not final on Lock L17 is this.badFieldFromB protects R15'
	 category='Modeling problems'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='46'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='1177'
	 hash='-176181199'
	 context='-1854400334'
	 message='ReturnsLock this:IL on test_returns_lock.C.getInstanceLock()'
	 message-id='(111,this:IL,test_returns_lock.C.getInstanceLock())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='142'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='3690'
	 hash='-176181199'
	 context='1914222590'
	 message='Couldn&apos;t resolve a binding for this:DoesntExist on ReturnsLock this:DoesntExist on this:DoesntExist'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='286'
	 hash='-1310360451'
	 context='1262541058'
	 message='Region   test_returns_lock.StateLock.R'
	 message-id='(117, ,,test_returns_lock.StateLock.R)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='234'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='9199'
	 hash='534669294'
	 context='1217505758'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(boolean,float)'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(boolean,float))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='126'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='3949'
	 hash='-449707740'
	 context='656006400'
	 message='Couldn&apos;t resolve a binding for this:DoesntExist on RequiresLock this:DoesntExist on this:DoesntExist'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='498'
	 hash='-1310360451'
	 context='1262541058'
	 message='RegionLock test_returns_lock.StateLock.NonStaticLock is this protects NonStaticRegion on StateLock'
	 message-id='(100,test_returns_lock.StateLock.NonStaticLock,this,NonStaticRegion,StateLock)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='2695'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L10_good is this.protectedField protects defaultRegion3 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L10_good,this.protectedField,defaultRegion3,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='105'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='5863'
	 hash='-176181199'
	 context='234047469'
	 message='ReturnsLock L106_good on test_lock_region.LockViz.getPrivateMadeProtected3()'
	 message-id='(111,L106_good,test_lock_region.LockViz.getPrivateMadeProtected3())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='72'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='1853'
	 hash='-176181199'
	 context='-1394327389'
	 message='ReturnsLock test_returns_lock.C_Policy.this:IL on test_returns_lock.C_Policy.Inner1.Inner2.getLock_bad()'
	 message-id='(111,test_returns_lock.C_Policy.this:IL,test_returns_lock.C_Policy.Inner1.Inner2.getLock_bad())'
	 category='Concurrency'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='156'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='6247'
	 hash='1975085513'
	 context='353332033'
	 message='RequiresLock PublicStaticLock on test_requires_lock.PolicyLock_visibility.good_publicStaticMethod_publicStaticLock()'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.PolicyLock_visibility.good_publicStaticMethod_publicStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='10'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='269'
	 hash='-928720355'
	 context='-536546566'
	 message='PolicyLock test_requires_lock.PolicyLock_LockNames.StaticLock is class on PolicyLock_LockNames'
	 message-id='(101,test_requires_lock.PolicyLock_LockNames.StaticLock,class,PolicyLock_LockNames)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='44'
	 file='/TestLockSanityChecks/src/test_requires_lock/C.java'
	 offset='1088'
	 hash='1279114817'
	 context='998312748'
	 message='RequiresLock this:IL on test_requires_lock.C.good2()'
	 message-id='(102,RequiresLock this:IL,test_requires_lock.C.good2())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='840'
	 hash='-313213637'
	 context='-70732727'
	 message='Region   test_lock_region.LockViz.defaultRegion5'
	 message-id='(117, ,,test_lock_region.LockViz.defaultRegion5)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='11'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='381'
	 hash='686683019'
	 context='-655611719'
	 message='Region protected static test_requires_lock.TestDuplicates.StaticRegion'
	 message-id='(117,protected, static,test_requires_lock.TestDuplicates.StaticRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='3837'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L104_good is this.privateFieldMadeProtected protects privateRegion6 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L104_good,this.privateFieldMadeProtected,privateRegion6,LockViz)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='440'
	 hash='729177316'
	 context='1125120880'
	 message='Region   static test_lock_region.C.S3'
	 message-id='(117, , static,test_lock_region.C.S3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='86'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='2565'
	 hash='167109603'
	 context='-1978667849'
	 message='RequiresLock p:Exists on test_requires_lock.StateLock_LockNames.good_param_is_good(test_requires_lock.StateLock_LockNames)'
	 message-id='(102,RequiresLock p:Exists,test_requires_lock.StateLock_LockNames.good_param_is_good(test_requires_lock.StateLock_LockNames))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='207'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='8242'
	 hash='-1001612823'
	 context='-624438343'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='37'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='1005'
	 hash='1683461060'
	 context='934769698'
	 message='Return statement correctly returns lock &quot;StaticLock&quot;'
	 message-id='(214,StaticLock)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='1237'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;this.badField&quot; is not final on Lock L4 is this.badField protects R4'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='90'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='3599'
	 hash='1460697721'
	 context='840673577'
	 message='lock &quot;DefaultLock&quot; is less visible than requiring method/constructor on DefaultLock'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='114'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='4430'
	 hash='445749831'
	 context='-1842201191'
	 message='RequiresLock PublicStaticLock on test_requires_lock.PolicyLock_visibility.good_privateStaticMethod_publicStaticLock()'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.PolicyLock_visibility.good_privateStaticMethod_publicStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='213'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='8442'
	 hash='-2048855104'
	 context='-1096739194'
	 message='lock &quot;ProtectedStaticLock&quot; is less visible than requiring method/constructor on ProtectedStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='1240'
	 hash='-313213637'
	 context='-70732727'
	 message='Region public test_lock_region.LockViz.publicRegion100'
	 message-id='(117,public,,test_lock_region.LockViz.publicRegion100)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='17'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='684'
	 hash='1584936397'
	 context='-236782475'
	 message='PolicyLock test_requires_lock.PolicyLock_visibility.PrivateLock is this.privateField on PolicyLock_visibility'
	 message-id='(101,test_requires_lock.PolicyLock_visibility.PrivateLock,this.privateField,PolicyLock_visibility)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='288'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='11165'
	 hash='-480276397'
	 context='218482381'
	 message='RequiresLock PublicStaticLock on test_requires_lock.StateLock_visibility.StateLock_visibility(float,java.lang.Object)'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.StateLock_visibility.StateLock_visibility(float,java.lang.Object))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='294'
	 hash='-1365833300'
	 context='1630346095'
	 message='Lock field &quot;this.protectedField&quot; is less visible than region &quot;publicRegion3&quot;; consider protecting a less visible region or adding a lock getter method'
	 message-id='(257,this.protectedField,publicRegion3)'
	 category='lock field(s) less visible than the region(s) being protected'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='213'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='8568'
	 hash='994889842'
	 context='94522384'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.StateLock_visibility.good_protectedMethod_protectedStaticLock()'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.StateLock_visibility.good_protectedMethod_protectedStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='4526'
	 hash='-1629113839'
	 context='1552614344'
	 message='PolicyLock test_lock_field.C.P13 is this.fieldFromB on C'
	 message-id='(101,test_lock_field.C.P13,this.fieldFromB,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='102'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='5806'
	 hash='-1553156935'
	 context='234046508'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L105_good&quot;'
	 message-id='(214,&lt;this&gt;:L105_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='104'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='6232'
	 hash='-176181199'
	 context='1124963654'
	 message='ReturnsLock L105_good on test_lock_region.LockVizJUC.getPrivateMadeProtected2()'
	 message-id='(111,L105_good,test_lock_region.LockVizJUC.getPrivateMadeProtected2())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='129'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='6397'
	 hash='-1087838202'
	 context='-931201883'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L111_good&quot;'
	 message-id='(214,&lt;this&gt;:L111_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='188'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='5236'
	 hash='-176181199'
	 context='-1183025667'
	 message='ReturnsLock p:NonStaticLock on test_returns_lock.StateLock.getLock_staticMethod_paramLock(test_returns_lock.StateLock)'
	 message-id='(111,p:NonStaticLock,test_returns_lock.StateLock.getLock_staticMethod_paramLock(test_returns_lock.StateLock))'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='69'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='1760'
	 hash='-810017208'
	 context='-1620444384'
	 message='Return statement correctly returns lock &quot;&lt;test_returns_lock.C.this&gt;:IL&quot;'
	 message-id='(214,&lt;test_returns_lock.C.this&gt;:IL)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='LockModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='1822'
	 hash='729177316'
	 context='1125120880'
	 message='RegionLock test_lock_region.C.L9 is test_lock_region.Other.staticFieldFromOther protects StaticRegionFromC4 on C'
	 message-id='(100,test_lock_region.C.L9,test_lock_region.Other.staticFieldFromOther,StaticRegionFromC4,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='895'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R103'
	 message-id='(117, ,,test_lock_field.C.R103)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='115'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='3139'
	 hash='-1509699619'
	 context='663590495'
	 message='Return statement correctly returns lock &quot;SL&quot;'
	 message-id='(214,SL)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='43'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java'
	 offset='1403'
	 hash='1388114926'
	 context='694120923'
	 message='RequiresLock StaticLock on test_requires_lock.StateLock_Constructor.StateLock_Constructor(int,int,int)'
	 message-id='(102,RequiresLock StaticLock,test_requires_lock.StateLock_Constructor.StateLock_Constructor(int,int,int))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='62'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='2456'
	 hash='-1111037976'
	 context='-26821657'
	 message='RequiresLock DefaultLock on test_requires_lock.PolicyLock_visibility.good_defaultMethod_defaultLock()'
	 message-id='(102,RequiresLock DefaultLock,test_requires_lock.PolicyLock_visibility.good_defaultMethod_defaultLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='InfoDrop'
	 line='30'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='1297'
	 hash='1614283795'
	 context='1152046148'
	 message='PolicyLock_visibility.&lt;clinit&gt; has effect &quot;nothing&quot; from new java.lang.Object'
	 result-type='classInitEffects'/>

<ir-drop type='PromiseWarningDrop'
	 line='93'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='3576'
	 hash='-1131498226'
	 context='-1565548680'
	 message='lock &quot;ProtectedLock&quot; is less visible than requiring method/constructor on ProtectedLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_unique_names/GoodC2.java'
	 offset='138'
	 hash='-1507112528'
	 context='1106965971'
	 message='Region public test_unique_names.GoodC2.R2'
	 message-id='(117,public,,test_unique_names.GoodC2.R2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='56'
	 file='/TestLockSanityChecks/src/test_requires_lock/C.java'
	 offset='1314'
	 hash='-1496762000'
	 context='557852069'
	 message='RegionLock test_requires_lock.C.Inner1.InnerLock is this protects Instance on Inner1'
	 message-id='(100,test_requires_lock.C.Inner1.InnerLock,this,Instance,Inner1)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='171'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='6819'
	 hash='-622512312'
	 context='-1187444892'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.PolicyLock_visibility.good_privateMethod_protectedStaticLock()'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.PolicyLock_visibility.good_privateMethod_protectedStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_unique_names/C1.java'
	 offset='164'
	 hash='-1907096630'
	 context='-510472267'
	 message='RegionLock test_unique_names.C1.L1 is this protects R1 on C1'
	 message-id='(100,test_unique_names.C1.L1,this,R1,C1)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='153'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='6148'
	 hash='513690994'
	 context='469977374'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.StateLock_visibility.good_protectedStaticMethod_protectedStaticLock()'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.StateLock_visibility.good_protectedStaticMethod_protectedStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='131'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='4245'
	 hash='270173923'
	 context='2071725570'
	 message='Couldn&apos;t resolve a binding for NoSuchClass on RequiresLock NoSuchClass:DoesntExist on NoSuchClass'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='110'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='4412'
	 hash='2057231077'
	 context='527360130'
	 message='RequiresLock PublicLock on test_requires_lock.StateLock_visibility.good_publicMethod_publicLock()'
	 message-id='(102,RequiresLock PublicLock,test_requires_lock.StateLock_visibility.good_publicMethod_publicLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='19'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='437'
	 hash='-176181199'
	 context='-1691496314'
	 message='Cannot qualify a static lock with a receiver or a method parameter on this:StaticLock'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='40'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='1079'
	 hash='342763292'
	 context='1034600567'
	 message='Return statement correctly returns lock &quot;SL&quot;'
	 message-id='(214,SL)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='139'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='5540'
	 hash='1554362737'
	 context='513467633'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.StateLock_visibility.good_defaultStaticMethod_protectedStaticLock()'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.StateLock_visibility.good_defaultStaticMethod_protectedStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='31'
	 file='/TestLockSanityChecks/src/test_lock_region/Parent.java'
	 offset='913'
	 hash='-709593364'
	 context='416178509'
	 message='Region private test_lock_region.Parent.pf4'
	 message-id='(117,private,,test_lock_region.Parent.pf4)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='InfoDrop'
	 line='46'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='2119'
	 hash='1614283795'
	 context='1372644841'
	 message='StateLock_visibility.&lt;clinit&gt; has effect &quot;nothing&quot; from new java.lang.Object'
	 result-type='classInitEffects'/>

<ir-drop type='InfoDrop'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/B.java'
	 offset='167'
	 hash='1614283795'
	 context='667428523'
	 message='B.&lt;clinit&gt; has effect &quot;nothing&quot; from new java.lang.Object'
	 result-type='classInitEffects'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='646'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region   test_lock_region.LockVizJUC.defaultRegion3'
	 message-id='(117, ,,test_lock_region.LockVizJUC.defaultRegion3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='1016'
	 hash='-313213637'
	 context='-70732727'
	 message='Region protected test_lock_region.LockViz.protectedRegion6'
	 message-id='(117,protected,,test_lock_region.LockViz.protectedRegion6)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java'
	 offset='272'
	 hash='431868570'
	 context='-411506372'
	 message='Region   test_lock_region.GreatGrandparent.RegionFromGGPFilledInP'
	 message-id='(117, ,,test_lock_region.GreatGrandparent.RegionFromGGPFilledInP)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='202'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='8006'
	 hash='1728267047'
	 context='-1333300516'
	 message='RequiresLock PublicStaticLock on test_requires_lock.PolicyLock_visibility.good_protectedMethod_publicStaticLock()'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.PolicyLock_visibility.good_protectedMethod_publicStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='148'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='3930'
	 hash='-176181199'
	 context='-369265511'
	 message='ReturnsLock test_returns_lock.StateLock:StaticLock on test_returns_lock.StateLock.getLock_staticMethod_staticRegion1a()'
	 message-id='(111,test_returns_lock.StateLock:StaticLock,test_returns_lock.StateLock.getLock_staticMethod_staticRegion1a())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='207'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='8134'
	 hash='-2130741237'
	 context='-1260277669'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='48'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='1250'
	 hash='-632933779'
	 context='-1854400334'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:IL&quot;'
	 message-id='(214,&lt;this&gt;:IL)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='576'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R11'
	 message-id='(117, ,,test_lock_field.C.R11)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='76'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='1973'
	 hash='-632933779'
	 context='-2097451059'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:Exists&quot;'
	 message-id='(214,&lt;this&gt;:Exists)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<ir-drop type='PromiseWarningDrop'
	 line='133'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='5108'
	 hash='187431565'
	 context='-510007384'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java'
	 offset='193'
	 hash='431868570'
	 context='-411506372'
	 message='Region   test_lock_region.GreatGrandparent.RegionFromGGPFilledInGGP'
	 message-id='(117, ,,test_lock_region.GreatGrandparent.RegionFromGGPFilledInGGP)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='109'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='6354'
	 hash='-176181199'
	 context='1124964615'
	 message='ReturnsLock L106_good on test_lock_region.LockVizJUC.getPrivateMadeProtected3()'
	 message-id='(111,L106_good,test_lock_region.LockVizJUC.getPrivateMadeProtected3())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='2083'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L7_bad is this.defaultField protects protectedRegion2 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L7_bad,this.defaultField,protectedRegion2,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='10'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='267'
	 hash='2055531658'
	 context='-6631327'
	 message='PolicyLock test_returns_lock.PLock.StaticLock is class on PLock'
	 message-id='(101,test_returns_lock.PLock.StaticLock,class,PLock)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='44'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='1251'
	 hash='-340099239'
	 context='-594742773'
	 message='Cannot type-qualify an instance lock on test_requires_lock.StateLock_LockNames:Exists'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='6'
	 file='/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java'
	 offset='669'
	 hash='-1432771232'
	 context='218577586'
	 message='Inherited region &quot;RegionFromGGPFilledInGP&quot; contains fields; it cannot be protected. on Lock L11_bad is this protects RegionFromGGPFilledInGP'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='56'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='1427'
	 hash='-926745925'
	 context='1326796823'
	 message='Return statement correctly returns lock &quot;&lt;p&gt;:IL&quot;'
	 message-id='(214,&lt;p&gt;:IL)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='2279'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L7_bad is this.defaultField protects protectedRegion2 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L7_bad,this.defaultField,protectedRegion2,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='1162'
	 hash='-313213637'
	 context='-70732727'
	 message='Region protected test_lock_region.LockViz.protectedRegion7'
	 message-id='(117,protected,,test_lock_region.LockViz.protectedRegion7)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='85'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='2041'
	 hash='-874699482'
	 context='-1466581038'
	 message='Lock &quot;&lt;this&gt;:L&quot; not held when accessing this.v'
	 message-id='(205,&lt;this&gt;:L,this.v,null)'
	 category='unprotected field access(es); possible race condition detected'
	 result-type='205'/>

<promise-drop type='LockModel'
	 line='23'
	 file='/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java'
	 offset='1101'
	 hash='297682518'
	 context='-1374688050'
	 message='PolicyLock qualified_receivers_as_locks.Outer.Inner.P is qualified_receivers_as_locks.Outer.this on Inner'
	 message-id='(101,qualified_receivers_as_locks.Outer.Inner.P,qualified_receivers_as_locks.Outer.this,Inner)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_unique_names/GoodC2.java'
	 offset='164'
	 hash='-1507112528'
	 context='1106965971'
	 message='RegionLock test_unique_names.GoodC2.L2 is this protects R2 on GoodC2'
	 message-id='(100,test_unique_names.GoodC2.L2,this,R2,GoodC2)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='210'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='8405'
	 hash='-1015694101'
	 context='-1202628745'
	 message='lock &quot;DefaultStaticLock&quot; is less visible than requiring method/constructor on DefaultStaticLock'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='23'
	 file='/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java'
	 offset='948'
	 hash='297682518'
	 context='-1374688050'
	 message='RegionLock qualified_receivers_as_locks.Outer.Inner.L2 is qualified_receivers_as_locks.Outer.this.field protects g on Inner'
	 message-id='(100,qualified_receivers_as_locks.Outer.Inner.L2,qualified_receivers_as_locks.Outer.this.field,g,Inner)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='1343'
	 hash='-1629113839'
	 context='1552614344'
	 message='Couldn&apos;t resolve a binding for this.unknownField on Lock L5 is this.unknownField protects S1 on this.unknownField'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='137'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='4472'
	 hash='-369775202'
	 context='-200961983'
	 message='Couldn&apos;t resolve a type for no.such.pkg.NoSuchClass on RequiresLock no.such.pkg.NoSuchClass:DoesntExist on no.such.pkg.NoSuchClass'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/Parent.java'
	 offset='264'
	 hash='520265152'
	 context='2039410109'
	 message='Region   test_lock_region.Parent.PSubRegion1'
	 message-id='(117, ,,test_lock_region.Parent.PSubRegion1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='196'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='7902'
	 hash='-1061545190'
	 context='-1650564362'
	 message='RequiresLock DefaultStaticLock on test_requires_lock.StateLock_visibility.good_defaultMethod_defaultStaticLock()'
	 message-id='(102,RequiresLock DefaultStaticLock,test_requires_lock.StateLock_visibility.good_defaultMethod_defaultStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='68'
	 file='/TestLockSanityChecks/src/test_requires_lock/C.java'
	 offset='1703'
	 hash='1033364421'
	 context='1148629257'
	 message='RequiresLock test_requires_lock.C.Inner1.this:InnerLock on test_requires_lock.C.Inner1.Inner2.getInnerLock_good()'
	 message-id='(102,RequiresLock test_requires_lock.C.Inner1.this:InnerLock,test_requires_lock.C.Inner1.Inner2.getInnerLock_good())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='26'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='658'
	 hash='-176181199'
	 context='323828805'
	 message='Cannot qualify a static lock with a receiver or a method parameter on this:StaticLock'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='87'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='3448'
	 hash='93875703'
	 context='489488107'
	 message='lock &quot;PrivateLock&quot; is less visible than requiring method/constructor on PrivateLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='339'
	 hash='291111035'
	 context='1286965051'
	 message='Region   test_requires_lock.StateLock_LockNames.NonStaticRegion'
	 message-id='(117, ,,test_requires_lock.StateLock_LockNames.NonStaticRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='65'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='2554'
	 hash='-824949861'
	 context='1984658708'
	 message='RequiresLock ProtectedLock on test_requires_lock.PolicyLock_visibility.good_defaultMethod_protectedLock()'
	 message-id='(102,RequiresLock ProtectedLock,test_requires_lock.PolicyLock_visibility.good_defaultMethod_protectedLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='139'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='5460'
	 hash='513690994'
	 context='-1479727331'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.PolicyLock_visibility.good_protectedStaticMethod_protectedStaticLock()'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.PolicyLock_visibility.good_protectedStaticMethod_protectedStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='75'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='1809'
	 hash='-176181199'
	 context='968607573'
	 message='Couldn&apos;t resolve a binding for p:DoesntExist on ReturnsLock p:DoesntExist on p:DoesntExist'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='82'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='2059'
	 hash='-176181199'
	 context='1903115863'
	 message='Couldn&apos;t resolve a binding for p on ReturnsLock p:DoesntExist on p'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='2222'
	 hash='-1629113839'
	 context='1552614344'
	 message='RegionLock test_lock_field.C.L13 is this.fieldFromB protects R11 on C'
	 message-id='(100,test_lock_field.C.L13,this.fieldFromB,R11,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='1043'
	 hash='-1629113839'
	 context='1552614344'
	 message='RegionLock test_lock_field.C.L2 is this protects R2 on C'
	 message-id='(100,test_lock_field.C.L2,this,R2,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='87'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='3292'
	 hash='-2134045287'
	 context='-1802928883'
	 message='lock &quot;PrivateLock&quot; is less visible than requiring method/constructor on PrivateLock'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='50'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='1340'
	 hash='-176181199'
	 context='553866990'
	 message='Cannot type-qualify an instance lock on test_returns_lock.StateLock:Exists'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='202'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='8126'
	 hash='-128688916'
	 context='-717678968'
	 message='RequiresLock PublicStaticLock on test_requires_lock.StateLock_visibility.good_defaultMethod_publicStaticLock()'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.StateLock_visibility.good_defaultMethod_publicStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='58'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='1574'
	 hash='-176181199'
	 context='-1791186641'
	 message='Couldn&apos;t resolve a binding for DoesntExist on ReturnsLock DoesntExist on DoesntExist'
	 category='Modeling problems'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='174'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='4727'
	 hash='-176181199'
	 context='783578077'
	 message='ReturnsLock p:NonStaticLock on test_returns_lock.PLock.getLock_staticMethod_paramLock(test_returns_lock.PLock)'
	 message-id='(111,p:NonStaticLock,test_returns_lock.PLock.getLock_staticMethod_paramLock(test_returns_lock.PLock))'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='63'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='1551'
	 hash='-176181199'
	 context='-118015679'
	 message='ReturnsLock test_returns_lock.C_Policy.this:IL on test_returns_lock.C_Policy.Inner1.Inner2.getLock_good()'
	 message-id='(111,test_returns_lock.C_Policy.this:IL,test_returns_lock.C_Policy.Inner1.Inner2.getLock_good())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/inherited_region/good/Good2.java'
	 offset='432'
	 hash='122'
	 context='-817684635'
	 message='Region protected inherited_region.good.Good2.z'
	 message-id='(117,protected,,inherited_region.good.Good2.z)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='107'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='5930'
	 hash='-1553156935'
	 context='234047469'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L106_good&quot;'
	 message-id='(214,&lt;this&gt;:L106_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java'
	 offset='233'
	 hash='431868570'
	 context='-411506372'
	 message='Region   test_lock_region.GreatGrandparent.RegionFromGGPFilledInGP'
	 message-id='(117, ,,test_lock_region.GreatGrandparent.RegionFromGGPFilledInGP)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='17'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='832'
	 hash='1584936397'
	 context='-236782475'
	 message='PolicyLock test_requires_lock.PolicyLock_visibility.PublicLock is this.publicField on PolicyLock_visibility'
	 message-id='(101,test_requires_lock.PolicyLock_visibility.PublicLock,this.publicField,PolicyLock_visibility)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_requires_lock/C_Policy.java'
	 offset='331'
	 hash='-79465496'
	 context='1297130925'
	 message='PolicyLock test_requires_lock.C_Policy.IL is this on C_Policy'
	 message-id='(101,test_requires_lock.C_Policy.IL,this,C_Policy)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='97'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='2577'
	 hash='-176181199'
	 context='-207025294'
	 message='Couldn&apos;t resolve a type for test.CC on ReturnsLock test.CC.this:SL on test.CC'
	 category='Modeling problems'/>

<promise-drop type='InRegionPromiseDrop'
	 line='27'
	 file='/TestLockSanityChecks/src/test_lock_region/Parent.java'
	 offset='750'
	 hash='-710516885'
	 context='416178508'
	 message='InRegion(RegionFromPFilledInP) on pf3'
	 message-id='(107,RegionFromPFilledInP,pf3)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='4911'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L109_good is this.privateFieldMadePublic protects defaultRegion7 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L109_good,this.privateFieldMadePublic,defaultRegion7,LockVizJUC)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='252'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='10017'
	 hash='-2145356556'
	 context='1209010137'
	 message='RequiresLock PublicStaticLock on test_requires_lock.StateLock_visibility.StateLock_visibility(boolean,java.lang.Object)'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.StateLock_visibility.StateLock_visibility(boolean,java.lang.Object))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java'
	 offset='324'
	 hash='-1607864918'
	 context='1235546553'
	 message='Lock &quot;&lt;this&gt;:L&quot; not held when accessing this.field'
	 message-id='(205,&lt;this&gt;:L,this.field,null)'
	 category='unprotected field access(es); possible race condition detected'
	 result-type='205'/>

<result-drop type='ResultDrop'
	 line='123'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='6652'
	 hash='-1087838202'
	 context='1342818889'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L109_good&quot;'
	 message-id='(214,&lt;this&gt;:L109_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='InRegionPromiseDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/inherited_region/good/Good2.java'
	 offset='442'
	 hash='122'
	 context='-817684635'
	 message='InRegion(R) on z'
	 message-id='(107,R,z)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='1260'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region protected test_lock_region.LockVizJUC.protectedRegion7'
	 message-id='(117,protected,,test_lock_region.LockVizJUC.protectedRegion7)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='21'
	 file='/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java'
	 offset='1013'
	 hash='-2106587626'
	 context='171286543'
	 message='Lock &quot;L&quot; already declared in class test_unique_names.StateVsPolicyLocks on Lock L is this protects B'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='595'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R12'
	 message-id='(117, ,,test_lock_field.C.R12)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='16'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java'
	 offset='506'
	 hash='1423321002'
	 context='-21875768'
	 message='RequiresLock this:L, p:L on test_requires_lock.TestImprovedMessages.bad(test_requires_lock.TestImprovedMessages)'
	 message-id='(102,RequiresLock this:L, p:L,test_requires_lock.TestImprovedMessages.bad(test_requires_lock.TestImprovedMessages))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='51'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='1248'
	 hash='-176181199'
	 context='1373363496'
	 message='ReturnsLock Exists on test_returns_lock.PLock.getLock_exists()'
	 message-id='(111,Exists,test_returns_lock.PLock.getLock_exists())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java'
	 offset='143'
	 hash='-2008298754'
	 context='-1312633511'
	 message='Region public twoLocksOneRegion.sameClass.Bad.R'
	 message-id='(117,public,,twoLocksOneRegion.sameClass.Bad.R)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='108'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='4164'
	 hash='-433813217'
	 context='2143952389'
	 message='RequiresLock DefaultStaticLock on test_requires_lock.PolicyLock_visibility.good_privateStaticMethod_defaultStaticLock()'
	 message-id='(102,RequiresLock DefaultStaticLock,test_requires_lock.PolicyLock_visibility.good_privateStaticMethod_defaultStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='53'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='1319'
	 hash='-632933779'
	 context='1373363496'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:Exists&quot;'
	 message-id='(214,&lt;this&gt;:Exists)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='84'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='2205'
	 hash='-176181199'
	 context='-810467954'
	 message='ReturnsLock test_returns_lock.C.Inner1.this:InnerLock on test_returns_lock.C.Inner1.Inner2.getInnerLock_good()'
	 message-id='(111,test_returns_lock.C.Inner1.this:InnerLock,test_returns_lock.C.Inner1.Inner2.getInnerLock_good())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java'
	 offset='559'
	 hash='-1870665092'
	 context='1325374168'
	 message='RegionLock test_requires_lock.StateLock_Constructor.NonStaticLock is this protects NonStaticRegion on StateLock_Constructor'
	 message-id='(100,test_requires_lock.StateLock_Constructor.NonStaticLock,this,NonStaticRegion,StateLock_Constructor)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='73'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='3007'
	 hash='-1290297930'
	 context='-267387650'
	 message='lock &quot;PrivateLock&quot; is less visible than requiring method/constructor on PrivateLock'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='1461'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L1_good is this.privateField protects privateRegion1 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L1_good,this.privateField,privateRegion1,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='10'
	 file='/TestLockSanityChecks/src/test_unique_names/BadC3.java'
	 offset='305'
	 hash='1081938606'
	 context='1000493614'
	 message='Lock &quot;P1&quot; already declared in ancestor class test_unique_names.C1 on PolicyLock P1 is class'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='10'
	 file='/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java'
	 offset='273'
	 hash='-1435134979'
	 context='1088326675'
	 message='RegionLock test_requires_lock.CannotRequireRWLock.RW is this.rwLock protects Region on CannotRequireRWLock'
	 message-id='(100,test_requires_lock.CannotRequireRWLock.RW,this.rwLock,Region,CannotRequireRWLock)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='3684'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L101_good is this.privateFieldMadeDefault protects defaultRegion5 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L101_good,this.privateFieldMadeDefault,defaultRegion5,LockViz)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='284'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='10800'
	 hash='1448337266'
	 context='37173094'
	 message='lock &quot;DefaultStaticLock&quot; is less visible than requiring method/constructor on DefaultStaticLock'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='67'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='1911'
	 hash='2147419099'
	 context='807958540'
	 message='Couldn&apos;t resolve a binding for p:DoesntExist on RequiresLock p:DoesntExist on p:DoesntExist'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='0'
	 file='java.lang.[]'
	 offset='-1'
	 hash='-1305411288'
	 context='156839830'
	 message='Region public length'
	 message-id='(117,public,,length)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='165'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='6583'
	 hash='1271856531'
	 context='-2082717511'
	 message='RequiresLock PrivateStaticLock on test_requires_lock.PolicyLock_visibility.good_privateMethod_privateStaticLock()'
	 message-id='(102,RequiresLock PrivateStaticLock,test_requires_lock.PolicyLock_visibility.good_privateMethod_privateStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='5054'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;test_lock_field.D.badFieldFromD&quot; is not from an ancestor of the annotated class. on PolicyLock P19 is test_lock_field.D.badFieldFromD'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='499'
	 hash='291111035'
	 context='1286965051'
	 message='RegionLock test_requires_lock.StateLock_LockNames.NonStaticLock is this protects NonStaticRegion on StateLock_LockNames'
	 message-id='(100,test_requires_lock.StateLock_LockNames.NonStaticLock,this,NonStaticRegion,StateLock_LockNames)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='142'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='5667'
	 hash='1160977032'
	 context='-1352411526'
	 message='RequiresLock PublicStaticLock on test_requires_lock.StateLock_visibility.good_defaultStaticMethod_publicStaticLock()'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.StateLock_visibility.good_defaultStaticMethod_publicStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='23'
	 file='/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java'
	 offset='733'
	 hash='297682518'
	 context='-1374688050'
	 message='Sorry, analysis does not yet support the use of qualified receivers as lock objects'
	 message-id='(258)'
	 category='unsupported lock model(s)'/>

<ir-drop type='PromiseWarningDrop'
	 line='67'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='1585'
	 hash='-176181199'
	 context='-442420682'
	 message='Couldn&apos;t resolve a binding for p on ReturnsLock p:DoesntExist on p'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='240'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='9625'
	 hash='-106166955'
	 context='1698688702'
	 message='RequiresLock PrivateStaticLock on test_requires_lock.StateLock_visibility.StateLock_visibility(boolean,boolean)'
	 message-id='(102,RequiresLock PrivateStaticLock,test_requires_lock.StateLock_visibility.StateLock_visibility(boolean,boolean))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='InfoDrop'
	 line='91'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='5373'
	 hash='1472198659'
	 context='-1385718739'
	 message='C.&lt;clinit&gt; has effect &quot;writes test_lock_field.C:badStatic&quot; from badStatic = new java.lang.Object'
	 result-type='classInitEffects'/>

<promise-drop type='LockModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_requires_lock/Root.java'
	 offset='172'
	 hash='-318026398'
	 context='-748972703'
	 message='RegionLock test_requires_lock.Root.PrivateRootStaticLock is class protects S on Root'
	 message-id='(100,test_requires_lock.Root.PrivateRootStaticLock,class,S,Root)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='6'
	 file='/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java'
	 offset='2078'
	 hash='-1432771232'
	 context='218577586'
	 message='RegionLock test_lock_region.ProtectInheritedRegion.L60_good is this protects RegionFromPWithSubRegionFromP on ProtectInheritedRegion'
	 message-id='(100,test_lock_region.ProtectInheritedRegion.L60_good,this,RegionFromPWithSubRegionFromP,ProtectInheritedRegion)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='810'
	 hash='729177316'
	 context='1125120880'
	 message='Static region &quot;S1&quot; should be protected by a static field on Lock L2 is this protects S1'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='73'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='2760'
	 hash='93875703'
	 context='926466764'
	 message='lock &quot;PrivateLock&quot; is less visible than requiring method/constructor on PrivateLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_requires_lock/Root.java'
	 offset='139'
	 hash='-318026398'
	 context='-748972703'
	 message='Region private static test_requires_lock.Root.S'
	 message-id='(117,private, static,test_requires_lock.Root.S)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='946'
	 hash='1567307990'
	 context='457502804'
	 message='Region private static test_requires_lock.StateLock_visibility.PrivateStaticRegion'
	 message-id='(117,private, static,test_requires_lock.StateLock_visibility.PrivateStaticRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='3904'
	 hash='-1629113839'
	 context='1552614344'
	 message='PolicyLock test_lock_field.C.P7 is this.goodStatic on C'
	 message-id='(101,test_lock_field.C.P7,this.goodStatic,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_unique_names/GoodC3.java'
	 offset='164'
	 hash='-1105572404'
	 context='1106965972'
	 message='RegionLock test_unique_names.GoodC3.L3 is this protects R3 on GoodC3'
	 message-id='(100,test_unique_names.GoodC3.L3,this,R3,GoodC3)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='613'
	 hash='729177316'
	 context='1125120880'
	 message='Region   static test_lock_region.C.StaticRegionFromC4'
	 message-id='(117, , static,test_lock_region.C.StaticRegionFromC4)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='1338'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region public test_lock_region.LockVizJUC.publicRegion100'
	 message-id='(117,public,,test_lock_region.LockVizJUC.publicRegion100)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='68'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='2656'
	 hash='1063481146'
	 context='-1082289893'
	 message='RequiresLock PublicLock on test_requires_lock.PolicyLock_visibility.good_defaultMethod_publicLock()'
	 message-id='(102,RequiresLock PublicLock,test_requires_lock.PolicyLock_visibility.good_defaultMethod_publicLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='125'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='4852'
	 hash='1554362737'
	 context='1660040880'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.PolicyLock_visibility.good_defaultStaticMethod_protectedStaticLock()'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.PolicyLock_visibility.good_defaultStaticMethod_protectedStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='17'
	 file='/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java'
	 offset='408'
	 hash='120'
	 context='274472420'
	 message='Region protected inherited_region.Subregion.BadRoot2.x'
	 message-id='(117,protected,,inherited_region.Subregion.BadRoot2.x)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='94'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='2340'
	 hash='-926745925'
	 context='-901889002'
	 message='Return statement correctly returns lock &quot;&lt;p&gt;:Exists&quot;'
	 message-id='(214,&lt;p&gt;:Exists)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<ir-drop type='PromiseWarningDrop'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='196'
	 hash='-313213637'
	 context='-70732727'
	 message='Lock field &quot;this.protectedField&quot; is less visible than region &quot;publicRegion3&quot;; consider protecting a less visible region or adding a lock getter method'
	 message-id='(257,this.protectedField,publicRegion3)'
	 category='lock field(s) less visible than the region(s) being protected'/>

<promise-drop type='LockModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='3566'
	 hash='-1629113839'
	 context='1552614344'
	 message='PolicyLock test_lock_field.C.P2 is this on C'
	 message-id='(101,test_lock_field.C.P2,this,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='82'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='3344'
	 hash='1063481146'
	 context='-1958721286'
	 message='RequiresLock PublicLock on test_requires_lock.StateLock_visibility.good_defaultMethod_publicLock()'
	 message-id='(102,RequiresLock PublicLock,test_requires_lock.StateLock_visibility.good_defaultMethod_publicLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='432'
	 hash='-313213637'
	 context='-70732727'
	 message='Region protected test_lock_region.LockViz.protectedRegion2'
	 message-id='(117,protected,,test_lock_region.LockViz.protectedRegion2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='InRegionPromiseDrop'
	 line='24'
	 file='/TestLockSanityChecks/src/test_lock_region/Grandparent.java'
	 offset='700'
	 hash='-1590602333'
	 context='-403843392'
	 message='InRegion(RegionFromGPFilledInGP) on gpf2'
	 message-id='(107,RegionFromGPFilledInGP,gpf2)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='InfoDrop'
	 line='41'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='2610'
	 hash='1614283795'
	 context='-329643829'
	 message='C.&lt;clinit&gt; has effect &quot;nothing&quot; from new java.lang.Object'
	 result-type='classInitEffects'/>

<result-drop type='ResultDrop'
	 line='133'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='6878'
	 hash='-1087838202'
	 context='1342820811'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L111_good&quot;'
	 message-id='(214,&lt;this&gt;:L111_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='2404'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;test_lock_field.D.fieldFromD&quot; is not from an ancestor of the annotated class. on Lock L15 is test_lock_field.D.fieldFromD protects R13'
	 category='Modeling problems'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='95'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='5615'
	 hash='-176181199'
	 context='234045547'
	 message='ReturnsLock L104_good on test_lock_region.LockViz.getPrivateMadeProtected1()'
	 message-id='(111,L104_good,test_lock_region.LockViz.getPrivateMadeProtected1())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='1382'
	 hash='1567307990'
	 context='457502804'
	 message='RegionLock test_requires_lock.StateLock_visibility.PublicLock is this.publicField protects PublicRegion on StateLock_visibility'
	 message-id='(100,test_requires_lock.StateLock_visibility.PublicLock,this.publicField,PublicRegion,StateLock_visibility)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='20'
	 file='/TestLockSanityChecks/src/test_lock_region/Grandparent.java'
	 offset='682'
	 hash='-1591525854'
	 context='-403843393'
	 message='Region private test_lock_region.Grandparent.gpf1'
	 message-id='(117,private,,test_lock_region.Grandparent.gpf1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='36'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='974'
	 hash='-1509699619'
	 context='-527567656'
	 message='Return statement correctly returns lock &quot;SL&quot;'
	 message-id='(214,SL)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='709'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   static test_lock_field.C.S1'
	 message-id='(117, , static,test_lock_field.C.S1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='210'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='8288'
	 hash='-2144822515'
	 context='-1838468071'
	 message='lock &quot;DefaultStaticLock&quot; is less visible than requiring method/constructor on DefaultStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='10'
	 file='/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java'
	 offset='255'
	 hash='97427706'
	 context='-55214348'
	 message='Region public twoLocksOneRegion.inherited.Duper.field'
	 message-id='(117,public,,twoLocksOneRegion.inherited.Duper.field)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='328'
	 hash='-313213637'
	 context='-70732727'
	 message='Region public test_lock_region.LockViz.publicRegion1'
	 message-id='(117,public,,test_lock_region.LockViz.publicRegion1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='6'
	 file='/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java'
	 offset='1496'
	 hash='-1432771232'
	 context='218577586'
	 message='RegionLock test_lock_region.ProtectInheritedRegion.L41_good is this protects RegionFromGGPWithSubRegionFromGP on ProtectInheritedRegion'
	 message-id='(100,test_lock_region.ProtectInheritedRegion.L41_good,this,RegionFromGGPWithSubRegionFromGP,ProtectInheritedRegion)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='614'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R13'
	 message-id='(117, ,,test_lock_field.C.R13)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='1621'
	 hash='729177316'
	 context='1125120880'
	 message='RegionLock test_lock_region.C.L8 is test_lock_region.D.staticFieldFromD protects StaticRegionFromC3 on C'
	 message-id='(100,test_lock_region.C.L8,test_lock_region.D.staticFieldFromD,StaticRegionFromC3,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='393'
	 hash='291111035'
	 context='1286965051'
	 message='RegionLock test_requires_lock.StateLock_LockNames.Exists is this protects R on StateLock_LockNames'
	 message-id='(100,test_requires_lock.StateLock_LockNames.Exists,this,R,StateLock_LockNames)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='608'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region private test_lock_region.LockVizJUC.privateRegion3'
	 message-id='(117,private,,test_lock_region.LockVizJUC.privateRegion3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='190'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='5356'
	 hash='-926745925'
	 context='-1183025667'
	 message='Return statement correctly returns lock &quot;&lt;p&gt;:NonStaticLock&quot;'
	 message-id='(214,&lt;p&gt;:NonStaticLock)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='156'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='6287'
	 hash='7005735'
	 context='-1604277907'
	 message='RequiresLock PublicStaticLock on test_requires_lock.StateLock_visibility.good_protectedStaticMethod_publicStaticLock()'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.StateLock_visibility.good_protectedStaticMethod_publicStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='106'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='6297'
	 hash='-1553156935'
	 context='1124963654'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L105_good&quot;'
	 message-id='(214,&lt;this&gt;:L105_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='62'
	 file='/TestLockSanityChecks/src/test_requires_lock/C.java'
	 offset='1512'
	 hash='-463695518'
	 context='976975692'
	 message='RequiresLock test_requires_lock.C.this:IL on test_requires_lock.C.Inner1.Inner2.good1()'
	 message-id='(102,RequiresLock test_requires_lock.C.this:IL,test_requires_lock.C.Inner1.Inner2.good1())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='111'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='6419'
	 hash='-1553156935'
	 context='1124964615'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L106_good&quot;'
	 message-id='(214,&lt;this&gt;:L106_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='LockModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='1133'
	 hash='-1629113839'
	 context='1552614344'
	 message='RegionLock test_lock_field.C.L3 is this.goodField protects R3 on C'
	 message-id='(100,test_lock_field.C.L3,this.goodField,R3,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='32'
	 file='/TestLockSanityChecks/src/test_requires_lock/C.java'
	 offset='775'
	 hash='-1694056771'
	 context='-242860492'
	 message='Cannot qualify a static lock with a receiver or a method parameter on p:SL'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='23'
	 file='/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java'
	 offset='733'
	 hash='297682518'
	 context='-1374688050'
	 message='Sorry, analysis does not yet support the use of qualified receivers as lock objects'
	 message-id='(258)'
	 category='unsupported lock model(s)'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java'
	 offset='407'
	 hash='431868570'
	 context='-411506372'
	 message='Region   test_lock_region.GreatGrandparent.RegionFromGGPWithSubRegionFromP'
	 message-id='(117, ,,test_lock_region.GreatGrandparent.RegionFromGGPWithSubRegionFromP)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='87'
	 file='/TestLockSanityChecks/src/test_requires_lock/C.java'
	 offset='2272'
	 hash='-185990977'
	 context='-1535322377'
	 message='Cannot qualify a static lock with a receiver or a method parameter on test_requires_lock.C.this:SL'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='2527'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;this.badFieldFromA&quot; is not final on Lock L16 is this.badFieldFromA protects R14'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='759'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   static test_lock_field.C.S3'
	 message-id='(117, , static,test_lock_field.C.S3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='156'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='4201'
	 hash='-176181199'
	 context='1020248317'
	 message='Couldn&apos;t resolve a binding for this:DoesntExist on ReturnsLock this:DoesntExist on this:DoesntExist'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='125'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='4983'
	 hash='1553573202'
	 context='-1953111117'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.StateLock_visibility.good_privateStaticMethod_protectedStaticLock()'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.StateLock_visibility.good_privateStaticMethod_protectedStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='294'
	 hash='-1365833300'
	 context='1630346095'
	 message='Lock field &quot;this.defaultField&quot; is less visible than region &quot;publicRegion2&quot;; consider protecting a less visible region or adding a lock getter method'
	 message-id='(257,this.defaultField,publicRegion2)'
	 category='lock field(s) less visible than the region(s) being protected'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='1046'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region private test_lock_region.LockVizJUC.privateRegion6'
	 message-id='(117,private,,test_lock_region.LockVizJUC.privateRegion6)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='43'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java'
	 offset='1399'
	 hash='1975794415'
	 context='-1033337782'
	 message='RequiresLock test_requires_lock.PolicyLock_Constructor:StaticLock on test_requires_lock.PolicyLock_Constructor.PolicyLock_Constructor(int,int,int,int)'
	 message-id='(102,RequiresLock test_requires_lock.PolicyLock_Constructor:StaticLock,test_requires_lock.PolicyLock_Constructor.PolicyLock_Constructor(int,int,int,int))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='38'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='1020'
	 hash='-176181199'
	 context='1034600567'
	 message='ReturnsLock SL on test_returns_lock.C.getLock2()'
	 message-id='(111,SL,test_returns_lock.C.getLock2())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java'
	 offset='498'
	 hash='-1870665092'
	 context='1325374168'
	 message='RegionLock test_requires_lock.StateLock_Constructor.StaticLock is class protects StaticRegion on StateLock_Constructor'
	 message-id='(100,test_requires_lock.StateLock_Constructor.StaticLock,class,StaticRegion,StateLock_Constructor)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='822'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region protected test_lock_region.LockVizJUC.protectedRegion4'
	 message-id='(117,protected,,test_lock_region.LockVizJUC.protectedRegion4)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='2011'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L5_good is this.defaultField protects privateRegion2 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L5_good,this.defaultField,privateRegion2,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='864'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region public test_lock_region.LockVizJUC.publicRegion4'
	 message-id='(117,public,,test_lock_region.LockVizJUC.publicRegion4)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='38'
	 file='/TestLockSanityChecks/src/test_requires_lock/C.java'
	 offset='958'
	 hash='-463695518'
	 context='998311787'
	 message='RequiresLock SL on test_requires_lock.C.good1()'
	 message-id='(102,RequiresLock SL,test_requires_lock.C.good1())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='89'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='5943'
	 hash='-12564602'
	 context='1747879506'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L100_good&quot;'
	 message-id='(214,&lt;this&gt;:L100_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='4980'
	 hash='-1629113839'
	 context='1552614344'
	 message='Couldn&apos;t resolve a binding for this.badFieldFromD on PolicyLock P18 is this.badFieldFromD on this.badFieldFromD'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='6'
	 file='/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java'
	 offset='2220'
	 hash='-1432771232'
	 context='218577586'
	 message='Inherited region &quot;RegionFromGGPWithNestedFieldFromP&quot; contains fields; it cannot be protected. on Lock L70_bad is this protects RegionFromGGPWithNestedFieldFromP'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='938'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region   test_lock_region.LockVizJUC.defaultRegion5'
	 message-id='(117, ,,test_lock_region.LockVizJUC.defaultRegion5)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='124'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='6282'
	 hash='-1087838202'
	 context='-931202844'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L110_good&quot;'
	 message-id='(214,&lt;this&gt;:L110_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='LockModel'
	 line='10'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='235'
	 hash='-928720355'
	 context='-536546566'
	 message='PolicyLock test_requires_lock.PolicyLock_LockNames.Exists is this on PolicyLock_LockNames'
	 message-id='(101,test_requires_lock.PolicyLock_LockNames.Exists,this,PolicyLock_LockNames)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='19'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='455'
	 hash='-386654280'
	 context='-1893086103'
	 message='Cannot qualify a static lock with a receiver or a method parameter on this:StaticLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/Parent.java'
	 offset='219'
	 hash='520265152'
	 context='2039410109'
	 message='Region   test_lock_region.Parent.RegionFromPWithSubRegionFromP'
	 message-id='(117, ,,test_lock_region.Parent.RegionFromPWithSubRegionFromP)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_requires_lock/Other1.java'
	 offset='201'
	 hash='1765761508'
	 context='1710248928'
	 message='RegionLock test_requires_lock.Other1.S is class protects StaticRegion on Other1'
	 message-id='(100,test_requires_lock.Other1.S,class,StaticRegion,Other1)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='126'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='6706'
	 hash='-176181199'
	 context='1342819850'
	 message='ReturnsLock L110_good on test_lock_region.LockVizJUC.getPrivateMadePublic3()'
	 message-id='(111,L110_good,test_lock_region.LockVizJUC.getPrivateMadePublic3())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='294'
	 hash='-1365833300'
	 context='1630346095'
	 message='Lock field &quot;this.privateField&quot; is less visible than region &quot;protectedRegion1&quot;; consider protecting a less visible region or adding a lock getter method'
	 message-id='(257,this.privateField,protectedRegion1)'
	 category='lock field(s) less visible than the region(s) being protected'/>

<promise-drop type='LockModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='1843'
	 hash='-1629113839'
	 context='1552614344'
	 message='RegionLock test_lock_field.C.L10 is test_lock_field.Other.staticField protects S5 on C'
	 message-id='(100,test_lock_field.C.L10,test_lock_field.Other.staticField,S5,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='4798'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;this.badFieldFromA&quot; is not final on PolicyLock P16 is this.badFieldFromA'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/inherited_region/good/Good3.java'
	 offset='467'
	 hash='122'
	 context='-817683674'
	 message='Region protected inherited_region.good.Good3.z'
	 message-id='(117,protected,,inherited_region.good.Good3.z)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='338'
	 hash='-1310360451'
	 context='1262541058'
	 message='Region   test_returns_lock.StateLock.NonStaticRegion'
	 message-id='(117, ,,test_returns_lock.StateLock.NonStaticRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='2145'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L6_good is this.defaultField protects defaultRegion2 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L6_good,this.defaultField,defaultRegion2,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='54'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='2207'
	 hash='-739455457'
	 context='-435083623'
	 message='RequiresLock PublicLock on test_requires_lock.PolicyLock_visibility.good_privateMethod_publicLock()'
	 message-id='(102,RequiresLock PublicLock,test_requires_lock.PolicyLock_visibility.good_privateMethod_publicLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='55'
	 file='/TestLockSanityChecks/src/test_requires_lock/C_Policy.java'
	 offset='1366'
	 hash='-463695518'
	 context='1753605109'
	 message='RequiresLock test_requires_lock.C_Policy.this:IL on test_requires_lock.C_Policy.Inner1.Inner2.good1()'
	 message-id='(102,RequiresLock test_requires_lock.C_Policy.this:IL,test_requires_lock.C_Policy.Inner1.Inner2.good1())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='4887'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;this.badFieldFromB&quot; is not final on PolicyLock P17 is this.badFieldFromB'
	 category='Modeling problems'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='93'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='2462'
	 hash='-176181199'
	 context='-621710774'
	 message='ReturnsLock test_returns_lock.C.this:IL on test_returns_lock.C.Inner1.getLock_good()'
	 message-id='(111,test_returns_lock.C.this:IL,test_returns_lock.C.Inner1.getLock_good())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='266'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='10435'
	 hash='-410561947'
	 context='1294075171'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.StateLock_visibility.StateLock_visibility(int,float)'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.StateLock_visibility.StateLock_visibility(int,float))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='89'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='2359'
	 hash='-176181199'
	 context='-1676318903'
	 message='ReturnsLock test_returns_lock.C_Policy.this:IL on test_returns_lock.C_Policy.Inner1.getLock_good()'
	 message-id='(111,test_returns_lock.C_Policy.this:IL,test_returns_lock.C_Policy.Inner1.getLock_good())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='119'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='4721'
	 hash='-419731939'
	 context='-854465336'
	 message='RequiresLock PrivateStaticLock on test_requires_lock.StateLock_visibility.good_privateStaticMethod_privateStaticLock()'
	 message-id='(102,RequiresLock PrivateStaticLock,test_requires_lock.StateLock_visibility.good_privateStaticMethod_privateStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='968'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region protected test_lock_region.LockVizJUC.protectedRegion5'
	 message-id='(117,protected,,test_lock_region.LockVizJUC.protectedRegion5)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='449'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R1'
	 message-id='(117, ,,test_lock_field.C.R1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='6'
	 file='/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java'
	 offset='807'
	 hash='-1432771232'
	 context='218577586'
	 message='Inherited region &quot;RegionFromGGPFilledInP&quot; contains fields; it cannot be protected. on Lock L12_bad is this protects RegionFromGGPFilledInP'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='70'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='1703'
	 hash='1742214995'
	 context='-1767391900'
	 message='RequiresLock p1:L, p2:L on test_requires_lock.TestDuplicates.good101(test_requires_lock.TestDuplicates,test_requires_lock.Other1)'
	 message-id='(102,RequiresLock p1:L, p2:L,test_requires_lock.TestDuplicates.good101(test_requires_lock.TestDuplicates,test_requires_lock.Other1))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='462'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region private test_lock_region.LockVizJUC.privateRegion2'
	 message-id='(117,private,,test_lock_region.LockVizJUC.privateRegion2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='50'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='1246'
	 hash='-176181199'
	 context='-1981324311'
	 message='ReturnsLock p:IL on test_returns_lock.C_Policy.getInstanceLock(test_returns_lock.C_Policy)'
	 message-id='(111,p:IL,test_returns_lock.C_Policy.getInstanceLock(test_returns_lock.C_Policy))'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='112'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='5991'
	 hash='-176181199'
	 context='-931204766'
	 message='ReturnsLock L108_good on test_lock_region.LockViz.getPrivateMadePublic1()'
	 message-id='(111,L108_good,test_lock_region.LockViz.getPrivateMadePublic1())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='256'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='9874'
	 hash='299452025'
	 context='-361042612'
	 message='RequiresLock PublicStaticLock on test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(int,java.lang.Object)'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(int,java.lang.Object))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='86'
	 file='/TestLockSanityChecks/src/test_requires_lock/C_Policy.java'
	 offset='2351'
	 hash='1279114817'
	 context='-748324092'
	 message='RequiresLock test_requires_lock.C_Policy:SL on test_requires_lock.C_Policy.Inner1.good2()'
	 message-id='(102,RequiresLock test_requires_lock.C_Policy:SL,test_requires_lock.C_Policy.Inner1.good2())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='193'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='7753'
	 hash='-751649176'
	 context='-670386292'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<ir-drop type='ProposedPromiseDrop'
	 line='14'
	 file='/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java'
	 offset='298'
	 hash='1404420706'
	 context='865271271'
	 message='ProposedPromiseDrop (EMPTY)'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java'
	 offset='454'
	 hash='431868570'
	 context='-411506372'
	 message='Region   test_lock_region.GreatGrandparent.RegionFromGGPWithNestedFieldFromP'
	 message-id='(117, ,,test_lock_region.GreatGrandparent.RegionFromGGPWithNestedFieldFromP)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='101'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='6175'
	 hash='-1553156935'
	 context='1124962693'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L104_good&quot;'
	 message-id='(214,&lt;this&gt;:L104_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='80'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='2095'
	 hash='-176181199'
	 context='1795861517'
	 message='ReturnsLock test_returns_lock.C_Policy.Inner1.this:InnerLock on test_returns_lock.C_Policy.Inner1.Inner2.getInnerLock_good()'
	 message-id='(111,test_returns_lock.C_Policy.Inner1.this:InnerLock,test_returns_lock.C_Policy.Inner1.Inner2.getInnerLock_good())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='34'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='913'
	 hash='-176181199'
	 context='-527567656'
	 message='ReturnsLock SL on test_returns_lock.C_Policy.getLock2()'
	 message-id='(111,SL,test_returns_lock.C_Policy.getLock2())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='218'
	 hash='-313213637'
	 context='-70732727'
	 message='Region private test_lock_region.LockViz.privateRegion1'
	 message-id='(117,private,,test_lock_region.LockViz.privateRegion1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='188'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='7438'
	 hash='-128688916'
	 context='-1173487127'
	 message='RequiresLock PublicStaticLock on test_requires_lock.PolicyLock_visibility.good_defaultMethod_publicStaticLock()'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.PolicyLock_visibility.good_defaultMethod_publicStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='3199'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L16_good is this.publicField protects publicRegion4 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L16_good,this.publicField,publicRegion4,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='32'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='886'
	 hash='172007611'
	 context='-1435768795'
	 message='RequiresLock StaticLock on test_requires_lock.StateLock_LockNames.good_implicit_staticLock()'
	 message-id='(102,RequiresLock StaticLock,test_requires_lock.StateLock_LockNames.good_implicit_staticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='22'
	 file='/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java'
	 offset='764'
	 hash='-275350688'
	 context='-1279588288'
	 message='Region private test_lock_region.GreatGrandparent.gppf1'
	 message-id='(117,private,,test_lock_region.GreatGrandparent.gppf1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='111'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='4295'
	 hash='1553573202'
	 context='-806537870'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.PolicyLock_visibility.good_privateStaticMethod_protectedStaticLock()'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.PolicyLock_visibility.good_privateStaticMethod_protectedStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='199'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='8012'
	 hash='-401431411'
	 context='-909901277'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.StateLock_visibility.good_defaultMethod_protectedStaticLock()'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.StateLock_visibility.good_defaultMethod_protectedStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='10'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='306'
	 hash='2055531658'
	 context='-6631327'
	 message='PolicyLock test_returns_lock.PLock.NonStaticLock is this on PLock'
	 message-id='(101,test_returns_lock.PLock.NonStaticLock,this,PLock)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='252'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='9753'
	 hash='-2085370204'
	 context='-67875145'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(int,float)'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(int,float))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='784'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   static test_lock_field.C.S4'
	 message-id='(117, , static,test_lock_field.C.S4)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='80'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='2354'
	 hash='-1824144862'
	 context='-1691604370'
	 message='Parameter &quot;p&quot; is not final; can only require locks on final parameters on p'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='122'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='3023'
	 hash='-176181199'
	 context='-2057415197'
	 message='Cannot reference &quot;this&quot; from a static method on this:NonStaticLock'
	 category='Modeling problems'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='121'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='6593'
	 hash='-176181199'
	 context='1342818889'
	 message='ReturnsLock L109_good on test_lock_region.LockVizJUC.getPrivateMadePublic2()'
	 message-id='(111,L109_good,test_lock_region.LockVizJUC.getPrivateMadePublic2())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='224'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='8976'
	 hash='-2144822515'
	 context='-1823764582'
	 message='lock &quot;DefaultStaticLock&quot; is less visible than requiring method/constructor on DefaultStaticLock'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='7'
	 file='/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java'
	 offset='184'
	 hash='-2008298754'
	 context='-1312633511'
	 message='RegionLock twoLocksOneRegion.sameClass.Bad.L is this.superLock protects R on Bad'
	 message-id='(100,twoLocksOneRegion.sameClass.Bad.L,this.superLock,R,Bad)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='23'
	 file='/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java'
	 offset='1215'
	 hash='297682518'
	 context='-1374688050'
	 message='PolicyLock qualified_receivers_as_locks.Outer.Inner.P2 is qualified_receivers_as_locks.Outer.this.field on Inner'
	 message-id='(101,qualified_receivers_as_locks.Outer.Inner.P2,qualified_receivers_as_locks.Outer.this.field,Inner)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='2816'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;test_lock_field.D.badFieldFromD&quot; is not from an ancestor of the annotated class. on Lock L19 is test_lock_field.D.badFieldFromD protects R17'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='306'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='11820'
	 hash='-167959571'
	 context='-257976938'
	 message='RequiresLock PublicStaticLock on test_requires_lock.StateLock_visibility.StateLock_visibility(java.lang.Object,java.lang.Object)'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.StateLock_visibility.StateLock_visibility(java.lang.Object,java.lang.Object))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='2957'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L14_good is this.publicField protects defaultRegion4 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L14_good,this.publicField,defaultRegion4,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='4312'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L108_good is this.privateFieldMadePublic protects privateRegion7 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L108_good,this.privateFieldMadePublic,privateRegion7,LockViz)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='1446'
	 hash='-1629113839'
	 context='1552614344'
	 message='RegionLock test_lock_field.C.L6 is class protects S2 on C'
	 message-id='(100,test_lock_field.C.L6,class,S2,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='133'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='5255'
	 hash='-144652760'
	 context='1426155226'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='117'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='3115'
	 hash='-176181199'
	 context='643910112'
	 message='ReturnsLock test_returns_lock.C:SL on test_returns_lock.C.Inner1.getLock2()'
	 message-id='(111,test_returns_lock.C:SL,test_returns_lock.C.Inner1.getLock2())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='216'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='8694'
	 hash='1728267047'
	 context='-1388323909'
	 message='RequiresLock PublicStaticLock on test_requires_lock.StateLock_visibility.good_protectedMethod_publicStaticLock()'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.StateLock_visibility.good_protectedMethod_publicStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='30'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='795'
	 hash='-176181199'
	 context='-1929764308'
	 message='Cannot qualify a static lock with a receiver or a method parameter on p:SL'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='97'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='5682'
	 hash='-1553156935'
	 context='234045547'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L104_good&quot;'
	 message-id='(214,&lt;this&gt;:L104_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='2582'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L11_good is this.protectedField protects protectedRegion3 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L11_good,this.protectedField,protectedRegion3,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='6'
	 file='/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java'
	 offset='109'
	 hash='-1405896066'
	 context='1288077303'
	 message='Region public twoLocksOneRegion.inherited.Super.R'
	 message-id='(117,public,,twoLocksOneRegion.inherited.Super.R)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='5'
	 file='/TestLockSanityChecks/src/test_lock_region/Other.java'
	 offset='69'
	 hash='925141909'
	 context='-73127011'
	 message='Region   static test_lock_region.Other.StaticRegionFromOther'
	 message-id='(117, , static,test_lock_region.Other.StaticRegionFromOther)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='InRegionPromiseDrop'
	 line='20'
	 file='/TestLockSanityChecks/src/test_lock_region/Grandparent.java'
	 offset='602'
	 hash='-1591525854'
	 context='-403843393'
	 message='InRegion(RegionFromGGPFilledInGP) on gpf1'
	 message-id='(107,RegionFromGGPFilledInGP,gpf1)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='182'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='7214'
	 hash='-1061545190'
	 context='1399251893'
	 message='RequiresLock DefaultStaticLock on test_requires_lock.PolicyLock_visibility.good_defaultMethod_defaultStaticLock()'
	 message-id='(102,RequiresLock DefaultStaticLock,test_requires_lock.PolicyLock_visibility.good_defaultMethod_defaultStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='2333'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L9_good is this.protectedField protects privateRegion3 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L9_good,this.protectedField,privateRegion3,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='98'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='2500'
	 hash='-176181199'
	 context='390112938'
	 message='Parameter &quot;p&quot; is not final; can only require locks on final parameters on p'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='1349'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L1_good is this.privateField protects privateRegion1 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L1_good,this.privateField,privateRegion1,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='326'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='12437'
	 hash='-876886438'
	 context='-59441839'
	 message='RequiresLock test_requires_lock.D:PrivateStaticLock on test_requires_lock.StateLock_visibility.good_otherClassTest2()'
	 message-id='(102,RequiresLock test_requires_lock.D:PrivateStaticLock,test_requires_lock.StateLock_visibility.good_otherClassTest2())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='82'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='3176'
	 hash='-69313099'
	 context='642741326'
	 message='RequiresLock PublicLock on test_requires_lock.PolicyLock_visibility.good_protectedMethod_publicLock()'
	 message-id='(102,RequiresLock PublicLock,test_requires_lock.PolicyLock_visibility.good_protectedMethod_publicLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='1721'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L4_bad is this.privateField protects publicRegion1 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L4_bad,this.privateField,publicRegion1,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='100'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='3011'
	 hash='535811443'
	 context='929896268'
	 message='Cannot reference &quot;this&quot; from a static method on NonStaticLock'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='196'
	 hash='-313213637'
	 context='-70732727'
	 message='Lock field &quot;this.privateField&quot; is less visible than region &quot;defaultRegion1&quot;; consider protecting a less visible region or adding a lock getter method'
	 message-id='(257,this.privateField,defaultRegion1)'
	 category='lock field(s) less visible than the region(s) being protected'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='390'
	 hash='729177316'
	 context='1125120880'
	 message='Region   static test_lock_region.C.S1'
	 message-id='(117, , static,test_lock_region.C.S1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='113'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='3477'
	 hash='923123308'
	 context='-401821607'
	 message='RequiresLock test_requires_lock.PolicyLock_LockNames:StaticLock on test_requires_lock.PolicyLock_LockNames.good_staticMethod_typeQualified_staticLock()'
	 message-id='(102,RequiresLock test_requires_lock.PolicyLock_LockNames:StaticLock,test_requires_lock.PolicyLock_LockNames.good_staticMethod_typeQualified_staticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='38'
	 file='/TestLockSanityChecks/src/test_requires_lock/C_Policy.java'
	 offset='959'
	 hash='1279114817'
	 context='31908757'
	 message='RequiresLock this:IL on test_requires_lock.C_Policy.good2()'
	 message-id='(102,RequiresLock this:IL,test_requires_lock.C_Policy.good2())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='196'
	 hash='-313213637'
	 context='-70732727'
	 message='Lock field &quot;this.defaultField&quot; is less visible than region &quot;protectedRegion2&quot;; consider protecting a less visible region or adding a lock getter method'
	 message-id='(257,this.defaultField,protectedRegion2)'
	 category='lock field(s) less visible than the region(s) being protected'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='766'
	 hash='-313213637'
	 context='-70732727'
	 message='Region public test_lock_region.LockViz.publicRegion4'
	 message-id='(117,public,,test_lock_region.LockViz.publicRegion4)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='188'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='7629'
	 hash='500317201'
	 context='-1957030522'
	 message='RequiresLock PublicStaticLock on test_requires_lock.StateLock_visibility.good_privateMethod_publicStaticLock()'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.StateLock_visibility.good_privateMethod_publicStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='10'
	 file='/TestLockSanityChecks/src/test_unique_names/BadC2.java'
	 offset='305'
	 hash='-159138644'
	 context='1000493613'
	 message='Lock &quot;P1&quot; already declared in ancestor class test_unique_names.C1 on PolicyLock P1 is class'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='61'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='1706'
	 hash='-2072113803'
	 context='-1315678939'
	 message='Couldn&apos;t resolve a binding for p on RequiresLock p:DoesntExist on p'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_unique_names/GoodC3.java'
	 offset='138'
	 hash='-1105572404'
	 context='1106965972'
	 message='Region public test_unique_names.GoodC3.R3'
	 message-id='(117,public,,test_unique_names.GoodC3.R3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='26'
	 file='/TestLockSanityChecks/src/test_requires_lock/C_Policy.java'
	 offset='642'
	 hash='-144065466'
	 context='232515222'
	 message='Cannot qualify a static lock with a receiver or a method parameter on p:SL'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='37'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java'
	 offset='1219'
	 hash='-190100193'
	 context='-1319258579'
	 message='RequiresLock StaticLock on test_requires_lock.PolicyLock_Constructor.PolicyLock_Constructor(int,int,int)'
	 message-id='(102,RequiresLock StaticLock,test_requires_lock.PolicyLock_Constructor.PolicyLock_Constructor(int,int,int))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='3652'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L200_good is this protects publicRegion100 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L200_good,this,publicRegion100,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='164'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='6595'
	 hash='189638819'
	 context='-1100627224'
	 message='lock &quot;DefaultStaticLock&quot; is less visible than requiring method/constructor on DefaultStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='694'
	 hash='-313213637'
	 context='-70732727'
	 message='Region   test_lock_region.LockViz.defaultRegion4'
	 message-id='(117, ,,test_lock_region.LockViz.defaultRegion4)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='2319'
	 hash='-1629113839'
	 context='1552614344'
	 message='Couldn&apos;t resolve a binding for this.fieldFromD on Lock L14 is this.fieldFromD protects R12 on this.fieldFromD'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='147'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='5796'
	 hash='187431565'
	 context='284290375'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='510'
	 hash='-313213637'
	 context='-70732727'
	 message='Region private test_lock_region.LockViz.privateRegion3'
	 message-id='(117,private,,test_lock_region.LockViz.privateRegion3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='142'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='5599'
	 hash='7005735'
	 context='1896391630'
	 message='RequiresLock PublicStaticLock on test_requires_lock.PolicyLock_visibility.good_protectedStaticMethod_publicStaticLock()'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.PolicyLock_visibility.good_protectedStaticMethod_publicStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='938'
	 hash='-1629113839'
	 context='1552614344'
	 message='Couldn&apos;t resolve a binding for this.unknownField on Lock L1 is this.unknownField protects R1 on this.unknownField'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='1114'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region protected test_lock_region.LockVizJUC.protectedRegion6'
	 message-id='(117,protected,,test_lock_region.LockVizJUC.protectedRegion6)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='29'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='661'
	 hash='-874699482'
	 context='825906835'
	 message='Lock &quot;&lt;this&gt;:L&quot; held when accessing this.v'
	 message-id='(203,&lt;this&gt;:L,this.v,null)'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='152'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='4941'
	 hash='-1398110339'
	 context='34618433'
	 message='RequiresLock p:NonStaticLock on test_requires_lock.StateLock_LockNames.staticMethod_paramLock(test_requires_lock.StateLock_LockNames)'
	 message-id='(102,RequiresLock p:NonStaticLock,test_requires_lock.StateLock_LockNames.staticMethod_paramLock(test_requires_lock.StateLock_LockNames))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='24'
	 file='/TestLockSanityChecks/src/test_lock_region/Grandparent.java'
	 offset='779'
	 hash='-1590602333'
	 context='-403843392'
	 message='Region private test_lock_region.Grandparent.gpf2'
	 message-id='(117,private,,test_lock_region.Grandparent.gpf2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='59'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='2573'
	 hash='1760647457'
	 context='1105948652'
	 message='RequiresLock PrivateLock on test_requires_lock.StateLock_visibility.good_privateMethod_privateLock()'
	 message-id='(102,RequiresLock PrivateLock,test_requires_lock.StateLock_visibility.good_privateMethod_privateLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='106'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='3246'
	 hash='1902247597'
	 context='-1438349294'
	 message='RequiresLock StaticLock on test_requires_lock.PolicyLock_LockNames.good_staticMethod_implicit_staticLock()'
	 message-id='(102,RequiresLock StaticLock,test_requires_lock.PolicyLock_LockNames.good_staticMethod_implicit_staticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='66'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='1726'
	 hash='-176181199'
	 context='902171303'
	 message='ReturnsLock Exists on test_returns_lock.StateLock.getLock_exists()'
	 message-id='(111,Exists,test_returns_lock.StateLock.getLock_exists())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='79'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='2354'
	 hash='-847272636'
	 context='-977397659'
	 message='RequiresLock p:Exists on test_requires_lock.PolicyLock_LockNames.good_param_is_good(test_requires_lock.PolicyLock_LockNames)'
	 message-id='(102,RequiresLock p:Exists,test_requires_lock.PolicyLock_LockNames.good_param_is_good(test_requires_lock.PolicyLock_LockNames))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='392'
	 hash='-1310360451'
	 context='1262541058'
	 message='RegionLock test_returns_lock.StateLock.Exists is this protects R on StateLock'
	 message-id='(100,test_returns_lock.StateLock.Exists,this,R,StateLock)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='221'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='8822'
	 hash='-2130741237'
	 context='-1245574180'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='99'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='6110'
	 hash='-176181199'
	 context='1124962693'
	 message='ReturnsLock L104_good on test_lock_region.LockVizJUC.getPrivateMadeProtected1()'
	 message-id='(111,L104_good,test_lock_region.LockVizJUC.getPrivateMadeProtected1())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='855'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R101'
	 message-id='(117, ,,test_lock_field.C.R101)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='134'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='3426'
	 hash='-176181199'
	 context='427945144'
	 message='ReturnsLock test_returns_lock.PLock:StaticLock on test_returns_lock.PLock.getLock_staticMethod_staticRegion1a()'
	 message-id='(111,test_returns_lock.PLock:StaticLock,test_returns_lock.PLock.getLock_staticMethod_staticRegion1a())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='6'
	 file='/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java'
	 offset='1789'
	 hash='-1432771232'
	 context='218577586'
	 message='RegionLock test_lock_region.ProtectInheritedRegion.L50_good is this protects RegionFromGPWithSubRegionFromGP on ProtectInheritedRegion'
	 message-id='(100,test_lock_region.ProtectInheritedRegion.L50_good,this,RegionFromGPWithSubRegionFromGP,ProtectInheritedRegion)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='185'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='5016'
	 hash='-176181199'
	 context='894142232'
	 message='Cannot qualify a static lock with a receiver or a method parameter on test_returns_lock.PLock.this:StaticLock'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='118'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='6539'
	 hash='-1087838202'
	 context='1342817928'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L108_good&quot;'
	 message-id='(214,&lt;this&gt;:L108_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='LockModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='1260'
	 hash='729177316'
	 context='1125120880'
	 message='RegionLock test_lock_region.C.L6 is this.staticFieldFromC protects StaticRegionFromC1 on C'
	 message-id='(100,test_lock_region.C.L6,this.staticFieldFromC,StaticRegionFromC1,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='6'
	 file='/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java'
	 offset='944'
	 hash='-1432771232'
	 context='218577586'
	 message='Inherited region &quot;RegionFromGPFilledInGP&quot; contains fields; it cannot be protected. on Lock L20_bad is this protects RegionFromGPFilledInGP'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='4614'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L110_good is this.privateFieldMadePublic protects protectedRegion7 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L110_good,this.privateFieldMadePublic,protectedRegion7,LockViz)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='96'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='3724'
	 hash='2057231077'
	 context='-968388543'
	 message='RequiresLock PublicLock on test_requires_lock.PolicyLock_visibility.good_publicMethod_publicLock()'
	 message-id='(102,RequiresLock PublicLock,test_requires_lock.PolicyLock_visibility.good_publicMethod_publicLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java'
	 offset='337'
	 hash='-1997100595'
	 context='-732674470'
	 message='Region public inherited_region.Subregion.BadRoot2.R'
	 message-id='(117,public,,inherited_region.Subregion.BadRoot2.R)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='106'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='2723'
	 hash='-176181199'
	 context='958229302'
	 message='ReturnsLock p:Exists on test_returns_lock.StateLock.getLock_param_good(test_returns_lock.StateLock)'
	 message-id='(111,p:Exists,test_returns_lock.StateLock.getLock_param_good(test_returns_lock.StateLock))'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='93'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='3750'
	 hash='1954709312'
	 context='-1174256510'
	 message='RequiresLock ProtectedLock on test_requires_lock.StateLock_visibility.good_protectedMethod_protectedLock()'
	 message-id='(102,RequiresLock ProtectedLock,test_requires_lock.StateLock_visibility.good_protectedMethod_protectedLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='76'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='3144'
	 hash='-1111037976'
	 context='-1426391064'
	 message='RequiresLock DefaultLock on test_requires_lock.StateLock_visibility.good_defaultMethod_defaultLock()'
	 message-id='(102,RequiresLock DefaultLock,test_requires_lock.StateLock_visibility.good_defaultMethod_defaultLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java'
	 offset='503'
	 hash='431868570'
	 context='-411506372'
	 message='Region   test_lock_region.GreatGrandparent.GGPSubRegion1'
	 message-id='(117, ,,test_lock_region.GreatGrandparent.GGPSubRegion1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='3895'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L100_good is this.privateFieldMadeDefault protects privateRegion5 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L100_good,this.privateFieldMadeDefault,privateRegion5,LockVizJUC)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='10'
	 file='/TestLockSanityChecks/src/test_unique_names/BadC2.java'
	 offset='211'
	 hash='-159138644'
	 context='1000493613'
	 message='Lock &quot;L1&quot; already declared in ancestor class test_unique_names.C1 on Lock L1 is this protects R2'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='125'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='3998'
	 hash='-1883599067'
	 context='-1285255168'
	 message='Couldn&apos;t resolve a binding for DoesntExist on RequiresLock DoesntExist on DoesntExist'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='6'
	 file='/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java'
	 offset='130'
	 hash='-1432771232'
	 context='218577586'
	 message='RegionLock test_lock_region.ProtectInheritedRegion.L1_good is this protects EmptyRegionFromGreatGrandparent on ProtectInheritedRegion'
	 message-id='(100,test_lock_region.ProtectInheritedRegion.L1_good,this,EmptyRegionFromGreatGrandparent,ProtectInheritedRegion)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='312'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='11772'
	 hash='-876886438'
	 context='586996752'
	 message='RequiresLock test_requires_lock.D:PrivateStaticPolicyLock on test_requires_lock.PolicyLock_visibility.good_otherClassTest2()'
	 message-id='(102,RequiresLock test_requires_lock.D:PrivateStaticPolicyLock,test_requires_lock.PolicyLock_visibility.good_otherClassTest2())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/Parent.java'
	 offset='397'
	 hash='520265152'
	 context='2039410109'
	 message='Region   test_lock_region.Parent.PSubRegion3'
	 message-id='(117, ,,test_lock_region.Parent.PSubRegion3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='InfoDrop'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/Other.java'
	 offset='179'
	 hash='1614283795'
	 context='-1869762197'
	 message='Other.&lt;clinit&gt; has effect &quot;nothing&quot; from new java.lang.Object'
	 result-type='classInitEffects'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='49'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java'
	 offset='1582'
	 hash='1421811008'
	 context='-1498892040'
	 message='RequiresLock test_requires_lock.StateLock_Constructor:StaticLock on test_requires_lock.StateLock_Constructor.StateLock_Constructor(int,int,int,int)'
	 message-id='(102,RequiresLock test_requires_lock.StateLock_Constructor:StaticLock,test_requires_lock.StateLock_Constructor.StateLock_Constructor(int,int,int,int))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='3384'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L15_good is this.publicField protects protectedRegion4 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L15_good,this.publicField,protectedRegion4,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='127'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='3282'
	 hash='1683461060'
	 context='290897579'
	 message='Return statement correctly returns lock &quot;StaticLock&quot;'
	 message-id='(214,StaticLock)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='122'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='4852'
	 hash='-433813217'
	 context='-1432655738'
	 message='RequiresLock DefaultStaticLock on test_requires_lock.StateLock_visibility.good_privateStaticMethod_defaultStaticLock()'
	 message-id='(102,RequiresLock DefaultStaticLock,test_requires_lock.StateLock_visibility.good_privateStaticMethod_defaultStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='196'
	 hash='-313213637'
	 context='-70732727'
	 message='Lock field &quot;this.privateField&quot; is less visible than region &quot;publicRegion1&quot;; consider protecting a less visible region or adding a lock getter method'
	 message-id='(257,this.privateField,publicRegion1)'
	 category='lock field(s) less visible than the region(s) being protected'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='93'
	 file='/TestLockSanityChecks/src/test_requires_lock/C.java'
	 offset='2466'
	 hash='1279114817'
	 context='204663693'
	 message='RequiresLock test_requires_lock.C:SL on test_requires_lock.C.Inner1.good2()'
	 message-id='(102,RequiresLock test_requires_lock.C:SL,test_requires_lock.C.Inner1.good2())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='176'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='4843'
	 hash='-926745925'
	 context='783578077'
	 message='Return statement correctly returns lock &quot;&lt;p&gt;:NonStaticLock&quot;'
	 message-id='(214,&lt;p&gt;:NonStaticLock)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<result-drop type='ResultDrop'
	 line='44'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='1150'
	 hash='-632933779'
	 context='-1834719951'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:IL&quot;'
	 message-id='(214,&lt;this&gt;:IL)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='127'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='6336'
	 hash='-176181199'
	 context='-931201883'
	 message='ReturnsLock L111_good on test_lock_region.LockViz.getPrivateMadePublic4()'
	 message-id='(111,L111_good,test_lock_region.LockViz.getPrivateMadePublic4())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='34'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='912'
	 hash='-176181199'
	 context='-1909668982'
	 message='ReturnsLock StaticLock on test_returns_lock.StateLock.getLock_implicit_staticLock()'
	 message-id='(111,StaticLock,test_returns_lock.StateLock.getLock_implicit_staticLock())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='95'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='2556'
	 hash='-810017208'
	 context='-621710774'
	 message='Return statement correctly returns lock &quot;&lt;test_returns_lock.C.this&gt;:IL&quot;'
	 message-id='(214,&lt;test_returns_lock.C.this&gt;:IL)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='LockModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_requires_lock/Root.java'
	 offset='230'
	 hash='-318026398'
	 context='-748972703'
	 message='PolicyLock test_requires_lock.Root.PrivateRootStaticPolicyLock is class on Root'
	 message-id='(101,test_requires_lock.Root.PrivateRootStaticPolicyLock,class,Root)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='287'
	 hash='291111035'
	 context='1286965051'
	 message='Region   test_requires_lock.StateLock_LockNames.R'
	 message-id='(117, ,,test_requires_lock.StateLock_LockNames.R)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='ProposedPromiseDrop'
	 line='82'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='1934'
	 hash='1133856506'
	 context='1768315240'
	 message='ProposedPromiseDrop (EMPTY)'/>

<promise-drop type='RegionModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java'
	 offset='630'
	 hash='-2106587626'
	 context='171286543'
	 message='Region   test_unique_names.StateVsPolicyLocks.A'
	 message-id='(117, ,,test_unique_names.StateVsPolicyLocks.A)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='1048'
	 hash='729177316'
	 context='1125120880'
	 message='RegionLock test_lock_region.C.L4 is class protects S3 on C'
	 message-id='(100,test_lock_region.C.L4,class,S3,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='122'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='6221'
	 hash='-176181199'
	 context='-931202844'
	 message='ReturnsLock L110_good on test_lock_region.LockViz.getPrivateMadePublic3()'
	 message-id='(111,L110_good,test_lock_region.LockViz.getPrivateMadePublic3())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='4400'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L105_good is this.privateFieldMadeProtected protects defaultRegion6 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L105_good,this.privateFieldMadeProtected,defaultRegion6,LockVizJUC)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='50'
	 file='/TestLockSanityChecks/src/test_requires_lock/C.java'
	 offset='1224'
	 hash='-228704866'
	 context='-1646708439'
	 message='RequiresLock p:IL on test_requires_lock.C.good3(test_requires_lock.C)'
	 message-id='(102,RequiresLock p:IL,test_requires_lock.C.good3(test_requires_lock.C))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='InRegionPromiseDrop'
	 line='31'
	 file='/TestLockSanityChecks/src/test_lock_region/Parent.java'
	 offset='846'
	 hash='-709593364'
	 context='416178509'
	 message='InRegion(PSubRegion4) on pf4'
	 message-id='(107,PSubRegion4,pf4)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='23'
	 file='/TestLockSanityChecks/src/test_lock_region/Parent.java'
	 offset='732'
	 hash='-711440406'
	 context='416178507'
	 message='Region private test_lock_region.Parent.pf2'
	 message-id='(117,private,,test_lock_region.Parent.pf2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='120'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='3687'
	 hash='923123308'
	 context='-1902669384'
	 message='RequiresLock test_requires_lock.StateLock_LockNames:StaticLock on test_requires_lock.StateLock_LockNames.good_staticMethod_typeQualified_staticLock()'
	 message-id='(102,RequiresLock test_requires_lock.StateLock_LockNames:StaticLock,test_requires_lock.StateLock_LockNames.good_staticMethod_typeQualified_staticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='109'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='2889'
	 hash='-176181199'
	 context='436412980'
	 message='Cannot qualify a static lock with a receiver or a method parameter on test_returns_lock.C.this:SL'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/Grandparent.java'
	 offset='310'
	 hash='-2066578384'
	 context='-1221517437'
	 message='Region   test_lock_region.Grandparent.RegionFromGPWithSubRegionFromP'
	 message-id='(117, ,,test_lock_region.Grandparent.RegionFromGPWithSubRegionFromP)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='68'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='1919'
	 hash='-2072113803'
	 context='-1370702332'
	 message='Couldn&apos;t resolve a binding for p on RequiresLock p:DoesntExist on p'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='26'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='678'
	 hash='-176181199'
	 context='-400150732'
	 message='Cannot qualify a static lock with a receiver or a method parameter on p:SL'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='5'
	 file='/TestLockSanityChecks/src/test_lock_region/D.java'
	 offset='69'
	 hash='-358243132'
	 context='1125120881'
	 message='Region   static test_lock_region.D.StaticRegionFromD'
	 message-id='(117, , static,test_lock_region.D.StaticRegionFromD)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java'
	 offset='687'
	 hash='-2106587626'
	 context='171286543'
	 message='PolicyLock test_unique_names.StateVsPolicyLocks.L is class on StateVsPolicyLocks'
	 message-id='(101,test_unique_names.StateVsPolicyLocks.L,class,StateVsPolicyLocks)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='227'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='9130'
	 hash='-2048855104'
	 context='148411847'
	 message='lock &quot;ProtectedStaticLock&quot; is less visible than requiring method/constructor on ProtectedStaticLock'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='294'
	 hash='-1365833300'
	 context='1630346095'
	 message='Lock field &quot;this.privateField&quot; is less visible than region &quot;publicRegion1&quot;; consider protecting a less visible region or adding a lock getter method'
	 message-id='(257,this.privateField,publicRegion1)'
	 category='lock field(s) less visible than the region(s) being protected'/>

<promise-drop type='InRegionPromiseDrop'
	 line='17'
	 file='/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java'
	 offset='418'
	 hash='120'
	 context='274472420'
	 message='InRegion(R) on x'
	 message-id='(107,R,x)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='216'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='8602'
	 hash='735910999'
	 context='-179729265'
	 message='RequiresLock PublicStaticLock on test_requires_lock.PolicyLock_visibility.good_publicMethod_publicStaticLock()'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.PolicyLock_visibility.good_publicMethod_publicStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='150'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='3955'
	 hash='-176181199'
	 context='1143256410'
	 message='Couldn&apos;t resolve a binding for DoesntExist on ReturnsLock DoesntExist on DoesntExist'
	 category='Modeling problems'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='92'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='5998'
	 hash='-176181199'
	 context='1747880467'
	 message='ReturnsLock L101_good on test_lock_region.LockVizJUC.getPrivateMadeDefault2()'
	 message-id='(111,L101_good,test_lock_region.LockVizJUC.getPrivateMadeDefault2())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='73'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='2142'
	 hash='1848348389'
	 context='-668364402'
	 message='Parameter &quot;p&quot; is not final; can only require locks on final parameters on p'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='521'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R5'
	 message-id='(117, ,,test_lock_field.C.R5)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='3418'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L201_good is class protects publicStaticRegion on LockViz'
	 message-id='(100,test_lock_region.LockViz.L201_good,class,publicStaticRegion,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='82'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='2219'
	 hash='911995140'
	 context='1795861517'
	 message='Return statement correctly returns lock &quot;&lt;test_returns_lock.C_Policy . Inner1.this&gt;:InnerLock&quot;'
	 message-id='(214,&lt;test_returns_lock.C_Policy . Inner1.this&gt;:InnerLock)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<ir-drop type='PromiseWarningDrop'
	 line='164'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='4464'
	 hash='-176181199'
	 context='840445273'
	 message='Couldn&apos;t resolve a binding for DoesntExist on ReturnsLock DoesntExist on DoesntExist'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='294'
	 hash='-1365833300'
	 context='1630346095'
	 message='Lock field &quot;this.defaultField&quot; is less visible than region &quot;protectedRegion2&quot;; consider protecting a less visible region or adding a lock getter method'
	 message-id='(257,this.defaultField,protectedRegion2)'
	 category='lock field(s) less visible than the region(s) being protected'/>

<ir-drop type='PromiseWarningDrop'
	 line='22'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='594'
	 hash='-176181199'
	 context='-520815427'
	 message='Cannot qualify a static lock with a receiver or a method parameter on this:SL'
	 category='Modeling problems'/>

<ir-drop type='InfoDrop'
	 line='43'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='1927'
	 hash='1614283795'
	 context='-928534141'
	 message='StateLock_visibility.&lt;clinit&gt; has effect &quot;nothing&quot; from new java.lang.Object'
	 result-type='classInitEffects'/>

<result-drop type='ResultDrop'
	 line='114'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='6052'
	 hash='-1087838202'
	 context='-931204766'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L108_good&quot;'
	 message-id='(214,&lt;this&gt;:L108_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<result-drop type='ResultDrop'
	 line='90'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='5556'
	 hash='-12564602'
	 context='-27346311'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L101_good&quot;'
	 message-id='(214,&lt;this&gt;:L101_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='1642'
	 hash='-1629113839'
	 context='1552614344'
	 message='Field &quot;this.badStatic&quot; is not final on Lock L8 is this.badStatic protects S4'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='10'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='308'
	 hash='-928720355'
	 context='-536546566'
	 message='PolicyLock test_requires_lock.PolicyLock_LockNames.NonStaticLock is this on PolicyLock_LockNames'
	 message-id='(101,test_requires_lock.PolicyLock_LockNames.NonStaticLock,this,PolicyLock_LockNames)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='168'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='6701'
	 hash='1257775253'
	 context='1634059383'
	 message='RequiresLock DefaultStaticLock on test_requires_lock.PolicyLock_visibility.good_privateMethod_defaultStaticLock()'
	 message-id='(102,RequiresLock DefaultStaticLock,test_requires_lock.PolicyLock_visibility.good_privateMethod_defaultStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_unique_names/GoodC2.java'
	 offset='253'
	 hash='-1507112528'
	 context='1106965971'
	 message='PolicyLock test_unique_names.GoodC2.P2 is class on GoodC2'
	 message-id='(101,test_unique_names.GoodC2.P2,class,GoodC2)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='50'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='1461'
	 hash='1395052536'
	 context='410719372'
	 message='Couldn&apos;t resolve a binding for DoesntExist on RequiresLock DoesntExist on DoesntExist'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='2421'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L8_bad is this.defaultField protects publicRegion2 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L8_bad,this.defaultField,publicRegion2,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='1058'
	 hash='-313213637'
	 context='-70732727'
	 message='Region public test_lock_region.LockViz.publicRegion6'
	 message-id='(117,public,,test_lock_region.LockViz.publicRegion6)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='1038'
	 hash='1567307990'
	 context='457502804'
	 message='Region protected static test_requires_lock.StateLock_visibility.ProtectedStaticRegion'
	 message-id='(117,protected, static,test_requires_lock.StateLock_visibility.ProtectedStaticRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='578'
	 hash='-313213637'
	 context='-70732727'
	 message='Region protected test_lock_region.LockViz.protectedRegion3'
	 message-id='(117,protected,,test_lock_region.LockViz.protectedRegion3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='4769'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L111_good is this.privateFieldMadePublic protects publicRegion7 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L111_good,this.privateFieldMadePublic,publicRegion7,LockViz)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='276'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='10680'
	 hash='16896790'
	 context='1127075146'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='918'
	 hash='729177316'
	 context='1125120880'
	 message='Static region &quot;S2&quot; should be protected by a static field on Lock L3 is this.nonStaticField protects S2'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_unique_names/C1.java'
	 offset='138'
	 hash='-1907096630'
	 context='-510472267'
	 message='Region public test_unique_names.C1.R1'
	 message-id='(117,public,,test_unique_names.C1.R1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='119'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='3740'
	 hash='-449707740'
	 context='711029793'
	 message='Couldn&apos;t resolve a binding for this:DoesntExist on RequiresLock this:DoesntExist on this:DoesntExist'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='90'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='3434'
	 hash='-767223269'
	 context='-1451743413'
	 message='lock &quot;DefaultLock&quot; is less visible than requiring method/constructor on DefaultLock'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='74'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='1958'
	 hash='911995140'
	 context='-1394327389'
	 message='Return statement expected to return lock &quot;&lt;test_returns_lock.C_Policy.this&gt;:IL&quot;'
	 message-id='(215,&lt;test_returns_lock.C_Policy.this&gt;:IL)'
	 category='return statement(s) possibly returning the wrong lock'
	 result-type='215'/>

<ir-drop type='PromiseWarningDrop'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='719'
	 hash='729177316'
	 context='1125120880'
	 message='Couldn&apos;t resolve a binding for UnknownRegion on Lock L1 is this protects UnknownRegion on UnknownRegion'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='3316'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L200_good is this protects publicRegion100 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L200_good,this,publicRegion100,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='78'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='2068'
	 hash='-267281149'
	 context='1882343140'
	 message='Return statement expected to return lock &quot;&lt;test_returns_lock.C.this&gt;:IL&quot;'
	 message-id='(215,&lt;test_returns_lock.C.this&gt;:IL)'
	 category='return statement(s) possibly returning the wrong lock'
	 result-type='215'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='3251'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L14_good is this.publicField protects defaultRegion4 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L14_good,this.publicField,defaultRegion4,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='87'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='2064'
	 hash='109176'
	 context='-1466581038'
	 message='Lock &quot;&lt;p&gt;:L&quot; not held when accessing p.v'
	 message-id='(205,&lt;p&gt;:L,p.v,null)'
	 category='unprotected field access(es); possible race condition detected'
	 result-type='205'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/Parent.java'
	 offset='183'
	 hash='520265152'
	 context='2039410109'
	 message='Region   test_lock_region.Parent.RegionFromPFilledInP'
	 message-id='(117, ,,test_lock_region.Parent.RegionFromPFilledInP)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='195'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='5440'
	 hash='424555168'
	 context='-64334199'
	 message='Return statement correctly returns lock &quot;&lt;test_returns_lock.PLock.this&gt;:NonStaticLock&quot;'
	 message-id='(214,&lt;test_returns_lock.PLock.this&gt;:NonStaticLock)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='5245'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L111_good is this.privateFieldMadePublic protects publicRegion7 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L111_good,this.privateFieldMadePublic,publicRegion7,LockVizJUC)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_requires_lock/Other1.java'
	 offset='248'
	 hash='1765761508'
	 context='1710248928'
	 message='Region protected static test_requires_lock.Other1.StaticRegion'
	 message-id='(117,protected, static,test_requires_lock.Other1.StaticRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='26'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='670'
	 hash='-386654280'
	 context='94826504'
	 message='Cannot qualify a static lock with a receiver or a method parameter on this:StaticLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/Grandparent.java'
	 offset='188'
	 hash='-2066578384'
	 context='-1221517437'
	 message='Region   test_lock_region.Grandparent.RegionFromGPFilledInGP'
	 message-id='(117, ,,test_lock_region.Grandparent.RegionFromGPFilledInGP)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='179'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='7065'
	 hash='-751649176'
	 context='-1126194451'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='316'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region private test_lock_region.LockVizJUC.privateRegion1'
	 message-id='(117,private,,test_lock_region.LockVizJUC.privateRegion1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='100'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='2875'
	 hash='1471852354'
	 context='823876638'
	 message='Cannot reference &quot;this&quot; from a static method on this:NonStaticLock'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_requires_lock/C.java'
	 offset='489'
	 hash='-365293692'
	 context='-115649468'
	 message='RegionLock test_requires_lock.C.SL is class protects S on C'
	 message-id='(100,test_requires_lock.C.SL,class,S,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='3118'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L13_good is this.publicField protects privateRegion4 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L13_good,this.publicField,privateRegion4,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='326'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='12231'
	 hash='-1171592198'
	 context='-1960452604'
	 message='RequiresLock test_requires_lock.Root:PrivateRootStaticPolicyLock on test_requires_lock.PolicyLock_visibility.good_ancestorClassTest1()'
	 message-id='(102,RequiresLock test_requires_lock.Root:PrivateRootStaticPolicyLock,test_requires_lock.PolicyLock_visibility.good_ancestorClassTest1())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='InfoDrop'
	 line='31'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='1367'
	 hash='1614283795'
	 context='1331521143'
	 message='PolicyLock_visibility.&lt;clinit&gt; has effect &quot;nothing&quot; from new java.lang.Object'
	 result-type='classInitEffects'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java'
	 offset='444'
	 hash='-1870665092'
	 context='1325374168'
	 message='Region   test_requires_lock.StateLock_Constructor.NonStaticRegion'
	 message-id='(117, ,,test_requires_lock.StateLock_Constructor.NonStaticRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='490'
	 hash='729177316'
	 context='1125120880'
	 message='Region   static test_lock_region.C.StaticRegionFromC1'
	 message-id='(117, , static,test_lock_region.C.StaticRegionFromC1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='900'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region private test_lock_region.LockVizJUC.privateRegion5'
	 message-id='(117,private,,test_lock_region.LockVizJUC.privateRegion5)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='84'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='2028'
	 hash='-176181199'
	 context='1634062858'
	 message='Parameter &quot;p&quot; is not final; can only require locks on final parameters on p'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='138'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='4454'
	 hash='270173923'
	 context='1195294177'
	 message='Couldn&apos;t resolve a binding for NoSuchClass on RequiresLock NoSuchClass:DoesntExist on NoSuchClass'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='93'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='2665'
	 hash='1471852354'
	 context='-2071521251'
	 message='Cannot reference &quot;this&quot; from a static method on this:NonStaticLock'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='107'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='4264'
	 hash='-1131498226'
	 context='1329849209'
	 message='lock &quot;ProtectedLock&quot; is less visible than requiring method/constructor on ProtectedLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java'
	 offset='146'
	 hash='431868570'
	 context='-411506372'
	 message='Region   test_lock_region.GreatGrandparent.EmptyRegionFromGreatGrandparent'
	 message-id='(117, ,,test_lock_region.GreatGrandparent.EmptyRegionFromGreatGrandparent)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='91'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='2460'
	 hash='1937511719'
	 context='-1676318903'
	 message='Return statement correctly returns lock &quot;&lt;test_returns_lock.C_Policy.this&gt;:IL&quot;'
	 message-id='(214,&lt;test_returns_lock.C_Policy.this&gt;:IL)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='56'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='1607'
	 hash='-1907576257'
	 context='-910948507'
	 message='RequiresLock Exists on test_requires_lock.StateLock_LockNames.good_exists_implicit_this()'
	 message-id='(102,RequiresLock Exists,test_requires_lock.StateLock_LockNames.good_exists_implicit_this())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='36'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='2193'
	 hash='37893546'
	 context='1424913927'
	 message='/TestLockSanityChecks/src/test_lock_region/C.java:49 -- Unable to parse past @RegionLock L11 is staticFieldFromC protects test_lock_region ___ .D:StaticRegionFromD'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='354'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region   test_lock_region.LockVizJUC.defaultRegion1'
	 message-id='(117, ,,test_lock_region.LockVizJUC.defaultRegion1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='300'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='11344'
	 hash='134840866'
	 context='-700673378'
	 message='RequiresLock p:PrivateLock on test_requires_lock.PolicyLock_visibility.good_parameterTest(test_requires_lock.PolicyLock_visibility)'
	 message-id='(102,RequiresLock p:PrivateLock,test_requires_lock.PolicyLock_visibility.good_parameterTest(test_requires_lock.PolicyLock_visibility))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='4612'
	 hash='-1629113839'
	 context='1552614344'
	 message='Couldn&apos;t resolve a binding for this.fieldFromD on PolicyLock P14 is this.fieldFromD on this.fieldFromD'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='22'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='501'
	 hash='2011540541'
	 context='-1053057890'
	 message='RequiresLock L on test_requires_lock.TestDuplicates.set1(int)'
	 message-id='(102,RequiresLock L,test_requires_lock.TestDuplicates.set1(int))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='792'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region   test_lock_region.LockVizJUC.defaultRegion4'
	 message-id='(117, ,,test_lock_region.LockVizJUC.defaultRegion4)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='1469'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L2_bad is this.privateField protects defaultRegion1 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L2_bad,this.privateField,defaultRegion1,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='43'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='1094'
	 hash='-176181199'
	 context='-199540914'
	 message='Couldn&apos;t resolve a binding for DoesntExist on ReturnsLock DoesntExist on DoesntExist'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='68'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='1795'
	 hash='-632933779'
	 context='902171303'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:Exists&quot;'
	 message-id='(214,&lt;this&gt;:Exists)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<ir-drop type='InfoDrop'
	 line='4'
	 file='/TestLockSanityChecks/src/test_lock_field/Other.java'
	 offset='96'
	 hash='1614283795'
	 context='1345679027'
	 message='Other.&lt;clinit&gt; has effect &quot;nothing&quot; from new java.lang.Object'
	 result-type='classInitEffects'/>

<ir-drop type='PromiseWarningDrop'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='196'
	 hash='-313213637'
	 context='-70732727'
	 message='Lock field &quot;this.defaultField&quot; is less visible than region &quot;publicRegion2&quot;; consider protecting a less visible region or adding a lock getter method'
	 message-id='(257,this.defaultField,publicRegion2)'
	 category='lock field(s) less visible than the region(s) being protected'/>

<ir-drop type='PromiseWarningDrop'
	 line='101'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='3980'
	 hash='-2134045287'
	 context='-307180210'
	 message='lock &quot;PrivateLock&quot; is less visible than requiring method/constructor on PrivateLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='38'
	 file='/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java'
	 offset='1342'
	 hash='103'
	 context='1774712647'
	 message='Region private qualified_receivers_as_locks.Outer.Inner.g'
	 message-id='(117,private,,qualified_receivers_as_locks.Outer.Inner.g)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='31'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java'
	 offset='974'
	 hash='476694499'
	 context='-1916529602'
	 message='Constructor cannot require a lock on the object being constructed on this:NonStaticLock'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='8'
	 file='/TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java'
	 offset='209'
	 hash='1938621917'
	 context='1663213597'
	 message='Inherited region &quot;R&quot; contains fields; it cannot be protected. on Lock L is this protects R'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='74'
	 file='/TestLockSanityChecks/src/test_requires_lock/C_Policy.java'
	 offset='1967'
	 hash='-1928801312'
	 context='1066334431'
	 message='Couldn&apos;t resolve a type for test.CC_Policy on RequiresLock test.CC_Policy.this:SL on test.CC_Policy'
	 category='Modeling problems'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='67'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='1664'
	 hash='-176181199'
	 context='-1620444384'
	 message='ReturnsLock test_returns_lock.C.this:IL on test_returns_lock.C.Inner1.Inner2.getLock_good()'
	 message-id='(111,test_returns_lock.C.this:IL,test_returns_lock.C.Inner1.Inner2.getLock_good())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='426'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region public test_lock_region.LockVizJUC.publicRegion1'
	 message-id='(117,public,,test_lock_region.LockVizJUC.publicRegion1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='1084'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region   test_lock_region.LockVizJUC.defaultRegion6'
	 message-id='(117, ,,test_lock_region.LockVizJUC.defaultRegion6)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='256'
	 hash='-313213637'
	 context='-70732727'
	 message='Region   test_lock_region.LockViz.defaultRegion1'
	 message-id='(117, ,,test_lock_region.LockViz.defaultRegion1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='55'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='1556'
	 hash='-971535346'
	 context='-457543819'
	 message='RequiresLock this:Exists on test_requires_lock.PolicyLock_LockNames.good_exists_explicit_this()'
	 message-id='(102,RequiresLock this:Exists,test_requires_lock.PolicyLock_LockNames.good_exists_explicit_this())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='InfoDrop'
	 line='45'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='2055'
	 hash='1614283795'
	 context='-1690377224'
	 message='StateLock_visibility.&lt;clinit&gt; has effect &quot;nothing&quot; from new java.lang.Object'
	 result-type='classInitEffects'/>

<ir-drop type='PromiseWarningDrop'
	 line='107'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='3221'
	 hash='535811443'
	 context='-469673139'
	 message='Cannot reference &quot;this&quot; from a static method on NonStaticLock'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='1875'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L4_bad is this.privateField protects publicRegion1 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L4_bad,this.privateField,publicRegion1,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='633'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R14'
	 message-id='(117, ,,test_lock_field.C.R14)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='117'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='2915'
	 hash='-176181199'
	 context='-2035013409'
	 message='Cannot reference &quot;this&quot; from a static method on NonStaticLock'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='7'
	 file='/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java'
	 offset='248'
	 hash='-2008298754'
	 context='-1312633511'
	 message='Region &quot;twoLocksOneRegion.sameClass.Bad.R&quot; is already protected by a lock on Lock M is this protects R'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='94'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='6051'
	 hash='-12564602'
	 context='1747880467'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:L101_good&quot;'
	 message-id='(214,&lt;this&gt;:L101_good)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='LockModel'
	 line='23'
	 file='/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java'
	 offset='823'
	 hash='297682518'
	 context='-1374688050'
	 message='RegionLock qualified_receivers_as_locks.Outer.Inner.L is qualified_receivers_as_locks.Outer.this protects f on Inner'
	 message-id='(100,qualified_receivers_as_locks.Outer.Inner.L,qualified_receivers_as_locks.Outer.this,f,Inner)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/Grandparent.java'
	 offset='226'
	 hash='-2066578384'
	 context='-1221517437'
	 message='Region   test_lock_region.Grandparent.RegionFromGPFilledInP'
	 message-id='(117, ,,test_lock_region.Grandparent.RegionFromGPFilledInP)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='31'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='838'
	 hash='31470878'
	 context='-2134502427'
	 message='RequiresLock test_requires_lock.PolicyLock_LockNames:StaticLock on test_requires_lock.PolicyLock_LockNames.good_typeQualified_staticLock()'
	 message-id='(102,RequiresLock test_requires_lock.PolicyLock_LockNames:StaticLock,test_requires_lock.PolicyLock_LockNames.good_typeQualified_staticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='27'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='689'
	 hash='-176181199'
	 context='1012845225'
	 message='ReturnsLock StaticLock on test_returns_lock.PLock.getLock_implicit_staticLock()'
	 message-id='(111,StaticLock,test_returns_lock.PLock.getLock_implicit_staticLock())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='3994'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L105_good is this.privateFieldMadeProtected protects defaultRegion6 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L105_good,this.privateFieldMadeProtected,defaultRegion6,LockViz)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='6'
	 file='/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java'
	 offset='1215'
	 hash='-1432771232'
	 context='218577586'
	 message='Inherited region &quot;RegionFromPFilledInP&quot; contains fields; it cannot be protected. on Lock L30_bad is this protects RegionFromPFilledInP'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='136'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='5284'
	 hash='173350287'
	 context='-1088197786'
	 message='lock &quot;DefaultStaticLock&quot; is less visible than requiring method/constructor on DefaultStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='314'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='12016'
	 hash='772590905'
	 context='-1098568662'
	 message='RequiresLock p:PrivateLock on test_requires_lock.StateLock_visibility.good_parameterTest(test_requires_lock.StateLock_visibility)'
	 message-id='(102,RequiresLock p:PrivateLock,test_requires_lock.StateLock_visibility.good_parameterTest(test_requires_lock.StateLock_visibility))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='54'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='1348'
	 hash='-176181199'
	 context='1326796823'
	 message='ReturnsLock p:IL on test_returns_lock.C.getInstanceLock(test_returns_lock.C)'
	 message-id='(111,p:IL,test_returns_lock.C.getInstanceLock(test_returns_lock.C))'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='74'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='2124'
	 hash='-2091592084'
	 context='-736497454'
	 message='Couldn&apos;t resolve a binding for p:DoesntExist on RequiresLock p:DoesntExist on p:DoesntExist'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='10'
	 file='/TestLockSanityChecks/src/test_unique_names/BadC3.java'
	 offset='185'
	 hash='1081938606'
	 context='1000493614'
	 message='Region public test_unique_names.BadC3.R3'
	 message-id='(117,public,,test_unique_names.BadC3.R3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='46'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='914'
	 hash='1338084075'
	 context='-572226861'
	 message='RequiresLock test_requires_lock.TestDuplicates:S on test_requires_lock.TestDuplicates.goodStatic2()'
	 message-id='(102,RequiresLock test_requires_lock.TestDuplicates:S,test_requires_lock.TestDuplicates.goodStatic2())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='8'
	 file='/TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java'
	 offset='230'
	 hash='-2001752771'
	 context='1663213596'
	 message='Inherited region &quot;Instance&quot; contains fields; it cannot be protected. on Lock L is this protects Instance'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java'
	 offset='760'
	 hash='-2106587626'
	 context='171286543'
	 message='PolicyLock test_unique_names.StateVsPolicyLocks.P is class on StateVsPolicyLocks'
	 message-id='(101,test_unique_names.StateVsPolicyLocks.P,class,StateVsPolicyLocks)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='318'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='11995'
	 hash='-515596623'
	 context='1998907553'
	 message='RequiresLock test_requires_lock.D:PrivateStaticPolicyLock on test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(int,int,int)'
	 message-id='(102,RequiresLock test_requires_lock.D:PrivateStaticPolicyLock,test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(int,int,int))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='42'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='1079'
	 hash='-176181199'
	 context='-1834719951'
	 message='ReturnsLock this:IL on test_returns_lock.C_Policy.getInstanceLock()'
	 message-id='(111,this:IL,test_returns_lock.C_Policy.getInstanceLock())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='377'
	 hash='2020694654'
	 context='1230606857'
	 message='Region   test_returns_lock.C.I'
	 message-id='(117, ,,test_returns_lock.C.I)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='303'
	 hash='-1310360451'
	 context='1262541058'
	 message='Region   static test_returns_lock.StateLock.StaticRegion'
	 message-id='(117, , static,test_returns_lock.StateLock.StaticRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='19'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java'
	 offset='559'
	 hash='11375838'
	 context='-915401101'
	 message='Constructor cannot require a lock on the object being constructed on NonStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='340'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='12883'
	 hash='-1171592198'
	 context='-1379161821'
	 message='RequiresLock test_requires_lock.Root:PrivateRootStaticLock on test_requires_lock.StateLock_visibility.good_ancestorClassTest1()'
	 message-id='(102,RequiresLock test_requires_lock.Root:PrivateRootStaticLock,test_requires_lock.StateLock_visibility.good_ancestorClassTest1())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='58'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='1283'
	 hash='-1867361851'
	 context='-559184639'
	 message='RequiresLock test_requires_lock.TestDuplicates:S, test_requires_lock.Other1:S on test_requires_lock.TestDuplicates.goodStatic11()'
	 message-id='(102,RequiresLock test_requires_lock.TestDuplicates:S, test_requires_lock.Other1:S,test_requires_lock.TestDuplicates.goodStatic11())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='InRegionPromiseDrop'
	 line='19'
	 file='/TestLockSanityChecks/src/test_lock_region/Parent.java'
	 offset='559'
	 hash='-712363927'
	 context='416178506'
	 message='InRegion(RegionFromGGPFilledInP) on pf1'
	 message-id='(107,RegionFromGGPFilledInP,pf1)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='117'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='6106'
	 hash='-176181199'
	 context='-931203805'
	 message='ReturnsLock L109_good on test_lock_region.LockViz.getPrivateMadePublic2()'
	 message-id='(111,L109_good,test_lock_region.LockViz.getPrivateMadePublic2())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='294'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='11302'
	 hash='-942347716'
	 context='-521172895'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='131'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='6819'
	 hash='-176181199'
	 context='1342820811'
	 message='ReturnsLock L111_good on test_lock_region.LockVizJUC.getPrivateMadePublic4()'
	 message-id='(111,L111_good,test_lock_region.LockVizJUC.getPrivateMadePublic4())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='266'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='10179'
	 hash='678382840'
	 context='-147918729'
	 message='lock &quot;DefaultStaticLock&quot; is less visible than requiring method/constructor on DefaultStaticLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='557'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R10'
	 message-id='(117, ,,test_lock_field.C.R10)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='48'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='1991'
	 hash='-1167497821'
	 context='-1438263767'
	 message='RequiresLock DefaultLock on test_requires_lock.PolicyLock_visibility.good_privateMethod_defaultLock()'
	 message-id='(102,RequiresLock DefaultLock,test_requires_lock.PolicyLock_visibility.good_privateMethod_defaultLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='5'
	 file='/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java'
	 offset='91'
	 hash='271628686'
	 context='-1979937546'
	 message='RegionLock twoLocksOneRegion.unrelatedClasses.Test2.L2 is this protects Instance on Test2'
	 message-id='(100,twoLocksOneRegion.unrelatedClasses.Test2.L2,this,Instance,Test2)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='294'
	 hash='-1365833300'
	 context='1630346095'
	 message='Lock field &quot;this.privateField&quot; is less visible than region &quot;defaultRegion1&quot;; consider protecting a less visible region or adding a lock getter method'
	 message-id='(257,this.privateField,defaultRegion1)'
	 category='lock field(s) less visible than the region(s) being protected'/>

<promise-drop type='LockModel'
	 line='17'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='1062'
	 hash='1584936397'
	 context='-236782475'
	 message='PolicyLock test_requires_lock.PolicyLock_visibility.PublicStaticLock is this.publicStaticField on PolicyLock_visibility'
	 message-id='(101,test_requires_lock.PolicyLock_visibility.PublicStaticLock,this.publicStaticField,PolicyLock_visibility)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='230'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='9290'
	 hash='735910999'
	 context='-165025776'
	 message='RequiresLock PublicStaticLock on test_requires_lock.StateLock_visibility.good_publicMethod_publicStaticLock()'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.StateLock_visibility.good_publicMethod_publicStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='InfoDrop'
	 line='90'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='5330'
	 hash='1614283795'
	 context='-1553766543'
	 message='C.&lt;clinit&gt; has effect &quot;nothing&quot; from new java.lang.Object'
	 result-type='classInitEffects'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='948'
	 hash='-313213637'
	 context='-70732727'
	 message='Region private test_lock_region.LockViz.privateRegion6'
	 message-id='(117,private,,test_lock_region.LockViz.privateRegion6)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='320'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='12227'
	 hash='1740959639'
	 context='-59442800'
	 message='RequiresLock test_requires_lock.D:PrivateStaticLock on test_requires_lock.StateLock_visibility.good_otherClassTest1()'
	 message-id='(102,RequiresLock test_requires_lock.D:PrivateStaticLock,test_requires_lock.StateLock_visibility.good_otherClassTest1())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='284'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='11033'
	 hash='167321866'
	 context='-1634575402'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.StateLock_visibility.StateLock_visibility(float,float)'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.StateLock_visibility.StateLock_visibility(float,float))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='676'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region protected test_lock_region.LockVizJUC.protectedRegion3'
	 message-id='(117,protected,,test_lock_region.LockVizJUC.protectedRegion3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='6'
	 file='/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java'
	 offset='274'
	 hash='-1432771232'
	 context='218577586'
	 message='RegionLock test_lock_region.ProtectInheritedRegion.L2_good is this protects EmptyRegionFromGrandparent on ProtectInheritedRegion'
	 message-id='(100,test_lock_region.ProtectInheritedRegion.L2_good,this,EmptyRegionFromGrandparent,ProtectInheritedRegion)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='3768'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L201_good is class protects publicStaticRegion on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L201_good,class,publicStaticRegion,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='6'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java'
	 offset='110'
	 hash='-203260907'
	 context='-861065079'
	 message='RegionLock test_requires_lock.TestImprovedMessages.L is this protects Instance on TestImprovedMessages'
	 message-id='(100,test_requires_lock.TestImprovedMessages.L,this,Instance,TestImprovedMessages)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='2834'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L11_good is this.protectedField protects protectedRegion3 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L11_good,this.protectedField,protectedRegion3,LockVizJUC)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='27'
	 file='/TestLockSanityChecks/src/test_lock_region/Parent.java'
	 offset='826'
	 hash='-710516885'
	 context='416178508'
	 message='Region private test_lock_region.Parent.pf3'
	 message-id='(117,private,,test_lock_region.Parent.pf3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='55'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='1171'
	 hash='684795110'
	 context='-559185600'
	 message='RequiresLock S, test_requires_lock.Other1:S on test_requires_lock.TestDuplicates.goodStatic10()'
	 message-id='(102,RequiresLock S, test_requires_lock.Other1:S,test_requires_lock.TestDuplicates.goodStatic10())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='572'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region public test_lock_region.LockVizJUC.publicRegion2'
	 message-id='(117,public,,test_lock_region.LockVizJUC.publicRegion2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='36'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='1000'
	 hash='1498200131'
	 context='-1909668982'
	 message='Return statement correctly returns lock &quot;StaticLock&quot;'
	 message-id='(214,StaticLock)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<promise-drop type='RegionModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java'
	 offset='647'
	 hash='-2106587626'
	 context='171286543'
	 message='Region   test_unique_names.StateVsPolicyLocks.B'
	 message-id='(117, ,,test_unique_names.StateVsPolicyLocks.B)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='139'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='3668'
	 hash='-176181199'
	 context='-11913558'
	 message='ReturnsLock StaticLock on test_returns_lock.StateLock.getLock_staticMethod_staticRegion1()'
	 message-id='(111,StaticLock,test_returns_lock.StateLock.getLock_staticMethod_staticRegion1())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='4571'
	 hash='-1365833300'
	 context='1630346095'
	 message='RegionLock test_lock_region.LockVizJUC.L106_good is this.privateFieldMadeProtected protects protectedRegion6 on LockVizJUC'
	 message-id='(100,test_lock_region.LockVizJUC.L106_good,this.privateFieldMadeProtected,protectedRegion6,LockVizJUC)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='3169'
	 hash='-1629113839'
	 context='1552614344'
	 message='Instance region &quot;R102&quot; should be protected by an instance field; consider including R102 in a static region on Lock L102 is test_lock_field.C.goodStatic protects R102'
	 category='Modeling problems'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='88'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='5501'
	 hash='-176181199'
	 context='-27346311'
	 message='ReturnsLock L101_good on test_lock_region.LockViz.getPrivateMadeDefault2()'
	 message-id='(111,L101_good,test_lock_region.LockViz.getPrivateMadeDefault2())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='37'
	 file='/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java'
	 offset='1323'
	 hash='102'
	 context='1774712646'
	 message='Region private qualified_receivers_as_locks.Outer.Inner.f'
	 message-id='(117,private,,qualified_receivers_as_locks.Outer.Inner.f)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='17'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='780'
	 hash='1584936397'
	 context='-236782475'
	 message='PolicyLock test_requires_lock.PolicyLock_visibility.ProtectedLock is this.protectedField on PolicyLock_visibility'
	 message-id='(101,test_requires_lock.PolicyLock_visibility.ProtectedLock,this.protectedField,PolicyLock_visibility)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='59'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='2319'
	 hash='-1290297930'
	 context='609043743'
	 message='lock &quot;PrivateLock&quot; is less visible than requiring method/constructor on PrivateLock'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='1278'
	 hash='-313213637'
	 context='-70732727'
	 message='Region public static test_lock_region.LockViz.publicStaticRegion'
	 message-id='(117,public, static,test_lock_region.LockViz.publicStaticRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='248'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='9885'
	 hash='1941493513'
	 context='1172720202'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.StateLock_visibility.StateLock_visibility(boolean,float)'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.StateLock_visibility.StateLock_visibility(boolean,float))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='61'
	 file='/TestLockSanityChecks/src/test_requires_lock/C_Policy.java'
	 offset='1564'
	 hash='1033364421'
	 context='251553842'
	 message='RequiresLock test_requires_lock.C_Policy.Inner1.this:InnerLock on test_requires_lock.C_Policy.Inner1.Inner2.getInnerLock_good()'
	 message-id='(102,RequiresLock test_requires_lock.C_Policy.Inner1.this:InnerLock,test_requires_lock.C_Policy.Inner1.Inner2.getInnerLock_good())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='0'
	 file='java.lang.Object'
	 offset='2147483647'
	 hash='1709211273'
	 context='1063877011'
	 message='RegionLock java.lang.Object.MUTEX is this protects WaitQueue on Object'
	 message-id='(100,java.lang.Object.MUTEX,this,WaitQueue,Object)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='1092'
	 hash='1567307990'
	 context='457502804'
	 message='Region public static test_requires_lock.StateLock_visibility.PublicStaticRegion'
	 message-id='(117,public, static,test_requires_lock.StateLock_visibility.PublicStaticRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='InfoDrop'
	 line='29'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='1239'
	 hash='1614283795'
	 context='-214775870'
	 message='PolicyLock_visibility.&lt;clinit&gt; has effect &quot;nothing&quot; from new java.lang.Object'
	 result-type='classInitEffects'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='65'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='2785'
	 hash='751713942'
	 context='2137020055'
	 message='RequiresLock ProtectedLock on test_requires_lock.StateLock_visibility.good_privateMethod_protectedLock()'
	 message-id='(102,RequiresLock ProtectedLock,test_requires_lock.StateLock_visibility.good_privateMethod_protectedLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='2457'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L10_good is this.protectedField protects defaultRegion3 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L10_good,this.protectedField,defaultRegion3,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='402'
	 hash='-313213637'
	 context='-70732727'
	 message='Region   test_lock_region.LockViz.defaultRegion2'
	 message-id='(117, ,,test_lock_region.LockViz.defaultRegion2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_returns_lock/C.java'
	 offset='394'
	 hash='2020694654'
	 context='1230606857'
	 message='Region   static test_returns_lock.C.S'
	 message-id='(117, , static,test_returns_lock.C.S)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='280'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='10858'
	 hash='1778157533'
	 context='1214031587'
	 message='lock &quot;DefaultStaticLock&quot; is less visible than requiring method/constructor on DefaultStaticLock'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='37'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='1037'
	 hash='-340099239'
	 context='-1434887862'
	 message='Cannot type-qualify an instance lock on test_requires_lock.PolicyLock_LockNames:Exists'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='870'
	 hash='-313213637'
	 context='-70732727'
	 message='Region protected test_lock_region.LockViz.protectedRegion5'
	 message-id='(117,protected,,test_lock_region.LockViz.protectedRegion5)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='1094'
	 hash='-313213637'
	 context='-70732727'
	 message='Region private test_lock_region.LockViz.privateRegion7'
	 message-id='(117,private,,test_lock_region.LockViz.privateRegion7)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='20'
	 file='/TestLockSanityChecks/src/test_requires_lock/C_Policy.java'
	 offset='478'
	 hash='-1928801312'
	 context='-1679443410'
	 message='Cannot qualify a static lock with a receiver or a method parameter on this:SL'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='14'
	 file='/TestLockSanityChecks/src/test_lock_region/C.java'
	 offset='1145'
	 hash='729177316'
	 context='1125120880'
	 message='RegionLock test_lock_region.C.L5 is this.staticFieldFromC protects S4 on C'
	 message-id='(100,test_lock_region.C.L5,this.staticFieldFromC,S4,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='43'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java'
	 offset='1248'
	 hash='1395052536'
	 context='-1090212213'
	 message='Couldn&apos;t resolve a binding for DoesntExist on RequiresLock DoesntExist on DoesntExist'
	 category='Modeling problems'/>

<result-drop type='ResultDrop'
	 line='23'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='554'
	 hash='-874699482'
	 context='797277684'
	 message='Lock &quot;&lt;this&gt;:L&quot; held when accessing this.v'
	 message-id='(203,&lt;this&gt;:L,this.v,null)'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='38'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='1053'
	 hash='31470878'
	 context='-638753754'
	 message='RequiresLock test_requires_lock.StateLock_LockNames:StaticLock on test_requires_lock.StateLock_LockNames.good_typeQualified_staticLock()'
	 message-id='(102,RequiresLock test_requires_lock.StateLock_LockNames:StaticLock,test_requires_lock.StateLock_LockNames.good_typeQualified_staticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='834'
	 hash='-1629113839'
	 context='1552614344'
	 message='Region   test_lock_field.C.R100'
	 message-id='(117, ,,test_lock_field.C.R100)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='1234'
	 hash='1567307990'
	 context='457502804'
	 message='RegionLock test_requires_lock.StateLock_visibility.DefaultLock is this.defaultField protects DefaultRegion on StateLock_visibility'
	 message-id='(100,test_requires_lock.StateLock_visibility.DefaultLock,this.defaultField,DefaultRegion,StateLock_visibility)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='79'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='3242'
	 hash='-824949861'
	 context='1323222229'
	 message='RequiresLock ProtectedLock on test_requires_lock.StateLock_visibility.good_defaultMethod_protectedLock()'
	 message-id='(102,RequiresLock ProtectedLock,test_requires_lock.StateLock_visibility.good_defaultMethod_protectedLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='35'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='888'
	 hash='-176181199'
	 context='934769698'
	 message='ReturnsLock test_returns_lock.PLock:StaticLock on test_returns_lock.PLock.getLock_typeQualified_staticLock()'
	 message-id='(111,test_returns_lock.PLock:StaticLock,test_returns_lock.PLock.getLock_typeQualified_staticLock())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='4463'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L109_good is this.privateFieldMadePublic protects defaultRegion7 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L109_good,this.privateFieldMadePublic,defaultRegion7,LockViz)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='193'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='5291'
	 hash='-176181199'
	 context='-64334199'
	 message='ReturnsLock test_returns_lock.PLock.this:NonStaticLock on test_returns_lock.PLock.Inner.getLock_innerClassMethod_qualifiedThis_nonStaticLock()'
	 message-id='(111,test_returns_lock.PLock.this:NonStaticLock,test_returns_lock.PLock.Inner.getLock_innerClassMethod_qualifiedThis_nonStaticLock())'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='244'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='9757'
	 hash='-1075859044'
	 context='-2063490473'
	 message='RequiresLock DefaultStaticLock on test_requires_lock.StateLock_visibility.StateLock_visibility(boolean,int)'
	 message-id='(102,RequiresLock DefaultStaticLock,test_requires_lock.StateLock_visibility.StateLock_visibility(boolean,int))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='244'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='9470'
	 hash='-156665296'
	 context='-807498773'
	 message='lock &quot;PrivateStaticLock&quot; is less visible than requiring method/constructor on PrivateStaticLock'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='355'
	 hash='-1958925414'
	 context='1934315592'
	 message='PolicyLock test_returns_lock.C_Policy.SL is class on C_Policy'
	 message-id='(101,test_returns_lock.C_Policy.SL,class,C_Policy)'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='52'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='1051'
	 hash='195648338'
	 context='-2019803052'
	 message='lock &quot;test_requires_lock.TestDuplicates:S&quot; is named more than once on test_requires_lock.TestDuplicates:S'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java'
	 offset='395'
	 hash='-1912240528'
	 context='1277366999'
	 message='PolicyLock test_requires_lock.PolicyLock_Constructor.NonStaticLock is this on PolicyLock_Constructor'
	 message-id='(101,test_requires_lock.PolicyLock_Constructor.NonStaticLock,this,PolicyLock_Constructor)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='InfoDrop'
	 line='7'
	 file='/TestLockSanityChecks/src/test_lock_region/D.java'
	 offset='177'
	 hash='1614283795'
	 context='-1326716181'
	 message='D.&lt;clinit&gt; has effect &quot;nothing&quot; from new java.lang.Object'
	 result-type='classInitEffects'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='185'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='7324'
	 hash='-401431411'
	 context='795823906'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.PolicyLock_visibility.good_defaultMethod_protectedStaticLock()'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.PolicyLock_visibility.good_defaultMethod_protectedStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='136'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='5417'
	 hash='263393534'
	 context='147562820'
	 message='RequiresLock DefaultStaticLock on test_requires_lock.StateLock_visibility.good_defaultStaticMethod_defaultStaticLock()'
	 message-id='(102,RequiresLock DefaultStaticLock,test_requires_lock.StateLock_visibility.good_defaultStaticMethod_defaultStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='2129'
	 hash='-1629113839'
	 context='1552614344'
	 message='RegionLock test_lock_field.C.L12 is this.fieldFromA protects R10 on C'
	 message-id='(100,test_lock_field.C.L12,this.fieldFromA,R10,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='32'
	 file='/TestLockSanityChecks/src/test_requires_lock/C_Policy.java'
	 offset='831'
	 hash='-463695518'
	 context='31907796'
	 message='RequiresLock SL on test_requires_lock.C_Policy.good1()'
	 message-id='(102,RequiresLock SL,test_requires_lock.C_Policy.good1())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='3473'
	 hash='-1629113839'
	 context='1552614344'
	 message='Couldn&apos;t resolve a binding for this.unknownField on PolicyLock P1 is this.unknownField on this.unknownField'
	 category='Modeling problems'/>

<promise-drop type='RegionModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='911'
	 hash='1567307990'
	 context='457502804'
	 message='Region public test_requires_lock.StateLock_visibility.PublicRegion'
	 message-id='(117,public,,test_requires_lock.StateLock_visibility.PublicRegion)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='288'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='10970'
	 hash='1037625183'
	 context='1275778969'
	 message='lock &quot;ProtectedStaticLock&quot; is less visible than requiring method/constructor on ProtectedStaticLock'
	 category='Modeling problems'/>

<ir-drop type='InfoDrop'
	 line='32'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='1431'
	 hash='1614283795'
	 context='2088405962'
	 message='PolicyLock_visibility.&lt;clinit&gt; has effect &quot;nothing&quot; from new java.lang.Object'
	 result-type='classInitEffects'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='718'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region public test_lock_region.LockVizJUC.publicRegion3'
	 message-id='(117,public,,test_lock_region.LockVizJUC.publicRegion3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='13'
	 file='/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java'
	 offset='530'
	 hash='-1365833300'
	 context='1630346095'
	 message='Region protected test_lock_region.LockVizJUC.protectedRegion2'
	 message-id='(117,protected,,test_lock_region.LockVizJUC.protectedRegion2)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='286'
	 hash='-313213637'
	 context='-70732727'
	 message='Region protected test_lock_region.LockViz.protectedRegion1'
	 message-id='(117,protected,,test_lock_region.LockViz.protectedRegion1)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='620'
	 hash='-313213637'
	 context='-70732727'
	 message='Region public test_lock_region.LockViz.publicRegion3'
	 message-id='(117,public,,test_lock_region.LockViz.publicRegion3)'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='122'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='4729'
	 hash='263393534'
	 context='-570796349'
	 message='RequiresLock DefaultStaticLock on test_requires_lock.PolicyLock_visibility.good_defaultStaticMethod_defaultStaticLock()'
	 message-id='(102,RequiresLock DefaultStaticLock,test_requires_lock.PolicyLock_visibility.good_defaultStaticMethod_defaultStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='7'
	 file='/TestLockSanityChecks/src/test_unique_names/GoodC3.java'
	 offset='253'
	 hash='-1105572404'
	 context='1106965972'
	 message='PolicyLock test_unique_names.GoodC3.P3 is class on GoodC3'
	 message-id='(101,test_unique_names.GoodC3.P3,class,GoodC3)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='136'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='3553'
	 hash='1683461060'
	 context='427945144'
	 message='Return statement correctly returns lock &quot;StaticLock&quot;'
	 message-id='(214,StaticLock)'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<result-drop type='ResultDrop'
	 line='77'
	 file='/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java'
	 offset='1903'
	 hash='-874699482'
	 context='2010446264'
	 message='Lock &quot;&lt;this&gt;:L&quot; not held when accessing this.v'
	 message-id='(205,&lt;this&gt;:L,this.v,null)'
	 category='unprotected field access(es); possible race condition detected'
	 result-type='205'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='346'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='13106'
	 hash='2131850357'
	 context='-1379160860'
	 message='RequiresLock test_requires_lock.Root:PrivateRootStaticLock on test_requires_lock.StateLock_visibility.good_ancestorClassTest2()'
	 message-id='(102,RequiresLock test_requires_lock.Root:PrivateRootStaticLock,test_requires_lock.StateLock_visibility.good_ancestorClassTest2())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='12'
	 file='/TestLockSanityChecks/src/test_requires_lock/C_Policy.java'
	 offset='361'
	 hash='-79465496'
	 context='1297130925'
	 message='PolicyLock test_requires_lock.C_Policy.SL is class on C_Policy'
	 message-id='(101,test_requires_lock.C_Policy.SL,class,C_Policy)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='170'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='6935'
	 hash='1975085513'
	 context='1828938242'
	 message='RequiresLock PublicStaticLock on test_requires_lock.StateLock_visibility.good_publicStaticMethod_publicStaticLock()'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.StateLock_visibility.good_publicStaticMethod_publicStaticLock())'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='270'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='10355'
	 hash='-154203291'
	 context='-503803798'
	 message='RequiresLock ProtectedStaticLock on test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(float,float)'
	 message-id='(102,RequiresLock ProtectedStaticLock,test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(float,float))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='17'
	 file='/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java'
	 offset='938'
	 hash='1584936397'
	 context='-236782475'
	 message='PolicyLock test_requires_lock.PolicyLock_visibility.DefaultStaticLock is this.defaultStaticField on PolicyLock_visibility'
	 message-id='(101,test_requires_lock.PolicyLock_visibility.DefaultStaticLock,this.defaultStaticField,PolicyLock_visibility)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='90'
	 file='/TestLockSanityChecks/src/test_returns_lock/StateLock.java'
	 offset='2283'
	 hash='-176181199'
	 context='955542163'
	 message='Couldn&apos;t resolve a binding for p:DoesntExist on ReturnsLock p:DoesntExist on p:DoesntExist'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='9'
	 file='/TestLockSanityChecks/src/test_lock_region/LockViz.java'
	 offset='2711'
	 hash='-313213637'
	 context='-70732727'
	 message='RegionLock test_lock_region.LockViz.L12_bad is this.protectedField protects publicRegion3 on LockViz'
	 message-id='(100,test_lock_region.LockViz.L12_bad,this.protectedField,publicRegion3,LockViz)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RequiresLockPromiseDrop'
	 line='270'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='10555'
	 hash='1574864920'
	 context='-1783547040'
	 message='RequiresLock PublicStaticLock on test_requires_lock.StateLock_visibility.StateLock_visibility(int,java.lang.Object)'
	 message-id='(102,RequiresLock PublicStaticLock,test_requires_lock.StateLock_visibility.StateLock_visibility(int,java.lang.Object))'
	 category='lock precondition(s)'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='167'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='6762'
	 hash='-604441642'
	 context='-701289067'
	 message='lock &quot;ProtectedStaticLock&quot; is less visible than requiring method/constructor on ProtectedStaticLock'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='166'
	 file='/TestLockSanityChecks/src/test_returns_lock/PLock.java'
	 offset='4456'
	 hash='-176181199'
	 context='996162308'
	 message='Couldn&apos;t resolve a type for no.such.pkg.NoSuchClass on ReturnsLock no.such.pkg.NoSuchClass:DoesntExist on no.such.pkg.NoSuchClass'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='21'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java'
	 offset='1163'
	 hash='1567307990'
	 context='457502804'
	 message='RegionLock test_requires_lock.StateLock_visibility.PrivateLock is this.privateField protects PrivateRegion on StateLock_visibility'
	 message-id='(100,test_requires_lock.StateLock_visibility.PrivateLock,this.privateField,PrivateRegion,StateLock_visibility)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='6'
	 file='/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java'
	 offset='407'
	 hash='-1432771232'
	 context='218577586'
	 message='RegionLock test_lock_region.ProtectInheritedRegion.L3_good is this protects EmptyRegionFromParent on ProtectInheritedRegion'
	 message-id='(100,test_lock_region.ProtectInheritedRegion.L3_good,this,EmptyRegionFromParent,ProtectInheritedRegion)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='PromiseWarningDrop'
	 line='105'
	 file='/TestLockSanityChecks/src/test_returns_lock/C_Policy.java'
	 offset='2807'
	 hash='-176181199'
	 context='-1779709483'
	 message='Cannot qualify a static lock with a receiver or a method parameter on test_returns_lock.C_Policy.this:SL'
	 category='Modeling problems'/>

<ir-drop type='PromiseWarningDrop'
	 line='144'
	 file='/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java'
	 offset='4681'
	 hash='-369775202'
	 context='-1600531390'
	 message='Couldn&apos;t resolve a type for no.such.pkg.NoSuchClass on RequiresLock no.such.pkg.NoSuchClass:DoesntExist on no.such.pkg.NoSuchClass'
	 category='Modeling problems'/>

<promise-drop type='LockModel'
	 line='15'
	 file='/TestLockSanityChecks/src/test_lock_field/C.java'
	 offset='3644'
	 hash='-1629113839'
	 context='1552614344'
	 message='PolicyLock test_lock_field.C.P3 is this.goodField on C'
	 message-id='(101,test_lock_field.C.P3,this.goodField,C)'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

</sea-summary>

