# $Header: /cvs/fluid/fluid/ops/edu/cmu/cs/fluid/java/operator/ConditionalOrExpression.op,v 1.7 2006/08/23 08:57:07 boyland Exp $
public operator ConditionalOrExpression extends BinopExpression 
    implements DripOperator
{
  syntax {
    op1:Expression "||" op2:Expression
  }
  
  @Override public Component createComponent(IRNode node) {
    Component comp = new Component(node,1,2,1);
    Subcomponent sub0 = 
        new Subcomponent(comp,tree.childLocation(node,op1Loc),1,2,1);
    Subcomponent sub1 = 
        new Subcomponent(comp,tree.childLocation(node,op2Loc),1,2,1);
    ControlNode trueMerge = new Merge();
    ControlNode abruptMerge = new Merge();
    ControlNode discardFalse = new ComponentFlow(comp,Boolean.FALSE);
    // connect through true edges
    ControlEdge.connect(sub0.getNormalExitPort(),trueMerge);
    ControlEdge.connect(sub1.getNormalExitPort(),trueMerge);
    ControlEdge.connect(trueMerge,comp.getNormalExitPort());
    // connect false execute throughs
    ControlEdge.connect(comp.getEntryPort(),sub0.getEntryPort());
    ControlEdge.connect(sub0.getNormalExitPort(),discardFalse);
    ControlEdge.connect(discardFalse,sub1.getEntryPort());
    ControlEdge.connect(sub1.getNormalExitPort(),comp.getNormalExitPort());
    // connect abrupt exits
    ControlEdge.connect(sub0.getAbruptExitPort(),abruptMerge);
    ControlEdge.connect(sub1.getAbruptExitPort(),abruptMerge);
    ControlEdge.connect(abruptMerge,comp.getAbruptExitPort());
    return comp;
  }
}
