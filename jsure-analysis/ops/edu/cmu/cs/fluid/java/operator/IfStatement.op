# $Header: /cvs/fluid/fluid/ops/edu/cmu/cs/fluid/java/operator/IfStatement.op,v 1.10 2006/08/23 08:57:07 boyland Exp $
public operator IfStatement extends Statement implements DripOperator {
  syntax {
    "if" "(" <paren> cond:Expression </paren> ")" <then>
      thenPart:Statement </then>
    elsePart:OptElseClause
  }
  @Override public Component createComponent(IRNode node) {
    Component comp = new Component(node,1,1,1);
    Subcomponent subcond = 
        new Subcomponent(comp,tree.childLocation(node,condLoc),1,2,1);
    Subcomponent subthen = 
        new Subcomponent(comp,tree.childLocation(node,thenPartLoc),1,1,1);
    Subcomponent subelse = 
        new Subcomponent(comp,tree.childLocation(node,elsePartLoc),1,1,1);
    ControlNode discardTrue = new ComponentFlow(comp,Boolean.TRUE);
    ControlNode discardFalse = new ComponentFlow(comp,Boolean.FALSE);
    ControlNode endMerge = new Merge();
    ControlNode abruptMerge1 = new Merge();
    ControlNode abruptMerge2 = new Merge();
    // connect up the condition
    ControlEdge.connect(comp.getEntryPort(),subcond.getEntryPort());
    ControlEdge.connect(subcond.getNormalExitPort(),discardTrue);
    ControlEdge.connect(discardTrue,subthen.getEntryPort());
    ControlEdge.connect(subcond.getNormalExitPort(),discardFalse);
    ControlEdge.connect(discardFalse,subelse.getEntryPort());
    // connect up final merge
    ControlEdge.connect(subthen.getNormalExitPort(),endMerge);
    ControlEdge.connect(subelse.getNormalExitPort(),endMerge);
    ControlEdge.connect(endMerge,comp.getNormalExitPort());
    // connect abrupt exits
    ControlEdge.connect(subcond.getAbruptExitPort(),abruptMerge1);
    ControlEdge.connect(subthen.getAbruptExitPort(),abruptMerge2);
    ControlEdge.connect(subelse.getAbruptExitPort(),abruptMerge2);
    ControlEdge.connect(abruptMerge2,abruptMerge1);
    ControlEdge.connect(abruptMerge1,comp.getAbruptExitPort());
    return comp;
  }
}