# $Header: /cvs/fluid/fluid/ops/edu/cmu/cs/fluid/java/operator/SwitchStatement.op,v 1.6 2006/08/23 08:57:07 boyland Exp $
public operator SwitchStatement extends Statement {
  syntax {
    "switch" "(" <paren> expr:Expression </paren> ")" block:SwitchBlock
  }
  @Override public Component createComponent(IRNode node) {
    Component comp = new Component(node,1,1,1);
    Subcomponent sube = 
      new Subcomponent(comp,tree.childLocation(node,exprLoc),1,1,1);
    Subcomponent subb =
      new Subcomponent(comp,tree.childLocation(node,blockLoc),1,1,1);

    ControlNode assignSwitch = new ComponentFlow(comp,this);
    ControlNode testBreak = new LabelTest(comp,new AnchoredBreakLabel(node));
    ControlNode endMerge = new Merge();
    ControlNode abruptMerge = new Merge();

    // connect normal execution:
    ControlEdge.connect(comp.getEntryPort(),sube.getEntryPort());
    ControlEdge.connect(sube.getNormalExitPort(),assignSwitch);
    ControlEdge.connect(assignSwitch,subb.getEntryPort());
    ControlEdge.connect(subb.getNormalExitPort(),endMerge);
    ControlEdge.connect(endMerge,comp.getNormalExitPort());

    // connect up abrupt termination (including testing for breaks)
    ControlEdge.connect(sube.getAbruptExitPort(),abruptMerge);
    ControlEdge.connect(subb.getAbruptExitPort(),testBreak);
    ControlEdge.connect(testBreak,endMerge);
    ControlEdge.connect(testBreak,abruptMerge);
    ControlEdge.connect(abruptMerge,comp.getAbruptExitPort());

    return comp;
  }
}
