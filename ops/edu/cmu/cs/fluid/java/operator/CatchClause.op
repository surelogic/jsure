# $Header: /cvs/fluid/fluid/ops/edu/cmu/cs/fluid/java/operator/CatchClause.op,v 1.5 2006/08/23 08:57:07 boyland Exp $
public operator CatchClause {
  syntax {
    "catch" "(" <paren> param:ParameterDeclaration </paren> ")" <catch>
	body:BlockStatement
    </catch>
  }
  /** Create the control-flow graph component for a catch clause.
   * We have two possible normal exits: <ul>
   * <li> the exception is caught (and the block completes normally)
   * <li> the exception is not caught</ul>
   * If the block completes abruptly, its exception <em>cannot</em>
   * be caught in another catch clause of the same try statement.
   */
  @Override public Component createComponent(IRNode node) {
    Component comp = new Component(node,1,2,1);
    Subcomponent sub = new Subcomponent(comp,tree.childLocation(node,bodyLoc),1,1,1);

    ControlLabel lab = new CaughtExceptionLabel(node);
    ControlNode test = new LabelTest(comp,lab);

    ControlEdge.connect(comp.getEntryPort(),test);
    ControlEdge.connect(test,sub.getEntryPort());
    ControlEdge.connect(sub.getNormalExitPort(),comp.getNormalExitPort());
    ControlEdge.connect(test,comp.getNormalExitPort());
    ControlEdge.connect(sub.getAbruptExitPort(),comp.getAbruptExitPort());
    return comp;
  }
}
