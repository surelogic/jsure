<?xml version="1.0" encoding="UTF-8"?>

<package name="java.util.concurrent" release="2">
    <class name="BlockingQueue">
        <ThreadSafe/>
        <method name="add" params="java.lang.Object">
            <Borrowed>this</Borrowed>
            <RegionEffects>reads any():Instance; writes Instance</RegionEffects>
            <Starts>nothing</Starts>
        </method>

        <method name="contains" params="java.lang.Object">
            <Borrowed>this</Borrowed>
            <RegionEffects>reads any():Instance</RegionEffects>
            <Starts>nothing</Starts>
            <parameter index="0">
                <Borrowed/>
            </parameter>
        </method>

        <method name="drainTo" params="java.util.Collection">
            <Borrowed>this</Borrowed>
            <RegionEffects>reads any():Instance; writes Instance, arg0:Instance</RegionEffects>
            <Starts>nothing</Starts>
            <parameter index="0">
                <Borrowed/>
            </parameter>
        </method>

        <method name="drainTo" params="java.util.Collection, int">
            <Borrowed>this</Borrowed>
            <RegionEffects>reads any():Instance; writes Instance, arg0:Instance</RegionEffects>
            <Starts>nothing</Starts>
            <parameter index="0">
                <Borrowed/>
            </parameter>
        </method>

        <method name="offer" params="java.lang.Object">
            <Borrowed>this</Borrowed>
            <RegionEffects>reads any():Instance; writes Instance</RegionEffects>
            <Starts>nothing</Starts>
        </method>

        <method name="offer" params="java.lang.Object, long, java.util.concurrent.TimeUnit">
            <Borrowed>this</Borrowed>
            <RegionEffects>reads any():Instance; writes Instance</RegionEffects>
            <Starts>nothing</Starts>
        </method>

        <method name="poll" params="long, java.util.concurrent.TimeUnit">
            <Borrowed>this</Borrowed>
            <RegionEffects>reads any():Instance; writes Instance</RegionEffects>
            <Starts>nothing</Starts>
        </method>

        <method name="put" params="java.lang.Object">
            <Borrowed>this</Borrowed>
            <RegionEffects>reads any():Instance; writes Instance</RegionEffects>
            <Starts>nothing</Starts>
        </method>

        <method name="remainingCapacity">
            <Borrowed>this</Borrowed>
            <RegionEffects>reads Instance</RegionEffects>
            <Starts>nothing</Starts>
        </method>

        <method name="remove" params="java.lang.Object">
            <Borrowed>this</Borrowed>
            <RegionEffects>reads any():Instance; writes Instance</RegionEffects>
            <Starts>nothing</Starts>
            <parameter index="0">
                <Borrowed/>
            </parameter>
        </method>

        <method name="take">
            <Borrowed>this</Borrowed>
            <RegionEffects>reads any():Instance; writes Instance</RegionEffects>
            <Starts>nothing</Starts>
        </method>
    </class>
</package>
