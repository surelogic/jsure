<?xml version="1.0" encoding="UTF-8"?>

<package name="java.util.concurrent.atomic" release="2">
    <class name="AtomicStampedReference">
        <ThreadSafe/>
        <constructor params="java.lang.Object, int">
            <RegionEffects>none</RegionEffects>
            <Starts>nothing</Starts>
            <Unique>return</Unique>
        </constructor>

        <method name="attemptStamp" params="java.lang.Object, int">
            <Borrowed>this</Borrowed>
            <RegionEffects>writes Instance</RegionEffects>
            <Starts>nothing</Starts>
        </method>

        <method name="compareAndSet" params="java.lang.Object, java.lang.Object, int, int">
            <Borrowed>this</Borrowed>
            <RegionEffects>writes Instance</RegionEffects>
            <Starts>nothing</Starts>
            <parameter index="0">
                <Borrowed/>
            </parameter>
        </method>

        <method name="get" params="int[]">
            <Borrowed>this</Borrowed>
            <RegionEffects>reads Instance; writes arg0:Instance</RegionEffects>
            <Starts>nothing</Starts>
            <parameter index="0">
                <Borrowed/>
            </parameter>
        </method>

        <method name="getReference">
            <Borrowed>this</Borrowed>
            <RegionEffects>reads Instance</RegionEffects>
            <Starts>nothing</Starts>
        </method>
    </class>
</package>
