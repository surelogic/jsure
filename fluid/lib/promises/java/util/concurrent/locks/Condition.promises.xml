<?xml version="1.0" encoding="UTF-8"?>

<package name="java.util.concurrent.locks" release="1">
    <class name="Condition">
        <ThreadSafe/>
        <method name="await">
            <Borrowed>this</Borrowed>
            <RegionEffects>writes Instance</RegionEffects>
            <Starts>nothing</Starts>
        </method>

        <method name="await" params="long, java.util.concurrent.TimeUnit">
            <Borrowed>this</Borrowed>
            <RegionEffects>writes Instance</RegionEffects>
            <Starts>nothing</Starts>
        </method>

        <method name="awaitNanos" params="long">
            <Borrowed>this</Borrowed>
            <RegionEffects>writes Instance</RegionEffects>
            <Starts>nothing</Starts>
        </method>

        <method name="awaitUninterruptibly">
            <Borrowed>this</Borrowed>
            <RegionEffects>writes Instance</RegionEffects>
            <Starts>nothing</Starts>
        </method>

        <method name="awaitUntil" params="java.util.Date">
            <Borrowed>this</Borrowed>
            <RegionEffects>reads arg0:Instance; writes Instance</RegionEffects>
            <Starts>nothing</Starts>
        </method>

        <method name="signal">
            <Borrowed>this</Borrowed>
            <RegionEffects>writes any():Instance</RegionEffects>
            <Starts>nothing</Starts>
        </method>

        <method name="signalAll">
            <Borrowed>this</Borrowed>
            <RegionEffects>writes any():Instance</RegionEffects>
            <Starts>nothing</Starts>
        </method>
    </class>
</package>
