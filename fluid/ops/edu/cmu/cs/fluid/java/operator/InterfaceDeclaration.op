# $Header: /cvs/fluid/fluid/ops/edu/cmu/cs/fluid/java/operator/InterfaceDeclaration.op,v 1.18 2006/08/23 08:57:07 boyland Exp $
public operator InterfaceDeclaration extends TypeDeclaration implements FlowUnit 
{
  syntax {
    annos:Annotations
    $mods:Modifiers(public,abstract) 
    "interface" $id:Info types:TypeFormals extensions:Extensions
    body:ClassBody // sloppy but easier than doing everything over again
  }
  properties {
    typeBinding=Declared
  }

  @Override
  public com.surelogic.common.ref.IDecl.Kind getKind() {
    return com.surelogic.common.ref.IDecl.Kind.INTERFACE;
  }  

  @Override public Component createComponent(IRNode node) {
    return ClassDeclaration.createTypeDeclComponent(node,bodyLoc,false);
  }

  public Source getSource(IRNode node, JavaComponentFactory f) {
    Component comp = f.getComponent(node);
    ISubcomponent sub = comp.getSubcomponent(tree.childLocation(node,bodyLoc));
    ControlEdge e = ((SubcomponentEntryPort)sub.getEntryPort()).getInput();
    return (Source)e.getSource();
  }
  public Sink getNormalSink(IRNode node, JavaComponentFactory f) {
    Component comp = f.getComponent(node);
    ISubcomponent sub = comp.getSubcomponent(tree.childLocation(node,bodyLoc));
    ControlEdge e = ((SubcomponentNormalExitPort)sub.getNormalExitPort()).getOutput();
    return (Sink)e.getSink();
  }
  public Sink getAbruptSink(IRNode node, JavaComponentFactory f) {
    Component comp = f.getComponent(node);
    ISubcomponent sub = comp.getSubcomponent(tree.childLocation(node,bodyLoc));
    ControlEdge e = ((SubcomponentAbruptExitPort)sub.getAbruptExitPort()).getOutput();
    return (Sink)e.getSink();
  }
  public Operator getResultOp() {
    return InterfaceDeclaration.prototype;
  }
}
