#Color second pass messages
ColorSecondPass_inferredColor=Inferred @colorConstraint {0} for {1}
ColorSecondPass_inheritedColor=Inherited @colorConstraint {0} for {1}
ColorSecondPass_inheritedTransparent=Inherited @transparent for {0}
ColorSecondPass_colorContextDrop={0} is accessed from color context {1}

#Lock visitor messages

## Drop-sea category messages
LockAnalysis_dsc_AggregationNeeded=protected reference(s) to a possibly shared unprotected object; possible race condition detected
LockAnalysis_dsc_FieldAccessNotAssured=unprotected field access(es); possible race condition detected
LockAnalysis_dsc_FieldAccessAssured=protected field access(es)
LockAnalysis_dsc_PreconditionsAssured=lock precondition(s) satisfied
LockAnalysis_dsc_PreconditionsNotAssured=lock precondition(s) not satisfied; possible race conditions enabled
LockAnalysis_dsc_IndirectFieldAccessNotAssured=unprotected indirect field access(es); possible race condition detected
LockAnalysis_dsc_IndirectFieldAccessAssured=protected indirect field access(es)
LockAnalysis_dsc_ReturnAssured=return statement(s) returning the correct lock
LockAnalysis_dsc_ReturnNotAssured=return statement(s) possibly returning the wrong lock
LockAnalysis_dsc_UnidentifiableLockWarning=unidentifiable lock(s); what is the name of the lock? what state is being protected?
LockAnalysis_dsc_SynchronizationUnusedWarning=synchronized block(s) not protecting any state; what state is being protected?
LockAnalysis_dsc_NonfinalExpressionWarning=non-final lock expression(s); analysis cannot determine which lock is being acquired
LockAnalysis_dsc_RedundantSynchronized=redundant lock acquisition(s)
LockAnalysis_dsc_MixedParadigm=mixed java.util.concurrent/intrinsic locking usage(s)
LockAnalysis_dsc_NotALockMethod=calls to methods masquerading as java.util.concurrent.Lock methods
LockAnalysis_dsc_MatchingCalls=lock()\u2013unlock() matches

## Drop-sea Supporting information messages 
LockAnalysis_ds_OnBehalfOfConstructor=Analyzed on behalf of constructor \"{0}\"
LockAnalysis_ds_FieldDeclaration=Field Declaration: {0}
LockAnalysis_ds_HeldLock=Intrinsic lock \"{0}\" is held
LockAnalysis_ds_HeldJUCLock=java.util.concurrent lock \"{0}\" is held
