<?xml version='1.0' encoding='UTF-8' standalone='yes'?>
<sea-summary time='Apr 14, 2010 3:47:58 PM'
	 project='TestFinalExpressions'>

<ir-drop type='WarningDrop'
	 line='244'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='8002'
	 hash='21334826'
	 context='43926850'
	 message='Lock expression &quot;p.protectedField&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<ir-drop type='WarningDrop'
	 line='115'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='3446'
	 hash='-937469124'
	 context='-962513351'
	 message='Lock expression &quot;this.protectedField&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='WarningDrop'
	 line='35'
	 file='/TestFinalExpressions/src/test_final_exprs/TestArrayRefs.java'
	 offset='937'
	 hash='-984373010'
	 context='1596116687'
	 message='Lock expression &quot;array [ idx ]&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='WarningDrop'
	 line='97'
	 file='/TestFinalExpressions/src/test_final_exprs/TestArrayRefs.java'
	 offset='2487'
	 hash='-984373010'
	 context='1709298092'
	 message='Lock expression &quot;array [ idx ]&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<result-drop type='ResultDrop'
	 line='21'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='567'
	 hash='1813153994'
	 context='2054567885'
	 message='Acting as if lock &quot;&lt;this&gt;:InstanceLock&quot; were held when accessing protectedField = new java.lang.Object (occurs within a thread-confined constructor)'
	 category='protected field access(es)'
	 used-red-dot='true'
	 proved-consistent='true'
	 consistent='true'
	 result-type='245'/>

<ir-drop type='WarningDrop'
	 line='59'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='1927'
	 hash='66169652'
	 context='2095813400'
	 message='Lock expression &quot;test_final_exprs.TestStaticFieldRefs.staticProtectedField&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<result-drop type='ResultDrop'
	 line='71'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='2406'
	 hash='66169652'
	 context='-1865045039'
	 message='Lock &quot;StaticLock&quot; held when accessing test_final_exprs.TestStaticFieldRefs.staticProtectedField'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<ir-drop type='WarningDrop'
	 line='41'
	 file='/TestFinalExpressions/src/test_final_exprs/TestLocalVars.java'
	 offset='1045'
	 hash='111'
	 context='816645494'
	 message='Lock expression &quot;o&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='WarningDrop'
	 line='58'
	 file='/TestFinalExpressions/src/test_final_exprs/TestArrayRefs.java'
	 offset='1540'
	 hash='-984373010'
	 context='1433787549'
	 message='Lock expression &quot;array [ idx ]&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<promise-drop type='RegionEffectsPromiseDrop'
	 line='317'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='10378'
	 hash='1872544423'
	 context='-1122021267'
	 message='Reads this:Instance  on  test_final_exprs.TestInstanceFieldRefs.readInstance()'
	 category='Effects'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='281'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='9275'
	 hash='-937469124'
	 context='-1091131481'
	 message='Lock &quot;&lt;this&gt;:InstanceLock&quot; held when accessing this.protectedField'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<ir-drop type='WarningDrop'
	 line='270'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='8892'
	 hash='-937469124'
	 context='2128301400'
	 message='Lock expression &quot;this.protectedField&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<promise-drop type='RegionEffectsPromiseDrop'
	 line='322'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='10471'
	 hash='-237774724'
	 context='-1808082988'
	 message='Writes this:Instance  on  test_final_exprs.TestInstanceFieldRefs.writeInstance()'
	 category='Effects'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='WarningDrop'
	 line='73'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='2117'
	 hash='-705145323'
	 context='-1234925699'
	 message='Lock expression &quot;this.unprotectedField&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<ir-drop type='WarningDrop'
	 line='29'
	 file='/TestFinalExpressions/src/test_final_exprs/TestLocalVars.java'
	 offset='714'
	 hash='112'
	 context='504961926'
	 message='Lock expression &quot;p&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<promise-drop type='InRegionPromiseDrop'
	 line='20'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='532'
	 hash='1813153994'
	 context='2054567885'
	 message='InRegion(InstanceRegion)  on  protectedField'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='244'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='8002'
	 hash='21334826'
	 context='43926850'
	 message='Lock &quot;&lt;p&gt;:InstanceLock&quot; not held when accessing p.protectedField'
	 category='unprotected field access(es); possible race condition detected'
	 result-type='205'/>

<ir-drop type='WarningDrop'
	 line='50'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='1608'
	 hash='66169652'
	 context='-861352173'
	 message='Lock expression &quot;test_final_exprs.TestStaticFieldRefs.staticProtectedField&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='WarningDrop'
	 line='102'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='3030'
	 hash='1582449283'
	 context='2084761378'
	 message='Lock expression &quot;p.unprotectedField&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<result-drop type='ResultDrop'
	 line='192'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='6216'
	 hash='21334826'
	 context='469831893'
	 message='Lock &quot;&lt;p&gt;:InstanceLock&quot; held when accessing p.protectedField'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<result-drop type='ResultDrop'
	 line='50'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='1608'
	 hash='66169652'
	 context='-861352173'
	 message='Lock &quot;StaticLock&quot; held when accessing test_final_exprs.TestStaticFieldRefs.staticProtectedField'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<ir-drop type='WarningDrop'
	 line='167'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='5306'
	 hash='-937469124'
	 context='1479254834'
	 message='Lock expression &quot;this.protectedField&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='WarningDrop'
	 line='11'
	 file='/TestFinalExpressions/src/test_final_exprs/TestReceiver.java'
	 offset='304'
	 hash='3559070'
	 context='1549910205'
	 message='Lock expression &quot;this&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<promise-drop type='InRegionPromiseDrop'
	 line='18'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='488'
	 hash='603084540'
	 context='66169652'
	 message='InRegion(StaticRegion)  on  staticProtectedField'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='233'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='7589'
	 hash='-937469124'
	 context='-1497566866'
	 message='Lock &quot;&lt;this&gt;:InstanceLock&quot; not held when accessing this.protectedField'
	 category='unprotected field access(es); possible race condition detected'
	 result-type='205'/>

<ir-drop type='ProposedPromiseDrop'
	 line='109'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='3110'
	 hash='-971176202'
	 context='586716825'
	 message='ProposedPromiseDrop (EMPTY)'/>

<result-drop type='ResultDrop'
	 line='127'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='3860'
	 hash='-937469124'
	 context='1833908424'
	 message='Lock &quot;&lt;this&gt;:InstanceLock&quot; not held when accessing this.protectedField'
	 category='unprotected field access(es); possible race condition detected'
	 result-type='205'/>

<promise-drop type='BorrowedPromiseDrop'
	 line='25'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='634'
	 hash='3559070'
	 context='1244815923'
	 message='Borrowed(this)  on  test_final_exprs.TestInstanceFieldRefs.TestInstanceFieldRefs()'
	 category='Uniqueness'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='21'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='567'
	 hash='1813153994'
	 context='2054567885'
	 message='Region private test_final_exprs.TestInstanceFieldRefs.protectedField'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='222'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='7216'
	 hash='-937469124'
	 context='978655'
	 message='Lock &quot;&lt;this&gt;:InstanceLock&quot; not held when accessing this.protectedField'
	 category='unprotected field access(es); possible race condition detected'
	 result-type='205'/>

<promise-drop type='SingleThreadedPromiseDrop'
	 line='24'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='606'
	 hash='-698886574'
	 context='1244815923'
	 message='SingleThreaded  on  test_final_exprs.TestInstanceFieldRefs.TestInstanceFieldRefs()'
	 category='Concurrency'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<ir-drop type='WarningDrop'
	 line='69'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='2331'
	 hash='66169652'
	 context='-1865045039'
	 message='Lock expression &quot;test_final_exprs.TestStaticFieldRefs.staticProtectedField&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<ir-drop type='WarningDrop'
	 line='308'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='10267'
	 hash='21334826'
	 context='-1225883931'
	 message='Lock expression &quot;p.protectedField&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<ir-drop type='WarningDrop'
	 line='208'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='6808'
	 hash='21334826'
	 context='1901297355'
	 message='Lock expression &quot;p.protectedField&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<result-drop type='ResultDrop'
	 line='61'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='1999'
	 hash='66169652'
	 context='2095813400'
	 message='Lock &quot;StaticLock&quot; not held when accessing test_final_exprs.TestStaticFieldRefs.staticProtectedField'
	 category='unprotected field access(es); possible race condition detected'
	 result-type='205'/>

<ir-drop type='ProposedPromiseDrop'
	 line='239'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='7673'
	 hash='1554648069'
	 context='-937048670'
	 message='ProposedPromiseDrop (EMPTY)'/>

<ir-drop type='ProposedPromiseDrop'
	 line='145'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='4391'
	 hash='380111319'
	 context='2067920562'
	 message='ProposedPromiseDrop (EMPTY)'/>

<ir-drop type='WarningDrop'
	 line='91'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='2651'
	 hash='1582449283'
	 context='-2026206624'
	 message='Lock expression &quot;p.unprotectedField&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<result-drop type='ResultDrop'
	 line='115'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='3446'
	 hash='-937469124'
	 context='-962513351'
	 message='Lock &quot;&lt;this&gt;:InstanceLock&quot; not held when accessing this.protectedField'
	 category='unprotected field access(es); possible race condition detected'
	 result-type='205'/>

<ir-drop type='ProposedPromiseDrop'
	 line='217'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='6922'
	 hash='-1756196836'
	 context='1550208831'
	 message='ProposedPromiseDrop (EMPTY)'/>

<promise-drop type='RegionModel'
	 line='12'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='232'
	 hash='-586823788'
	 context='-896407948'
	 message='Region   static test_final_exprs.TestStaticFieldRefs.StaticRegion'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='WarningDrop'
	 line='86'
	 file='/TestFinalExpressions/src/test_final_exprs/TestMethodCall.java'
	 offset='2214'
	 hash='795131359'
	 context='1360168059'
	 message='Lock expression &quot;t.instanceMethod_returnsLock&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<ir-drop type='WarningDrop'
	 line='233'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='7589'
	 hash='-937469124'
	 context='-1497566866'
	 message='Lock expression &quot;this.protectedField&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<ir-drop type='WarningDrop'
	 line='153'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='4858'
	 hash='21334826'
	 context='1977316114'
	 message='Lock expression &quot;p.protectedField&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='ProposedPromiseDrop'
	 line='56'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='1695'
	 hash='-1353031222'
	 context='-567246550'
	 message='ProposedPromiseDrop (EMPTY)'/>

<ir-drop type='WarningDrop'
	 line='110'
	 file='/TestFinalExpressions/src/test_final_exprs/TestMethodCall.java'
	 offset='2958'
	 hash='-2139410572'
	 context='-444525089'
	 message='Locks [&lt;t&gt;:LL] not needed by body of synchronized block'
	 category='synchronized block(s) not protecting any state; what state is being protected?'
	 result-type='218'/>

<result-drop type='ResultDrop'
	 line='270'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='8892'
	 hash='-937469124'
	 context='2128301400'
	 message='Lock &quot;&lt;this&gt;:InstanceLock&quot; held when accessing this.protectedField'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<ir-drop type='WarningDrop'
	 line='35'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='949'
	 hash='315787892'
	 context='-1332057306'
	 message='Lock expression &quot;this.finalField&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='WarningDrop'
	 line='139'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='4314'
	 hash='21334826'
	 context='728541852'
	 message='Lock expression &quot;p.protectedField&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='WarningDrop'
	 line='82'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='2364'
	 hash='-705145323'
	 context='1854843020'
	 message='Lock expression &quot;this.unprotectedField&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<ir-drop type='WarningDrop'
	 line='31'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='891'
	 hash='1719044109'
	 context='-2060517920'
	 message='Lock expression &quot;test_final_exprs.TestStaticFieldRefs.staticUnprotectedField&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<ir-drop type='ProposedPromiseDrop'
	 line='121'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='3524'
	 hash='-977967419'
	 context='-911828696'
	 message='ProposedPromiseDrop (EMPTY)'/>

<result-drop type='ResultDrop'
	 line='257'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='8505'
	 hash='21334826'
	 context='-1061759828'
	 message='Lock &quot;&lt;p&gt;:InstanceLock&quot; not held when accessing p.protectedField'
	 category='unprotected field access(es); possible race condition detected'
	 result-type='205'/>

<result-drop type='ResultDrop'
	 line='153'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='4858'
	 hash='21334826'
	 context='1977316114'
	 message='Lock &quot;&lt;p&gt;:InstanceLock&quot; not held when accessing p.protectedField'
	 category='unprotected field access(es); possible race condition detected'
	 result-type='205'/>

<ir-drop type='WarningDrop'
	 line='257'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='8505'
	 hash='21334826'
	 context='-1061759828'
	 message='Lock expression &quot;p.protectedField&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<result-drop type='ResultDrop'
	 line='69'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='2331'
	 hash='66169652'
	 context='-1865045039'
	 message='Lock &quot;StaticLock&quot; held when accessing test_final_exprs.TestStaticFieldRefs.staticProtectedField'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<ir-drop type='WarningDrop'
	 line='82'
	 file='/TestFinalExpressions/src/test_final_exprs/TestArrayRefs.java'
	 offset='2147'
	 hash='-984373010'
	 context='1709297131'
	 message='Lock expression &quot;array [ idx ]&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<ir-drop type='WarningDrop'
	 line='293'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='9718'
	 hash='21334826'
	 context='-469426949'
	 message='Lock expression &quot;p.protectedField&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<ir-drop type='WarningDrop'
	 line='24'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='704'
	 hash='-1568958868'
	 context='-932177375'
	 message='Lock expression &quot;test_final_exprs.TestStaticFieldRefs.staticFinalField&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<result-drop type='ResultDrop'
	 line='208'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='6808'
	 hash='21334826'
	 context='1901297355'
	 message='Lock &quot;&lt;p&gt;:InstanceLock&quot; held when accessing p.protectedField'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<result-drop type='ResultDrop'
	 line='293'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='9718'
	 hash='21334826'
	 context='-469426949'
	 message='Lock &quot;&lt;p&gt;:InstanceLock&quot; held when accessing p.protectedField'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<result-drop type='ResultDrop'
	 line='59'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='1927'
	 hash='66169652'
	 context='2095813400'
	 message='Lock &quot;StaticLock&quot; not held when accessing test_final_exprs.TestStaticFieldRefs.staticProtectedField'
	 category='unprotected field access(es); possible race condition detected'
	 result-type='205'/>

<result-drop type='ResultDrop'
	 line='19'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='528'
	 hash='603084540'
	 context='66169652'
	 message='Acting as if lock &quot;StaticLock&quot; were held when accessing staticProtectedField = new java.lang.Object (occurs within a class initializer)'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='244'/>

<ir-drop type='ProposedPromiseDrop'
	 line='133'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='3943'
	 hash='396207839'
	 context='-252433668'
	 message='ProposedPromiseDrop (EMPTY)'/>

<ir-drop type='WarningDrop'
	 line='40'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='1214'
	 hash='66169652'
	 context='-368329174'
	 message='Lock expression &quot;test_final_exprs.TestStaticFieldRefs.staticProtectedField&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='WarningDrop'
	 line='99'
	 file='/TestFinalExpressions/src/test_final_exprs/TestMethodCall.java'
	 offset='2590'
	 hash='1981281566'
	 context='-1298442372'
	 message='Lock expression &quot;t.instanceMethod_noReturnsLock&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<ir-drop type='WarningDrop'
	 line='112'
	 file='/TestFinalExpressions/src/test_final_exprs/TestArrayRefs.java'
	 offset='2813'
	 hash='-984373010'
	 context='1709299053'
	 message='Lock expression &quot;array [ idx ]&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='45'
	 file='/TestFinalExpressions/src/test_final_exprs/TestMethodCall.java'
	 offset='1006'
	 hash='-176181199'
	 context='1649179517'
	 message='ReturnsLock LL  on  test_final_exprs.TestMethodCall.instanceMethod_returnsLock()'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='308'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='10267'
	 hash='21334826'
	 context='-1225883931'
	 message='Lock &quot;&lt;p&gt;:InstanceLock&quot; held when accessing p.protectedField'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<ir-drop type='WarningDrop'
	 line='281'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='9275'
	 hash='-937469124'
	 context='-1091131481'
	 message='Lock expression &quot;this.protectedField&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<ir-drop type='WarningDrop'
	 line='62'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='1849'
	 hash='-1367744158'
	 context='-1932651303'
	 message='Lock expression &quot;p.finalField&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<promise-drop type='LockModel'
	 line='15'
	 file='/TestFinalExpressions/src/test_final_exprs/TestMethodCall.java'
	 offset='380'
	 hash='-1650237349'
	 context='370204407'
	 message='PolicyLock test_final_exprs.TestMethodCall.LL is this  on  TestMethodCall'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='13'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='267'
	 hash='-586823788'
	 context='-896407948'
	 message='RegionLock test_final_exprs.TestStaticFieldRefs.StaticLock is class protects StaticRegion  on  TestStaticFieldRefs'
	 category='Concurrency'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='14'
	 file='/TestFinalExpressions/src/test_final_exprs/TestMethodCall.java'
	 offset='350'
	 hash='-1650237349'
	 context='370204407'
	 message='PolicyLock test_final_exprs.TestMethodCall.PL is class  on  TestMethodCall'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='32'
	 file='/TestFinalExpressions/src/test_final_exprs/TestMethodCall.java'
	 offset='745'
	 hash='433692142'
	 context='498092182'
	 message='Return statement correctly returns lock &quot;PL&quot;'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<result-drop type='ResultDrop'
	 line='167'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='5306'
	 hash='-937469124'
	 context='1479254834'
	 message='Lock &quot;&lt;this&gt;:InstanceLock&quot; held when accessing this.protectedField'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<promise-drop type='ReturnsLockPromiseDrop'
	 line='29'
	 file='/TestFinalExpressions/src/test_final_exprs/TestMethodCall.java'
	 offset='656'
	 hash='-176181199'
	 context='498092182'
	 message='ReturnsLock PL  on  test_final_exprs.TestMethodCall.staticMethod_returnsLock()'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='RegionModel'
	 line='19'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='528'
	 hash='603084540'
	 context='66169652'
	 message='Region private static test_final_exprs.TestStaticFieldRefs.staticProtectedField'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='ProposedPromiseDrop'
	 line='250'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='8080'
	 hash='-1284838287'
	 context='-971155380'
	 message='ProposedPromiseDrop (EMPTY)'/>

<ir-drop type='WarningDrop'
	 line='21'
	 file='/TestFinalExpressions/src/test_final_exprs/TestReceiver.java'
	 offset='448'
	 hash='1156456852'
	 context='-145245686'
	 message='Lock expression &quot;test_final_exprs.TestReceiver . C.this&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='WarningDrop'
	 line='43'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='1189'
	 hash='315787892'
	 context='1757711413'
	 message='Lock expression &quot;this.finalField&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='ProposedPromiseDrop'
	 line='36'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='948'
	 hash='1361149774'
	 context='1346880984'
	 message='ProposedPromiseDrop (EMPTY)'/>

<result-drop type='ResultDrop'
	 line='179'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='5730'
	 hash='-937469124'
	 context='-1740178047'
	 message='Lock &quot;&lt;this&gt;:InstanceLock&quot; held when accessing this.protectedField'
	 category='protected field access(es)'
	 proved-consistent='true'
	 consistent='true'
	 result-type='203'/>

<ir-drop type='ProposedPromiseDrop'
	 line='56'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='1695'
	 hash='-1353031222'
	 context='-567246550'
	 message='ProposedPromiseDrop (EMPTY)'/>

<ir-drop type='WarningDrop'
	 line='68'
	 file='/TestFinalExpressions/src/test_final_exprs/TestArrayRefs.java'
	 offset='1836'
	 hash='-984373010'
	 context='-1917208382'
	 message='Lock expression &quot;array [ idx ]&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='WarningDrop'
	 line='179'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='5730'
	 hash='-937469124'
	 context='-1740178047'
	 message='Lock expression &quot;this.protectedField&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<result-drop type='ResultDrop'
	 line='139'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='4314'
	 hash='21334826'
	 context='728541852'
	 message='Lock &quot;&lt;p&gt;:InstanceLock&quot; not held when accessing p.protectedField'
	 category='unprotected field access(es); possible race condition detected'
	 result-type='205'/>

<promise-drop type='RegionModel'
	 line='0'
	 file='java.lang.[]'
	 offset='-1'
	 hash='-1305411288'
	 context='156839830'
	 message='Region public length'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='WarningDrop'
	 line='55'
	 file='/TestFinalExpressions/src/test_final_exprs/TestMethodCall.java'
	 offset='1258'
	 hash='1273263757'
	 context='673513770'
	 message='Lock expression &quot;this.staticMethod_noReturnsLock&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<ir-drop type='WarningDrop'
	 line='19'
	 file='/TestFinalExpressions/src/test_final_exprs/TestLocalVars.java'
	 offset='478'
	 hash='111'
	 context='384742572'
	 message='Lock expression &quot;o&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='WarningDrop'
	 line='22'
	 file='/TestFinalExpressions/src/test_final_exprs/TestArrayRefs.java'
	 offset='632'
	 hash='-760856927'
	 context='-1493395583'
	 message='Lock expression &quot;array [ 0 ]&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='WarningDrop'
	 line='63'
	 file='/TestFinalExpressions/src/test_final_exprs/TestLocalVars.java'
	 offset='1569'
	 hash='111'
	 context='-1285143760'
	 message='Lock expression &quot;o&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<ir-drop type='ProposedPromiseDrop'
	 line='228'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='7295'
	 hash='-1762988053'
	 context='51663310'
	 message='ProposedPromiseDrop (EMPTY)'/>

<ir-drop type='WarningDrop'
	 line='192'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='6216'
	 hash='21334826'
	 context='469831893'
	 message='Lock expression &quot;p.protectedField&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<promise-drop type='RegionEffectsPromiseDrop'
	 line='78'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='2487'
	 hash='-998514403'
	 context='-2108348336'
	 message='Reads test_final_exprs.TestStaticFieldRefs:staticProtectedField  on  test_final_exprs.TestStaticFieldRefs.readField_staticProtectedField()'
	 category='Effects'
	 used-red-dot='true'
	 proved-consistent='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='15'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='332'
	 hash='366029066'
	 context='1906180653'
	 message='RegionLock test_final_exprs.TestInstanceFieldRefs.InstanceLock is this protects InstanceRegion  on  TestInstanceFieldRefs'
	 category='Concurrency'
	 used-red-dot='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<promise-drop type='LockModel'
	 line='0'
	 file='java.lang.Object'
	 offset='2147483647'
	 hash='-796031666'
	 context='1063877011'
	 message='RegionLock java.lang.Object.MUTEX is this protects WaitQueue  on  Object'
	 category='Concurrency'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='WarningDrop'
	 line='63'
	 file='/TestFinalExpressions/src/test_final_exprs/TestMethodCall.java'
	 offset='1487'
	 hash='1067182763'
	 context='472174964'
	 message='Locks [PL] not needed by body of synchronized block'
	 category='synchronized block(s) not protecting any state; what state is being protected?'
	 result-type='218'/>

<ir-drop type='WarningDrop'
	 line='43'
	 file='/TestFinalExpressions/src/test_final_exprs/TestArrayRefs.java'
	 offset='1201'
	 hash='-984373010'
	 context='303110961'
	 message='Lock expression &quot;array [ idx ]&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<result-drop type='ResultDrop'
	 line='48'
	 file='/TestFinalExpressions/src/test_final_exprs/TestMethodCall.java'
	 offset='1097'
	 hash='-632933779'
	 context='1649179517'
	 message='Return statement correctly returns lock &quot;&lt;this&gt;:LL&quot;'
	 category='return statement(s) returning the correct lock'
	 proved-consistent='true'
	 consistent='true'
	 result-type='214'/>

<ir-drop type='WarningDrop'
	 line='14'
	 file='/TestFinalExpressions/src/test_final_exprs/TestArrayRefs.java'
	 offset='385'
	 hash='-760856927'
	 context='-1044904702'
	 message='Lock expression &quot;array [ 0 ]&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<promise-drop type='RegionModel'
	 line='0'
	 file='java.lang.[]'
	 offset='-1'
	 hash='-1305411288'
	 context='156839830'
	 message='Region public []'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<ir-drop type='WarningDrop'
	 line='75'
	 file='/TestFinalExpressions/src/test_final_exprs/TestMethodCall.java'
	 offset='1841'
	 hash='1981281566'
	 context='-510545765'
	 message='Lock expression &quot;t.instanceMethod_noReturnsLock&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<promise-drop type='RegionModel'
	 line='14'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='302'
	 hash='366029066'
	 context='1906180653'
	 message='Region   test_final_exprs.TestInstanceFieldRefs.InstanceRegion'
	 category='Regions'
	 proved-consistent='true'
	 checked-by-analysis='true'
	 from-src='true'/>

<result-drop type='ResultDrop'
	 line='40'
	 file='/TestFinalExpressions/src/test_final_exprs/TestStaticFieldRefs.java'
	 offset='1214'
	 hash='66169652'
	 context='-368329174'
	 message='Lock &quot;StaticLock&quot; not held when accessing test_final_exprs.TestStaticFieldRefs.staticProtectedField'
	 category='unprotected field access(es); possible race condition detected'
	 result-type='205'/>

<ir-drop type='WarningDrop'
	 line='10'
	 file='/TestFinalExpressions/src/test_final_exprs/TestLocalVars.java'
	 offset='270'
	 hash='112'
	 context='719108984'
	 message='Lock expression &quot;p&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='WarningDrop'
	 line='51'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='1469'
	 hash='-1367744158'
	 context='1145950473'
	 message='Lock expression &quot;p.finalField&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='WarningDrop'
	 line='11'
	 file='/TestFinalExpressions/src/test_final_exprs/TestClassExprs.java'
	 offset='346'
	 hash='-68078215'
	 context='-65449010'
	 message='Lock expression &quot;java.lang.Object . class&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

<ir-drop type='WarningDrop'
	 line='222'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='7216'
	 hash='-937469124'
	 context='978655'
	 message='Lock expression &quot;this.protectedField&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<ir-drop type='WarningDrop'
	 line='53'
	 file='/TestFinalExpressions/src/test_final_exprs/TestLocalVars.java'
	 offset='1317'
	 hash='112'
	 context='1286201980'
	 message='Lock expression &quot;p&quot; is not final'
	 category='non-final lock expression(s); analysis cannot determine which lock is being acquired'
	 result-type='219'/>

<ir-drop type='WarningDrop'
	 line='127'
	 file='/TestFinalExpressions/src/test_final_exprs/TestInstanceFieldRefs.java'
	 offset='3860'
	 hash='-937469124'
	 context='1833908424'
	 message='Lock expression &quot;this.protectedField&quot; does not name a programmer-declared lock; consider declaring what state is protected by the referenced lock'
	 category='unidentifiable lock(s); what is the name of the lock? what state is being protected?'
	 result-type='220'/>

</sea-summary>

