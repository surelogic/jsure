package require java

# This is a little utility proc use to check the output of
# the error file generated by the last call to "compile"

proc match_err_or_warn { pattern } {
    global last_compile_warn_or_error

    if {$last_compile_warn_or_error == {}} {
	return 0
    } else {
	set buff [cat $last_compile_warn_or_error]
	return 0
	#return [string match $pattern $buff]
    }
}

# This little utility proc will return the string OK
# if PASS or WARN is passed in as the result, otherwise
# it will return the passed in test result

proc ok_pass_or_warn { result } {
    if {$result == "PASS" || $result == "WARN"} {
        return OK
    } else {
        return $result
    }
}

proc saveas { file data } {
  puts "Calling to Java:saveas with $data"
  set result [java::call com.surelogic.jsure.tests.CalledFromTcl saveas $file $data]
  puts "Done with saveas(): $result"
  return $file
}
	
proc compile { args } {
  global last_compile_warn_or_error last_compile_output
  set last_compile_warn_or_error {}
  set last_compile_output {}

  puts "Calling to Java:compile with $args"
  set result [java::call com.surelogic.jsure.tests.CalledFromTcl compile $args]
  puts "Done with compile(): $result"
}

proc compile_and_run { args } {
  set result [eval compile $args]
  if {$result != "PASS" && $result != "WARN"} {
      return "COMPILE $result"
  }
  puts "Running $args"
}

# Delete a file name, do not generate an error if it does not exist
proc delete { args } {
  puts "Calling to Java:delete with $args"
  set result [java::call com.surelogic.jsure.tests.CalledFromTcl delete $args]
  puts "Done with delete(): $result"
}