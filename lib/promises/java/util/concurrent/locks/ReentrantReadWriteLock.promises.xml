<package name="java.util.concurrent.locks">
 <class name="ReentrantReadWriteLock">
  <ThreadSafe/>

  <method name="readLock">
   <regionEffects>reads Instance</regionEffects>
  </method>

  <method name="writeLock">
   <regionEffects>reads Instance</regionEffects>
  </method>

  <class name="ReadLock">
   <ThreadSafe/>
   
   <method name="lock">
    <regionEffects>writes Instance</regionEffects>
    <!--starts>nothing</starts-->
   </method>
   <method name="lockInterruptibly">
    <regionEffects>writes Instance</regionEffects>
    <!--starts>nothing</starts-->
   </method>
   <method name="newCondition">
    <regionEffects>writes Instance</regionEffects>
    <!--starts>nothing</starts-->
   </method>
   <method name="tryLock">
    <regionEffects>writes Instance</regionEffects>
    <!--starts>nothing</starts-->
   </method>
   <method name="tryLock" params="long, java.util.concurrent.TimeUnit">
    <regionEffects>writes Instance</regionEffects>
    <!--starts>nothing</starts-->
   </method>
   <method name="unlock">
    <regionEffects>writes Instance</regionEffects>
    <!--starts>nothing</starts-->
   </method>
  </class>

  <class name="WriteLock">
   <ThreadSafe/>
   
   <method name="lock">
    <regionEffects>writes Instance</regionEffects>
    <!--starts>nothing</starts-->
   </method>
   <method name="lockInterruptibly">
    <regionEffects>writes Instance</regionEffects>
    <!--starts>nothing</starts-->
   </method>
   <method name="newCondition">
    <regionEffects>writes Instance</regionEffects>
    <!--starts>nothing</starts-->
   </method>
   <method name="tryLock">
    <regionEffects>writes Instance</regionEffects>
    <!--starts>nothing</starts-->
   </method>
   <method name="tryLock" params="long, java.util.concurrent.TimeUnit">
    <regionEffects>writes Instance</regionEffects>
    <!--starts>nothing</starts-->
   </method>
   <method name="unlock">
    <regionEffects>writes Instance</regionEffects>
    <!--starts>nothing</starts-->
   </method>
  </class>
 </class>
</package>
