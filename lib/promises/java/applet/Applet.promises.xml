<package name="java.applet">
    <class name="Applet">

    <ThreadRoleImport>java.awt</ThreadRoleImport>

    <Promise>@ThreadRole(AWT) for new(**)</Promise>

<!--
    <Promise>@ThreadRoleTransparent for get*Info()</Promise>
    <Promise>@RegionEffects(writes none) for play(**) | getCodeBase()</Promise>
-->
    <Promise>@RegionEffects(reads this:Instance) for get*(**) | is*(**)</Promise>
    <Promise>@RegionEffects(writes this:Instance) for play(**) | init(**) | start() | stop() | destroy() | new(**)</Promise>

    <MapRegion>Instance into java.awt.event.ActionListener:GUIinternal</MapRegion>
      <method name="isActive" params="">
        <ThreadRoleTransparent/>
      </method>
      <method name="getDocumentBase" params="">
        <ThreadRoleTransparent/>
      </method>
      <method name="getCodeBase" params="">
        <ThreadRoleTransparent/>
      </method>
      <method name="getAppletContext" params="">
        <ThreadRole>AWT</ThreadRole>
      </method>
      <method name="getParameter" params="java.lang.String">
        <ThreadRole>AWT</ThreadRole>
      </method>
      <method name="getAudioClip" params="java.net.URL">
        <ThreadRoleTransparent/>
      </method>
      <method name="getAudioClip" params="java.net.URL, java.lang.String">
        <ThreadRoleTransparent/>
      </method>
      <method name="play" params="java.net.URL">
        <ThreadRoleTransparent/>
      </method>
      <method name="play" params="java.net.URL, java.lang.String">
        <ThreadRoleTransparent/>
      </method>
      <method name="init" params="">
          <ThreadRole>AWT</ThreadRole>
      </method>
      <method name="destroy" params="">
          <ThreadRole>AWT</ThreadRole>
      </method>
      <method name="start" params="">
          <ThreadRole>AWT</ThreadRole>
      </method>
      <method name="stop" params="">
          <ThreadRole>AWT</ThreadRole>
      </method>

    </class>
</package>
